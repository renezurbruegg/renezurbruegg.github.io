var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.224,1,0.859]],["body/components/AppComponent.html",[0,0.427,1,1.59,2,1.579,3,0.29,4,0.253,5,1.433,6,1.739,7,1.433,8,1.433,9,0.253,10,3.751,11,0.542,12,5.533,13,2.879,14,5.533,15,1.379,16,1.433,17,1.903,18,3.722,19,1.579,20,6.037,21,1.482,22,5.533,23,0.253,24,0.621,25,3.142,26,0.29,27,0.025,28,0.638,29,1.345,30,0.854,31,4.136,32,0.914,33,4.425,34,0.497,35,0.638,36,0.29,37,0.497,38,1.263,39,1.792,40,1.682,41,1.433,42,1.806,43,1.433,44,0.56,45,1.433,46,1.043,47,1.433,48,1.043,49,0.689,50,1.433,51,1.043,52,1.345,53,1.433,54,1.112,55,1.345,56,1.433,57,1.112,58,1.433,59,1.043,60,0.797,61,1.433,62,1.043,63,1.043,64,1.185,65,1.433,66,1.043,67,0.797,68,1.433,69,1.112,70,1.345,71,0.977,72,1.433,73,1.043,74,1.433,75,1.043,76,1.433,77,0.977,78,1.043,79,1.433,80,1.043,81,1.433,82,1.433,83,1.433,84,0.015,85,0.019,86,0.015]],["title/injectables/AppConfig.html",[87,1.437,88,0.706]],["body/injectables/AppConfig.html",[3,0.16,4,0.139,9,0.356,11,0.45,13,2.55,15,0.708,23,0.139,24,0.62,26,0.376,27,0.025,28,0.826,29,1.115,30,0.946,32,1.288,34,0.62,35,0.352,36,0.16,37,0.495,44,0.409,49,0.38,84,0.009,85,0.013,86,0.009,87,1.541,88,1.012,89,1.641,90,2.069,91,3.871,92,3.664,93,2.759,94,1.658,95,4.407,96,4.407,97,1.645,98,1.5,99,6.026,100,1.977,101,0.922,102,3.664,103,3.668,104,3.668,105,4.155,106,2.065,107,3.668,108,0.539,109,1.27,110,1.702,111,1.588,112,1.804,113,3.668,114,1.108,115,0.636,116,2.44,117,2.701,118,1.905,119,1.961,120,1.678,121,2.129,122,2.742,123,2.467,124,1.541,125,1.909,126,1.301,127,1.515,128,3.668,129,1.181,130,2.205,131,1.387,132,6.139,133,5.726,134,2.44,135,3.11,136,3.928,137,4.901,138,4.821,139,4.407,140,5.891,141,2.406,142,2.059,143,3.668,144,3.11,145,2.44,146,2.742,147,1.288,148,3.297,149,3.668,150,3.668,151,3.668,152,3.668,153,3.668,154,3.712,155,2.44,156,2.44,157,2.069,158,2.44,159,2.44,160,3.294,161,3.668,162,3.11,163,3.668,164,3.11,165,1.909,166,2.44,167,4.454,168,1.772,169,1.541,170,3.668,171,2.293,172,3.668,173,4.454,174,3.736,175,0.983,176,1.772,177,1.65,178,3.668,179,3.668,180,2.44,181,3.712,182,3.668,183,2.205,184,3.668,185,3.668,186,2.467,187,3.668,188,3.668,189,2.467,190,3.11,191,3.668,192,3.668,193,2.467,194,2.481,195,3.668,196,3.668,197,2.44,198,2.368,199,2.44,200,2.44,201,2.44,202,1.634,203,1.772,204,3.668,205,1.772,206,0.654,207,1.374,208,1.374,209,0.79,210,2.069,211,2.069,212,1.179,213,2.069,214,0.959,215,2.44,216,2.44,217,0.959,218,0.864,219,1.27,220,1.65,221,1.266,222,4.407,223,2.44,224,2.44,225,2.44,226,3.736,227,2.44,228,2.44,229,2.44,230,2.44,231,1.025,232,2.44,233,1.824,234,1.374,235,2.44,236,1.374,237,1.772,238,1.374,239,1.047,240,1.824,241,2.44,242,2.44,243,1.824,244,1.098,245,2.44,246,2.964,247,0.959,248,0.79,249,0.842,250,1.442,251,1.374,252,1.541,253,1.179,254,1.27,255,2.44,256,1.374,257,1.428,258,2.065,259,0.898,260,2.44,261,2.44,262,3.668,263,2.44,264,2.44,265,2.44,266,2.248,267,2.069,268,2.44,269,2.44,270,2.44,271,2.44,272,2.44,273,2.44,274,1.824,275,2.44,276,3.11,277,3.668,278,1.824,279,2.44,280,2.44,281,2.293,282,0.742,283,2.44,284,3.668,285,2.44,286,2.44,287,2.44,288,3.294,289,3.668,290,2.44,291,2.44,292,2.069,293,2.44,294,2.44,295,2.44,296,2.44,297,2.069,298,4.407,299,2.44,300,3.668,301,3.668,302,3.668]],["title/modules/AppModule.html",[303,2.3,304,2.3]],["body/modules/AppModule.html",[1,1.665,3,0.204,4,0.178,9,0.178,15,0.601,27,0.025,34,0.793,35,0.632,36,0.287,37,0.35,38,0.889,46,1.416,48,1.416,49,0.485,51,1.485,54,1.51,57,1.51,59,1.416,60,0.561,62,1.416,63,1.416,64,1.173,66,1.416,67,0.561,69,1.51,71,0.967,73,1.416,75,1.485,77,1.327,78,1.032,80,1.416,84,0.011,85,0.015,86,0.011,88,1.302,111,1.009,119,0.947,141,1.308,142,1.308,146,2.328,147,0.643,202,0.889,206,0.834,209,1.419,210,2.64,252,1.308,303,2.095,304,4.819,305,1.908,306,2.095,307,4.296,308,4.11,309,4.296,310,1.908,311,2.64,312,2.64,313,2.64,314,2.64,315,2.64,316,3.683,317,2.075,318,3.683,319,3.683,320,3.714,321,2.328,322,1.308,323,2.328,324,4.38,325,3.714,326,4.38,327,3.714,328,2.328,329,3.714,330,3.114,331,3.114,332,4.38,333,3.114,334,3.114,335,3.114,336,4.38,337,2.095,338,4.38,339,4.38,340,4.38,341,4.38,342,4.38,343,4.38,344,4.38,345,4.38,346,4.38,347,4.38,348,1.401,349,2.095,350,2.64,351,3.114,352,1.621,353,2.328,354,4.38,355,3.274,356,4.38,357,5.067,358,4.38,359,2.095,360,1.401,361,4.38,362,0.947,363,3.114,364,4.38,365,2.64,366,3.114,367,1.908,368,2.328,369,2.328,370,3.114,371,2.64,372,2.095,373,2.64,374,4.38,375,3.114,376,2.328,377,3.114,378,2.64,379,4.38,380,2.64,381,2.64,382,2.095,383,2.64,384,2.095,385,2.64,386,1.753,387,3.274,388,2.64,389,2.64,390,3.274,391,2.64,392,3.114,393,3.114,394,3.114,395,3.114,396,3.114,397,2.095,398,1.908,399,3.114,400,1.672,401,5.067,402,4.38,403,5.067,404,3.274,405,2.328,406,3.114,407,3.114]],["title/modules/AppRoutingModule.html",[303,2.3,316,2.095]],["body/modules/AppRoutingModule.html",[0,0.429,3,0.294,4,0.256,9,0.256,27,0.025,34,0.783,35,0.646,36,0.294,37,0.503,48,1.314,49,0.697,57,1.125,59,1.314,60,1.004,62,1.314,63,1.055,64,1.199,66,1.055,67,0.806,77,1.23,78,1.055,80,1.314,84,0.016,85,0.019,86,0.016,100,1.546,129,1.199,181,4.632,305,2.744,310,2.744,316,3.416,325,3.796,329,4.725,349,3.011,350,3.796,352,2.33,353,3.347,367,2.744,371,3.796,372,3.011,373,3.796,378,3.796,382,3.011,383,3.796,384,3.011,385,3.796,390,3.347,408,4.477,409,4.477,410,3.069,411,5.574,412,2.744,413,4.481,414,4.477,415,4.477,416,1.881,417,4.477,418,4.477,419,3.011,420,2.014,421,5.574,422,2.744,423,4.477,424,1.278,425,2.014,426,5.54,427,3.011,428,3.011,429,4.477,430,3.011,431,4.477,432,4.477]],["title/guards/AuthGuard.html",[413,2.3,433,2.556]],["body/guards/AuthGuard.html",[3,0.301,4,0.262,9,0.262,11,0.563,18,3.089,23,0.262,26,0.372,27,0.025,32,1.17,34,0.689,35,0.662,36,0.301,37,0.516,44,0.525,84,0.016,85,0.02,86,0.016,87,2.379,94,1.423,101,1.423,108,1.25,114,1.423,115,0.817,126,1.082,202,1.829,203,2.218,317,2.345,360,2.066,367,2.814,400,1.722,412,2.814,413,3.808,419,3.089,424,1.616,425,2.548,426,5.433,434,4.592,435,3.893,436,3.47,437,5.662,438,4.8,439,3.808,440,2.966,441,3.893,442,5.011,443,4.592,444,5.662,445,6.409,446,4.129,447,6.409,448,4.592,449,1.082,450,3.432,451,1.396,452,4.232,453,3.893,454,3.893,455,3.432,456,3.893,457,4.592,458,3.893,459,4.592,460,1.23]],["title/injectables/AuthenticationService.html",[87,1.437,317,1.18]],["body/injectables/AuthenticationService.html",[3,0.233,4,0.203,9,0.203,11,0.435,18,2.389,23,0.203,24,0.539,26,0.382,27,0.025,28,0.923,32,1.344,34,0.703,35,0.512,36,0.233,37,0.399,44,0.445,84,0.012,85,0.017,86,0.012,87,2.015,88,0.734,89,2.389,94,1.365,97,1.853,98,1.369,101,1.206,106,2.701,108,0.784,109,1.849,110,1.884,114,1.206,115,0.692,120,1.459,121,2.317,126,1.533,127,0.893,135,4.067,144,4.067,147,0.991,165,1.849,171,1.849,174,4.067,175,1.285,202,1.786,206,0.952,212,1.716,214,1.396,220,1.598,237,1.716,244,1.598,257,1.151,282,1.08,317,1.656,322,2.551,367,3.835,400,1.651,424,1.988,425,2.733,439,3.226,449,0.837,450,2.656,452,4.54,455,2.656,460,1.455,461,3.012,462,5.431,463,5.815,464,5.815,465,3.564,466,5.431,467,4.797,468,3.552,469,6.073,470,4.797,471,2.317,472,2.317,473,3.586,474,4.797,475,3.911,476,3.552,477,4.797,478,4.782,479,3.552,480,3.328,481,2.94,482,4.797,483,4.797,484,3.564,485,3.911,486,3.586,487,4.54,488,2.617,489,3.552,490,2.826,491,3.552,492,3.552,493,3.552,494,3.012,495,1.716,496,3.552,497,3.552,498,1.396,499,4.797,500,3.552,501,3.552,502,3.552,503,1.226,504,3.552,505,3.552,506,3.552,507,3.552,508,3.552,509,3.552,510,3.552,511,4.797,512,3.552,513,3.552,514,3.552,515,3.552,516,3.552,517,3.552,518,3.552,519,3.552]],["title/interfaces/ChartAxis.html",[520,0.419,521,2.095]],["body/interfaces/ChartAxis.html",[3,0.302,4,0.263,9,0.263,11,0.564,23,0.263,24,0.637,25,2.396,26,0.372,27,0.025,28,0.95,34,0.517,36,0.372,44,0.427,49,1.044,60,0.829,84,0.016,85,0.02,86,0.016,100,1.59,118,1.59,119,1.4,121,2.224,124,1.934,129,1.647,130,2.964,131,1.425,183,2.766,416,1.934,520,0.807,521,3.476,522,1.59,523,3.442,524,2.951,525,4.134,526,2.671,527,3.461,528,3.428,529,2.224,530,3.903,531,3.903,532,2.383,533,1.934,534,2.396,535,2.822,536,2.822,537,3.476,538,3.903,539,3.903,540,2.072,541,2.072,542,3.097,543,2.822,544,3.903,545,2.396,546,3.903,547,3.903,548,3.903]],["title/components/ChartComponent.html",[0,0.224,46,0.806]],["body/components/ChartComponent.html",[0,0.334,1,0.367,2,0.696,3,0.096,4,0.083,5,0.473,6,0.574,7,0.473,8,0.473,9,0.083,11,0.45,13,2.55,15,1.137,16,0.473,17,1.597,19,0.696,21,0.654,23,0.083,24,0.274,26,0.381,27,0.026,28,0.453,29,1.422,30,1.065,32,1.278,34,0.572,35,0.211,36,0.345,37,0.353,38,0.417,39,0.79,40,1.34,41,0.473,42,1.164,43,0.473,44,0.472,45,0.473,46,0.864,47,0.473,48,0.344,49,0.989,50,0.473,51,0.344,52,0.444,53,0.473,54,0.367,55,0.444,56,0.473,57,0.367,58,0.473,59,0.344,60,0.439,61,0.473,62,0.344,63,0.344,64,0.654,65,0.473,66,0.344,67,0.917,68,0.473,69,0.367,70,0.444,71,0.323,72,0.473,73,0.344,74,0.473,75,0.344,76,0.473,77,0.323,78,0.344,79,0.473,80,0.344,81,0.473,82,0.473,83,0.473,84,0.005,85,0.009,86,0.005,88,0.302,91,0.896,93,1.374,94,1.635,97,1.645,98,1.258,101,0.613,102,2.741,108,0.323,110,1.321,111,1.321,112,1.501,114,0.922,115,0.529,117,1.495,118,1.757,119,0.955,120,1.24,121,1.179,122,2.348,124,2.059,125,1.27,126,1.271,127,1.387,129,0.841,130,1.65,131,0.922,136,1.824,141,1.964,142,1.713,147,0.91,148,2.467,160,1.092,169,1.025,175,1.253,186,1.641,193,1.641,194,0.823,202,1.164,206,0.391,209,0.473,214,0.574,218,0.961,220,1.983,221,1.266,231,1.319,234,3.357,236,2.065,238,1.374,239,1.54,240,2.741,244,1.098,247,0.959,248,0.79,249,0.842,250,0.959,252,1.319,254,0.76,257,0.79,259,0.898,266,1.495,274,1.824,282,1.49,310,1.495,322,0.614,362,0.444,400,0.444,446,1.641,449,0.864,451,0.742,460,0.983,471,1.179,472,0.706,481,1.495,498,0.574,503,0.842,520,0.179,522,0.504,525,0.983,526,1.234,528,2.808,529,1.97,532,2.207,533,1.541,534,3.195,535,0.896,537,2.865,540,1.835,541,2.205,545,1.909,549,3.821,550,0.983,551,1.025,552,1.824,553,2.068,554,1.098,555,1.234,556,2.663,557,2.348,558,1.27,559,2.068,560,1.824,561,2.663,562,2.068,563,3.964,564,2.663,565,2.44,566,3.109,567,2.663,568,3.109,569,4.033,570,2.44,571,2.663,572,3.109,573,3.109,574,3.109,575,2.741,576,1.188,577,2.44,578,3.109,579,3.109,580,1.27,581,1.239,582,3.224,583,3.109,584,3.457,585,2.44,586,2.743,587,1.27,588,2.068,589,2.068,590,2.743,591,2.296,592,1.732,593,1.495,594,2.068,595,2.068,596,1.824,597,2.068,598,2.766,599,2.068,600,2.112,601,2.068,602,1.634,603,1.461,604,0.959,605,2.068,606,1.461,607,2.247,608,1.641,609,2.068,610,1.925,611,2.068,612,4.033,613,1.461,614,2.068,615,2.068,616,2.068,617,1.461,618,2.068,619,1.461,620,1.824,621,1.461,622,4.155,623,1.179,624,2.068,625,1.461,626,2.068,627,3.736,628,4.155,629,1.461,630,2.068,631,2.068,632,2.068,633,1.461,634,1.461,635,1.461,636,1.461,637,1.461,638,2.068,639,2.068,640,2.068,641,1.461,642,1.824,643,2.068,644,2.663,645,1.461,646,2.068,647,1.461,648,1.641,649,1.495,650,2.068,651,1.925,652,1.461,653,1.824,654,2.7,655,3.109,656,1.461,657,2.068,658,1.374,659,1.461,660,2.112,661,1.824,662,2.068,663,2.068,664,1.084,665,1.461,666,1.641,667,1.092,668,1.239,669,0.983,670,1.239,671,1.239,672,2.112,673,1.092,674,0.896,675,1.824,676,2.741,677,3.109,678,2.068,679,2.068,680,0.896,681,1.239,682,1.239,683,2.734,684,1.239,685,3.964,686,1.239,687,1.239,688,1.239,689,1.239,690,1.239,691,1.239,692,0.983,693,1.239,694,1.824,695,3.109,696,1.239,697,0.896,698,1.495,699,1.824,700,2.068,701,2.068,702,1.092,703,2.068,704,1.239,705,1.239,706,1.239,707,1.239,708,1.239,709,1.239,710,1.239,711,1.239,712,0.823,713,1.239,714,3.457,715,1.641,716,1.239,717,1.239,718,1.239,719,0.983,720,1.239,721,2.741,722,1.239,723,1.239,724,2.068,725,3.109,726,2.663,727,1.239,728,1.239,729,2.068,730,1.239,731,0.823,732,1.239,733,0.896,734,1.239,735,1.824,736,1.239,737,1.239,738,2.068,739,1.239,740,1.495,741,0.983,742,0.983,743,1.092,744,1.239,745,1.239,746,1.239,747,2.348,748,1.239,749,2.068,750,2.068,751,1.239,752,1.239,753,2.068,754,2.068,755,1.239,756,1.239,757,1.239,758,1.239,759,1.239,760,1.239,761,1.239,762,1.239,763,1.239,764,1.239,765,1.239,766,0.983,767,1.239,768,1.239,769,2.068,770,2.068,771,1.239,772,1.092,773,1.239,774,1.239,775,2.068,776,2.068,777,1.239,778,1.239,779,1.239,780,1.239,781,1.239,782,1.239,783,1.239,784,1.239,785,1.239,786,2.068,787,1.239,788,1.239,789,1.239,790,1.239,791,1.092,792,1.092,793,1.239,794,1.239,795,1.239,796,1.239,797,1.239,798,1.239,799,3.109,800,1.239,801,1.239,802,1.239,803,1.239,804,1.239,805,1.239,806,2.44,807,2.112,808,2.44,809,2.44,810,2.44,811,1.461,812,1.234,813,1.461,814,1.092,815,1.461,816,1.925,817,1.495,818,1.461,819,1.092,820,1.239,821,2.068,822,0.896,823,1.461,824,0.983,825,1.495,826,1.461,827,0.896,828,0.983,829,1.239,830,0.823,831,1.179,832,1.092,833,1.239,834,0.896,835,0.983]],["title/interfaces/ChartDataset.html",[520,0.419,529,1.652]],["body/interfaces/ChartDataset.html",[3,0.245,4,0.213,9,0.213,11,0.457,23,0.213,24,0.557,26,0.441,27,0.025,28,0.978,29,1.135,30,0.957,36,0.325,44,0.573,49,0.772,67,0.893,84,0.013,85,0.017,86,0.013,94,0.938,115,0.949,118,2.048,120,1.507,123,3.334,124,2.339,129,1,131,0.938,141,2.492,218,1.585,234,3.866,239,1.762,449,1.55,460,1,503,1.922,520,0.682,522,1.288,526,2.427,527,2.791,528,2.58,529,2.983,533,2.083,534,1.942,536,2.287,540,2.669,541,2.231,648,3.334,660,2.51,664,1.711,680,2.287,683,3.371,692,2.51,712,2.101,719,3.744,740,3.784,741,3.334,742,3.334,772,4.161,831,1.803,836,2.789,837,3.732,838,5.029,839,5.234,840,5.567,841,5.567,842,5.567,843,2.667,844,3.784,845,3.34,846,3.744,847,3.706,848,3.038,849,4.203,850,4.203,851,3.163,852,3.163,853,3.163,854,2.51,855,3.163,856,3.163,857,3.163,858,3.163,859,3.163,860,3.163,861,3.163,862,3.163,863,3.163,864,3.163,865,3.163,866,3.163,867,3.163,868,3.163,869,3.163,870,2.789,871,3.163,872,3.163,873,4.203,874,3.163]],["title/components/ChartFormComponent.html",[0,0.224,48,0.806]],["body/components/ChartFormComponent.html",[0,0.335,1,0.574,2,0.996,3,0.15,4,0.13,5,0.74,6,0.898,7,0.74,8,0.74,9,0.13,11,0.428,15,1.251,16,0.74,17,1.748,19,0.996,21,0.935,23,0.242,24,0.392,26,0.367,27,0.025,28,0.611,29,0.695,30,0.674,32,1.315,34,0.604,35,0.33,36,0.15,37,0.257,38,0.652,39,1.13,40,1.061,41,0.74,42,1.353,43,0.74,44,0.569,45,0.74,46,0.538,47,0.74,48,1.117,49,1.072,50,0.74,51,0.538,52,0.695,53,0.74,54,0.574,55,0.695,56,0.74,57,0.574,58,0.74,59,0.538,60,0.411,61,0.74,62,0.538,63,0.538,64,0.612,65,0.74,66,0.538,67,0.919,68,0.74,69,0.574,70,0.695,71,0.504,72,0.74,73,0.538,74,0.74,75,0.538,76,0.74,77,0.504,78,0.538,79,0.74,80,0.538,81,0.74,82,0.74,83,0.74,84,0.008,85,0.012,86,0.008,88,0.472,93,1.965,94,0.574,97,1.853,98,0.996,100,1.205,101,0.877,105,4.018,108,0.504,109,1.189,110,1.535,111,1.535,112,1.745,114,1.064,115,0.611,118,1.462,119,0.695,120,1.552,121,1.104,126,1.394,127,1.487,129,1.668,130,1.905,131,0.877,141,1.466,147,0.721,162,2.958,165,1.189,171,1.189,206,0.612,207,1.286,208,1.286,209,0.74,220,1.028,221,2.119,226,5.117,233,1.708,234,3.398,237,2.045,244,1.028,247,0.898,248,0.74,249,0.789,250,1.371,251,1.286,252,0.96,253,1.104,254,1.189,256,1.286,257,0.74,258,1.286,259,0.841,282,1.636,362,0.695,372,4.323,387,1.708,397,3.188,398,2.138,416,1.991,420,2.132,451,1.061,472,1.686,473,2.608,488,2.519,498,0.898,503,0.789,521,2.904,525,2.347,526,1.863,528,3.004,532,2.485,534,1.816,535,1.4,537,2.594,555,1.664,576,1.535,592,2.2,607,2.904,610,3.815,623,1.686,669,1.537,683,2.466,719,2.848,721,2.608,731,1.965,740,2.904,747,2.608,792,2.608,812,0.898,814,3.165,816,3.298,817,2.904,820,1.937,822,2.594,825,2.138,827,1.4,828,2.848,830,1.286,831,1.686,834,1.4,835,3.188,845,2.668,870,2.608,875,5.448,876,1.937,877,2.138,878,2.668,879,3.589,880,4.234,881,3.49,882,3.589,883,2.848,884,5.105,885,4.234,886,4.234,887,4.739,888,4.234,889,3.49,890,4.234,891,3.49,892,4.739,893,3.49,894,2.285,895,5.203,896,2.285,897,2.285,898,2.285,899,3.49,900,2.285,901,4.234,902,2.285,903,2.285,904,2.285,905,3.49,906,2.285,907,2.285,908,2.285,909,4.234,910,2.285,911,1.816,912,3.49,913,1.991,914,2.285,915,3.49,916,2.285,917,1.286,918,3.589,919,4.739,920,3.49,921,1.937,922,1.937,923,2.285,924,2.285,925,2.285,926,2.285,927,2.285,928,1.937,929,1.708,930,2.285,931,2.285,932,2.285,933,2.285,934,1.937,935,2.285,936,4.234,937,2.285,938,2.285,939,2.285,940,2.285,941,2.285,942,3.49,943,3.49,944,2.904,945,3.49,946,1.816,947,2.958,948,3.49,949,1.4,950,1.708,951,2.848,952,3.589,953,1.937,954,2.347,955,2.285,956,3.165,957,3.128,958,2.594,959,2.285,960,2.285,961,3.816,962,2.285,963,1.708,964,2.608,965,2.285,966,1.937,967,1.708,968,1.937,969,2.285,970,1.708,971,2.285,972,1.708]],["title/interfaces/ChartJsDataset.html",[520,0.419,846,2.3]],["body/interfaces/ChartJsDataset.html",[3,0.255,4,0.222,9,0.222,23,0.222,24,0.571,26,0.429,27,0.025,28,0.957,29,1.547,30,1.163,36,0.334,44,0.36,49,0.938,67,0.699,84,0.014,85,0.018,86,0.014,94,1.279,115,1,118,1.756,120,1.18,123,2.61,124,2.384,129,1.52,131,1.426,141,2.137,218,1.608,234,3.866,239,1.832,449,1.199,460,1.363,503,1.959,520,0.623,522,1.34,526,2.458,527,2.185,528,2.019,529,1.875,533,1.63,536,2.378,540,2.289,541,1.746,648,2.61,660,3.422,664,1.34,680,2.378,683,2.647,692,4.051,712,2.864,740,4.007,741,2.61,742,2.61,831,2.457,836,2.901,838,4.313,839,3.29,843,2.384,844,3.691,845,2.864,846,3.422,847,2.901,848,2.378,849,3.29,850,3.29,851,3.29,852,3.29,853,3.29,854,2.61,855,3.29,856,3.29,857,3.29,858,3.29,859,3.29,860,3.29,861,3.29,862,5.302,863,4.313,864,4.313,865,3.29,866,4.313,867,3.29,868,3.29,869,4.313,870,3.803,871,3.29,872,4.313,873,5.107,874,5.107,973,5.675,974,5.675]],["title/interfaces/ChartObject.html",[520,0.419,532,1.437]],["body/interfaces/ChartObject.html",[3,0.282,4,0.245,9,0.245,11,0.527,23,0.245,24,0.61,25,2.827,26,0.433,27,0.025,28,0.931,34,0.482,36,0.356,44,0.599,49,1.065,60,0.978,84,0.015,85,0.019,86,0.015,100,1.875,115,0.903,118,1.875,119,1.652,121,2.624,124,2.282,129,1.815,130,1.933,131,1.622,183,2.68,416,2.282,520,0.791,521,2.633,522,1.483,523,3.212,524,2.236,525,4.342,526,2.46,527,3.354,528,3.257,529,2.076,530,3.642,531,4.605,532,2.629,533,2.282,534,2.827,535,3.835,536,2.633,537,4.04,538,4.605,539,3.642,540,2.444,541,2.905,542,3.653,543,3.329,544,4.605,545,2.827,546,3.642,547,4.605,548,3.642,929,4.452]],["title/components/ConfirmDialog.html",[0,0.224,51,0.806]],["body/components/ConfirmDialog.html",[0,0.356,1,0.663,2,1.11,3,0.173,4,0.151,5,0.855,7,0.855,8,0.855,9,0.151,11,0.477,15,1.289,16,0.855,17,1.798,19,0.753,21,1.237,23,0.151,24,0.437,26,0.334,27,0.025,28,0.381,30,0.75,32,1.173,34,0.66,35,0.381,36,0.255,37,0.437,38,0.753,39,1.259,40,1.182,41,0.855,42,1.454,43,0.855,44,0.559,45,0.855,46,0.622,47,0.855,48,0.622,49,0.411,50,0.855,51,1.2,52,1.903,53,0.855,54,0.663,55,0.802,56,0.855,57,0.663,58,0.855,59,0.622,60,0.831,61,0.855,62,0.622,63,0.622,64,0.707,65,0.855,66,0.622,67,0.475,68,0.855,69,0.663,70,0.802,71,0.858,72,0.855,73,0.622,74,0.855,75,0.622,76,0.855,77,0.858,78,1.28,79,0.855,80,0.622,81,0.855,82,0.855,83,0.855,84,0.009,85,0.014,86,0.009,88,0.545,94,0.663,97,1.789,98,1.55,100,1.342,101,0.977,108,0.858,109,1.373,110,1.993,111,1.65,112,1.875,114,0.663,115,0.381,118,1.875,120,1.786,126,0.916,127,1.365,129,1.042,142,1.109,147,1.052,168,1.878,169,1.633,171,2.402,175,1.574,176,1.878,177,2.077,183,1.749,198,1.878,202,1.454,203,1.275,205,2.461,206,0.707,207,1.486,208,1.486,209,0.855,217,1.037,218,1.2,219,1.373,220,1.749,236,2.189,238,1.486,239,1.811,244,1.187,246,1.775,247,1.037,248,0.855,249,0.911,250,1.528,251,1.486,252,1.109,253,1.275,254,1.373,256,1.486,257,0.855,258,1.486,259,0.971,282,0.802,348,1.187,352,3.057,362,0.802,386,2.599,400,0.802,416,2.281,424,1.55,436,1.617,449,0.622,451,0.802,460,0.707,471,1.878,495,1.275,520,0.323,524,1.373,551,1.633,555,1.528,558,1.373,576,0.855,580,1.373,591,2.189,592,2.369,604,1.528,664,1.875,674,3.121,812,1.037,911,2.023,913,1.109,975,3.6,976,1.775,977,3.454,978,2.906,979,2.956,980,2.868,981,2.868,982,3.198,983,3.328,984,2.639,985,3.451,986,3.105,987,2.639,988,2.906,989,2.906,990,2.906,991,2.639,992,2.906,993,2.906,994,3.121,995,2.906,996,2.23,997,2.639,998,2.906,999,2.639,1000,2.639,1001,2.639,1002,1.972,1003,2.023,1004,1.972,1005,1.187,1006,1.775,1007,1.972,1008,1.972,1009,1.972,1010,3.426,1011,3.426,1012,1.972,1013,2.906,1014,1.617,1015,1.972,1016,2.615,1017,1.617,1018,1.617,1019,2.615,1020,1.972,1021,2.189,1022,1.972,1023,1.972,1024,1.775,1025,1.486,1026,1.972,1027,2.402,1028,1.617,1029,1.972,1030,1.972,1031,2.189,1032,1.972,1033,1.972,1034,1.972,1035,1.775,1036,1.373,1037,1.775,1038,1.972,1039,1.617,1040,1.972,1041,1.972,1042,2.615,1043,2.906,1044,1.972,1045,1.775,1046,1.775,1047,1.373,1048,3.105,1049,1.972,1050,1.617,1051,1.775,1052,1.775,1053,1.775,1054,1.972,1055,1.972,1056,1.617,1057,1.972,1058,1.972,1059,1.972,1060,1.972,1061,1.775,1062,3.888,1063,3.888,1064,3.888,1065,3.888,1066,1.972,1067,2.639]],["title/interfaces/ConfirmationDialogData.html",[520,0.419,983,2.095]],["body/interfaces/ConfirmationDialogData.html",[0,0.364,3,0.208,4,0.181,9,0.181,11,0.389,15,0.856,17,1.189,19,0.905,21,1.189,23,0.181,24,0.498,26,0.336,27,0.025,28,0.738,30,0.856,34,0.697,35,0.458,36,0.291,37,0.498,44,0.541,51,0.747,52,1.685,60,0.571,71,0.7,77,0.7,78,1.306,84,0.011,85,0.015,86,0.011,88,0.655,94,0.797,97,1.663,98,1.267,100,1.532,108,0.7,110,1.796,111,1.437,112,1.634,118,2.087,120,1.838,127,1.286,129,1.563,142,1.864,147,1.057,168,1.532,169,1.333,171,2.309,175,1.563,176,2.144,177,1.427,183,1.997,198,2.144,202,1.582,203,2.144,205,2.472,206,0.85,207,1.786,208,1.786,209,1.028,217,1.744,218,1.206,219,1.651,220,1.997,238,1.786,239,1.726,244,1.427,246,2.134,247,1.247,248,1.028,249,1.095,250,1.744,251,1.786,252,1.333,253,1.532,254,1.651,256,1.786,257,1.028,258,1.786,259,1.168,282,0.964,348,1.427,352,1.651,362,0.964,386,1.786,400,0.964,416,2.329,424,1.461,436,1.944,449,0.747,451,0.964,460,0.85,471,2.144,495,1.532,520,0.389,522,1.095,524,2.309,551,1.333,555,1.744,558,1.651,576,1.028,580,1.651,591,1.786,592,2.011,604,2.179,664,1.532,674,3.136,812,1.247,911,2.885,913,1.333,975,1.944,976,2.134,977,3.459,978,2.371,979,2.309,980,1.786,981,1.786,982,2.882,983,3.136,985,2.371,986,2.134,988,2.371,989,2.371,990,2.371,992,2.371,993,2.371,994,1.944,995,2.371,996,2.472,998,2.371,1002,2.371,1003,2.309,1004,2.371,1005,1.427,1006,2.134,1007,3.317,1008,3.317,1009,3.317,1010,3.924,1011,3.924,1012,3.317,1013,4.144,1014,2.719,1015,3.317,1016,3.924,1017,2.719,1018,2.719,1019,3.924,1020,2.371,1021,2.498,1022,2.371,1023,2.371,1024,2.134,1025,1.786,1026,2.371,1027,2.663,1028,1.944,1029,2.371,1030,2.371,1031,2.498,1032,2.371,1033,2.371,1034,2.371,1035,2.134,1036,1.651,1037,2.134,1038,2.371,1039,1.944,1040,2.371,1041,2.371,1042,2.985,1043,3.317,1044,2.371,1045,2.134,1046,2.134,1047,1.651,1048,3.442,1049,2.371,1050,1.944,1051,2.134,1052,2.134,1053,2.134,1054,2.371,1055,2.371,1056,1.944,1057,2.371,1058,2.371,1059,2.371,1060,2.371,1061,2.134]],["title/components/ControlSliderComponent.html",[0,0.224,54,0.859]],["body/components/ControlSliderComponent.html",[0,0.374,1,0.748,2,1.211,3,0.195,4,0.17,5,0.965,6,1.17,7,0.965,8,0.965,9,0.17,11,0.365,15,1.304,16,0.965,17,1.819,19,1.211,21,1.137,23,0.282,24,0.477,26,0.279,27,0.025,30,0.819,32,1.287,34,0.555,35,0.43,36,0.195,37,0.334,38,0.85,39,1.375,40,1.29,41,0.965,42,1.778,43,0.965,44,0.459,45,0.965,46,0.702,47,0.965,48,0.702,49,0.464,50,0.965,51,0.702,52,0.905,53,0.965,54,1.355,55,1.956,56,0.965,57,0.748,58,0.965,59,0.702,60,0.536,61,0.965,62,0.702,63,0.702,64,0.798,65,0.965,66,0.702,67,0.536,68,0.965,69,0.748,70,0.905,71,0.657,72,0.965,73,0.702,74,0.965,75,0.702,76,0.965,77,0.657,78,1.494,79,0.965,80,0.702,81,0.965,82,0.965,83,0.965,84,0.01,85,0.015,86,0.01,88,0.615,94,0.748,97,1.699,101,1.067,106,2.389,108,1.092,119,1.29,126,1.27,127,1.355,129,1.137,131,1.067,142,1.783,175,1.137,202,0.85,217,2.118,218,1,221,1.465,248,0.965,359,4.377,362,0.905,368,4.74,369,4.74,397,3.326,398,2.601,436,2.601,451,1.29,460,0.798,554,1.91,555,1.668,576,1.746,580,2.209,600,2.855,610,1.825,666,2.855,712,2.389,735,3.172,812,1.943,816,3.491,817,3.491,821,2.525,822,3.303,829,2.525,830,3.208,831,2.389,833,2.525,834,3.303,835,2.003,845,2.389,895,3.598,946,2.965,949,1.825,950,2.226,951,2.855,952,2.525,954,2.003,956,2.226,957,3.735,958,2.601,961,3.172,963,3.172,964,2.226,967,2.226,970,2.226,972,3.696,975,3.886,1005,2.225,1006,2.003,1031,2.389,1042,2.855,1068,2.525,1069,4.244,1070,4.244,1071,4.244,1072,4.945,1073,4.244,1074,4.945,1075,4.945,1076,4.945,1077,3.696,1078,4.945,1079,4.244,1080,2.978,1081,4.244,1082,3.172,1083,2.978,1084,2.978,1085,2.978,1086,2.978,1087,2.978,1088,2.978,1089,2.978,1090,4.244,1091,4.244,1092,2.978,1093,2.978,1094,4.244,1095,2.978,1096,4.244,1097,5.697,1098,4.244,1099,2.978,1100,2.978,1101,2.978,1102,2.978,1103,2.978,1104,2.978,1105,3.598,1106,4.244,1107,4.244,1108,4.244,1109,4.244,1110,3.598,1111,2.525,1112,4.192,1113,2.978,1114,2.978,1115,4.192,1116,3.03,1117,2.978,1118,2.525,1119,2.525,1120,2.978,1121,4.244,1122,2.978,1123,2.525,1124,3.598,1125,2.226,1126,2.226,1127,2.226,1128,3.598,1129,2.978,1130,2.978,1131,2.978,1132,2.978,1133,2.978,1134,2.978,1135,2.978,1136,2.978,1137,2.978,1138,2.978]],["title/interfaces/DataEntry.html",[520,0.419,672,2.3]],["body/interfaces/DataEntry.html",[0,0.317,3,0.133,4,0.116,9,0.116,11,0.248,13,2.312,15,0.391,17,0.542,19,0.578,21,0.542,23,0.116,24,0.357,26,0.317,27,0.026,28,0.641,29,0.615,30,1.148,34,0.641,35,0.292,36,0.317,37,0.357,40,0.966,42,0.578,44,0.188,46,0.477,49,0.955,60,0.364,64,0.542,67,0.922,84,0.007,85,0.011,86,0.007,88,0.418,91,1.24,93,1.14,94,1.52,97,1.486,98,1.119,102,1.513,110,1.27,111,1.27,112,1.444,117,1.24,118,1.768,119,0.966,120,0.966,121,0.978,122,2.932,124,2.028,125,1.053,127,0.509,129,0.542,130,1.43,131,1.346,136,1.513,141,2.028,142,1.648,147,0.81,148,2.137,160,1.513,169,0.85,175,1.293,186,1.361,193,2.137,194,1.14,202,1.378,206,0.542,209,0.656,214,0.795,218,1.047,220,2.305,221,1.534,231,1.648,234,3.405,236,1.789,238,1.789,239,1.462,240,3.321,244,1.43,247,1.249,248,1.029,249,1.097,250,1.249,252,1.335,257,1.029,259,1.17,266,1.947,274,2.375,282,1.468,310,1.24,322,0.85,362,0.615,400,0.615,446,1.361,449,0.749,451,0.615,460,1.051,471,0.978,472,0.978,481,1.24,498,0.795,503,0.699,520,0.248,522,1.354,526,1.249,528,2.887,529,1.895,532,2.028,533,2.152,534,3.192,535,1.24,537,2.722,540,1.765,541,2.41,545,1.653,549,1.24,550,1.361,551,0.85,552,1.513,553,1.716,554,0.911,555,1.249,556,2.693,557,2.375,558,1.053,559,1.716,560,1.513,561,1.716,562,1.716,563,2.693,564,1.716,566,2.693,567,1.716,568,2.693,569,4.004,571,1.716,572,1.716,573,1.716,574,1.716,575,1.513,576,0.656,578,1.716,579,1.716,582,3.123,583,2.693,584,3.325,586,2.638,587,1.053,588,1.716,589,1.716,590,2.638,591,2.501,592,1.541,593,1.24,594,1.716,595,1.716,596,1.513,597,1.716,598,2.68,599,1.716,600,2.137,601,1.716,602,1.053,604,0.795,605,1.716,607,1.947,608,1.361,609,1.716,610,1.947,611,1.716,612,3.608,614,1.716,615,1.716,616,1.716,618,1.716,620,1.513,622,3.766,623,0.978,624,1.716,626,1.716,627,3.325,628,3.766,630,1.716,631,1.716,632,1.716,638,1.716,639,1.716,640,1.716,642,1.513,643,1.716,644,2.693,646,1.716,648,1.361,649,1.24,650,1.716,651,1.947,653,1.513,654,2.958,655,3.325,657,1.716,658,1.14,660,2.638,661,1.513,662,1.716,663,1.716,664,1.097,666,2.137,667,1.513,668,1.716,669,1.361,670,2.693,671,2.693,672,2.988,673,2.375,674,1.947,675,2.932,676,3.608,677,4.092,678,3.325,679,3.325,680,1.24,681,1.716,682,1.716,683,3.192,684,1.716,685,4.541,686,1.716,687,1.716,688,1.716,689,1.716,690,1.716,691,1.716,692,1.361,693,1.716,694,2.375,695,3.766,696,1.716,697,1.24,698,1.947,699,2.375,700,2.693,701,2.693,702,1.513,703,2.693,704,1.716,705,1.716,706,1.716,707,1.716,708,1.716,709,1.716,710,1.716,711,1.716,712,1.14,713,1.716,714,4.092,715,2.137,716,1.716,717,1.716,718,1.716,719,1.361,720,1.716,721,2.375,722,1.716,723,1.716,724,2.693,725,3.766,726,3.325,727,1.716,728,1.716,729,2.693,730,1.716,731,1.14,732,1.716,733,1.24,734,1.716,735,2.375,736,1.716,737,1.716,738,2.693,739,1.716,740,1.947,741,1.361,742,1.361,743,1.513,744,1.716,745,1.716,746,1.716,747,1.513,748,1.716,749,2.693,750,2.693,751,1.716,752,1.716,753,2.693,754,2.693,755,1.716,756,1.716,757,1.716,758,1.716,759,1.716,760,1.716,761,1.716,762,1.716,763,1.716,764,1.716,765,1.716,766,1.361,767,1.716,768,1.716,769,2.693,770,2.693,771,1.716,772,1.513,773,1.716,774,1.716,775,2.693,776,2.693,777,1.716,778,1.716,779,1.716,780,1.716,781,1.716,782,1.716,783,1.716,784,1.716,785,1.716,786,2.693,787,1.716,788,1.716,789,1.716,790,1.716,791,1.513,792,1.513,793,1.716,794,1.716,795,1.716,796,1.716,797,1.716,798,1.716,799,2.693,800,1.716,801,1.716,802,1.716,803,1.716,804,1.716,805,1.716]],["title/interceptors/ErrorInterceptor.html",[318,2.095,1139,2.556]],["body/interceptors/ErrorInterceptor.html",[3,0.296,4,0.258,9,0.258,11,0.553,23,0.258,26,0.368,27,0.025,32,1.157,34,0.735,35,0.651,36,0.296,37,0.507,44,0.519,84,0.016,85,0.02,86,0.016,87,2.353,101,1.408,108,0.996,114,1.408,115,0.808,126,1.063,202,1.599,205,2.18,206,1.209,211,3.826,212,2.18,213,3.826,214,1.774,253,2.18,257,1.462,267,4.749,276,4.749,278,4.553,281,3.17,317,2.304,318,3.433,322,2.353,360,2.03,386,3.154,419,3.035,424,1.599,425,2.52,451,1.372,465,2.765,484,3.433,485,3.768,490,3.17,498,1.774,944,2.765,996,2.18,1050,3.433,1140,3.826,1141,3.826,1142,5.601,1143,6.37,1144,5.601,1145,4.749,1146,4.749,1147,3.826,1148,4.513,1149,4.749,1150,5.4,1151,5.4,1152,4.513,1153,3.826,1154,4.749,1155,4.513,1156,4.513,1157,2.765,1158,4.513,1159,4.513,1160,4.513,1161,4.513]],["title/components/GeneralSettingsComponent.html",[0,0.224,59,0.806]],["body/components/GeneralSettingsComponent.html",[0,0.402,1,0.913,2,1.39,3,0.238,4,0.207,5,1.177,6,1.427,7,1.177,8,1.177,9,0.314,11,0.445,15,1.339,16,1.177,17,1.865,19,1.39,21,1.304,23,0.207,24,0.547,26,0.36,27,0.025,29,1.104,30,0.94,32,1.264,34,0.659,35,0.524,36,0.238,37,0.408,38,1.037,39,1.577,40,1.48,41,1.177,42,1.675,43,1.177,44,0.544,45,1.177,46,0.856,47,1.177,48,0.856,49,0.566,50,1.177,51,0.856,52,1.104,53,1.177,54,0.913,55,1.104,56,1.177,57,0.913,58,1.177,59,1.383,60,1.224,61,1.177,62,0.856,63,0.856,64,0.973,65,1.177,66,0.856,67,0.654,68,1.177,69,0.913,70,1.104,71,0.802,72,1.177,73,0.856,74,1.177,75,0.856,76,1.177,77,0.802,78,0.856,79,1.177,80,0.856,81,1.177,82,1.177,83,1.177,84,0.013,85,0.017,86,0.013,88,0.75,97,1.639,98,1.675,100,2.026,101,1.224,108,0.802,109,1.89,110,1.901,111,1.901,112,2.16,114,0.913,115,0.524,118,1.254,120,1.104,125,2.534,126,1.147,127,1.224,147,1.006,168,2.352,169,2.045,171,1.89,206,0.973,209,1.177,218,1.383,219,1.89,244,1.634,247,1.427,248,1.177,249,1.254,250,1.914,251,2.045,252,1.526,253,1.755,254,1.89,256,2.045,257,1.177,258,2.045,259,1.337,362,1.104,382,4.237,451,1.48,541,2.191,555,2.158,576,1.901,592,1.914,602,2.534,623,2.352,673,3.639,994,3.86,1024,2.443,1162,5.34,1163,3.079,1164,6.299,1165,4.869,1166,5.492,1167,4.869,1168,6.119,1169,3.632,1170,3.632,1171,3.632,1172,4.869,1173,4.869,1174,3.632,1175,3.632,1176,3.632,1177,3.632,1178,3.632]],["title/interfaces/IAppConfig.html",[198,1.652,520,0.419]],["body/interfaces/IAppConfig.html",[3,0.237,4,0.206,9,0.206,11,0.442,13,3.397,15,1.056,23,0.313,24,0.544,26,0.442,27,0.025,28,0.789,30,0.696,34,0.544,36,0.318,44,0.449,49,0.561,60,1.132,67,1.053,84,0.013,85,0.017,86,0.013,92,2.695,93,3.294,98,1.029,119,1.473,120,1.096,124,1.515,129,1.819,131,1.375,138,2.695,147,1.13,175,1.635,181,2.425,194,2.728,198,2.34,205,2.34,218,1.142,231,2.035,405,2.695,420,2.18,449,0.85,488,1.622,503,1.889,520,0.748,522,1.245,524,1.876,526,1.904,532,1.515,533,1.515,540,2.18,541,1.622,542,2.425,543,2.209,558,1.876,604,2.299,651,3.353,654,3.852,658,2.03,697,2.209,715,2.425,731,2.03,766,2.425,827,2.969,843,1.515,844,2.209,845,2.728,848,2.209,854,2.425,878,3.539,883,4.105,913,2.564,917,2.03,946,1.876,1005,1.622,1017,2.209,1018,2.209,1028,2.969,1031,3.539,1039,2.969,1077,2.695,1179,2.695,1180,2.695,1181,5.174,1182,4.107,1183,4.96,1184,3.68,1185,4.107,1186,4.107,1187,4.107,1188,4.107,1189,3.056,1190,3.056,1191,3.056,1192,3.056,1193,3.056,1194,3.259,1195,3.056,1196,3.056,1197,3.056,1198,3.056,1199,3.056,1200,3.056,1201,3.056,1202,3.621,1203,3.056,1204,3.056,1205,3.056,1206,3.056,1207,3.056,1208,3.056,1209,3.056,1210,3.056,1211,3.056,1212,3.056,1213,3.056,1214,3.056,1215,3.056,1216,3.056,1217,3.056,1218,3.056,1219,3.056,1220,3.056,1221,4.107,1222,2.695,1223,2.695,1224,3.056]],["title/interceptors/JwtInterceptor.html",[319,2.095,1139,2.556]],["body/interceptors/JwtInterceptor.html",[3,0.294,4,0.256,9,0.256,11,0.549,23,0.256,26,0.366,27,0.025,32,1.152,34,0.714,35,0.647,36,0.294,37,0.503,44,0.517,84,0.016,85,0.019,86,0.016,87,2.344,101,1.402,108,0.99,114,1.402,115,0.805,126,1.056,175,1.494,193,3.752,202,1.28,205,2.695,206,1.201,214,1.762,252,2.344,266,2.747,278,4.54,317,2.301,319,3.419,360,2.017,410,2.695,424,1.733,425,2.51,451,1.363,452,4.17,453,3.801,484,3.894,485,4.397,490,3.16,498,1.762,607,3.419,956,4.54,996,3.219,1140,3.801,1146,4.729,1147,3.801,1149,4.729,1150,5.388,1151,5.388,1153,3.801,1154,4.729,1225,3.801,1226,6.073,1227,4.483,1228,4.483,1229,5.579,1230,4.483,1231,4.483,1232,4.483,1233,4.483,1234,4.483,1235,4.483,1236,4.483,1237,4.483]],["title/components/LoginComponent.html",[0,0.224,62,0.806]],["body/components/LoginComponent.html",[0,0.339,1,0.589,2,1.015,3,0.154,4,0.134,5,0.759,7,0.759,8,0.759,9,0.134,11,0.287,15,1.235,16,0.759,17,1.73,21,0.953,23,0.246,24,0.399,26,0.339,27,0.025,28,0.784,29,1.717,30,0.996,31,1.751,32,1.308,34,0.58,35,0.338,36,0.154,37,0.483,38,0.669,39,1.152,40,1.082,41,0.759,42,1.37,43,0.759,44,0.479,45,0.759,46,0.552,47,0.759,48,0.552,49,0.365,50,0.759,51,0.552,52,0.712,53,0.759,54,0.589,55,0.712,56,0.759,57,0.589,58,0.759,59,0.552,60,0.422,61,0.759,62,1.131,63,0.552,64,0.628,65,0.759,66,0.552,67,0.422,68,0.759,69,0.589,70,0.712,71,0.517,72,0.759,73,0.552,74,0.759,75,0.552,76,0.759,77,0.517,78,0.552,79,0.759,80,0.552,81,0.759,82,0.759,83,0.759,84,0.008,85,0.012,86,0.008,94,1.207,97,1.677,100,0.809,101,0.894,106,2.003,108,0.785,114,1.081,115,0.513,117,2.18,126,1.216,127,1.297,130,1.6,131,1.498,147,0.735,165,1.219,173,3.015,175,0.953,202,1.227,203,2.077,212,1.132,218,0.552,221,2.209,231,2.373,237,1.718,239,0.669,243,2.659,248,0.759,249,0.809,281,2.939,317,1.95,321,1.751,355,1.751,360,1.054,367,3.723,400,1.46,412,1.436,420,1.6,424,1.015,440,2.319,442,4.221,451,1.082,454,3.015,455,2.659,458,3.645,460,1.383,478,3.859,480,2.18,486,2.659,487,1.751,533,1.494,554,2.323,555,1.69,576,1.555,593,2.18,598,1.132,602,1.851,607,2.18,653,3.214,658,2.003,664,1.657,698,1.436,812,2.46,816,2.18,817,2.18,822,3.33,824,3.229,827,2.18,828,3.229,830,3.276,831,2.811,832,2.659,834,2.18,847,3.214,848,2.18,879,4.376,934,3.015,944,2.942,951,2.392,957,2.942,958,3.33,963,2.659,966,3.015,968,3.015,1014,2.18,1056,2.942,1066,2.659,1082,2.659,1110,3.015,1111,1.986,1112,3.015,1116,2.18,1118,3.015,1157,1.436,1194,2.392,1238,1.986,1239,6.076,1240,3.557,1241,3.557,1242,4.3,1243,2.892,1244,4.3,1245,4.801,1246,3.557,1247,4.801,1248,4.3,1249,2.343,1250,5.434,1251,4.801,1252,3.557,1253,2.343,1254,3.557,1255,3.557,1256,2.343,1257,2.343,1258,2.343,1259,5.162,1260,2.343,1261,3.557,1262,2.343,1263,3.557,1264,4.801,1265,2.343,1266,3.557,1267,2.343,1268,4.3,1269,2.343,1270,2.343,1271,2.343,1272,2.343,1273,2.343,1274,2.343,1275,2.343,1276,2.343,1277,3.557,1278,2.343,1279,2.343,1280,2.343,1281,2.343,1282,2.343,1283,2.343,1284,2.343,1285,2.343,1286,3.557,1287,2.343,1288,2.343,1289,2.343,1290,2.343,1291,2.343,1292,2.343,1293,2.343,1294,2.343,1295,2.343,1296,2.343,1297,2.343,1298,2.343,1299,2.343,1300,1.986,1301,2.343,1302,2.343,1303,3.557,1304,2.343,1305,2.343,1306,2.343,1307,2.343,1308,2.343,1309,2.392,1310,3.557,1311,3.557,1312,3.557,1313,3.015,1314,3.557,1315,4.07,1316,3.557,1317,3.557,1318,3.557,1319,3.557,1320,3.557,1321,3.557,1322,3.557,1323,3.557,1324,3.557,1325,3.557,1326,3.557,1327,3.557,1328,3.557,1329,3.557,1330,3.557,1331,3.557,1332,3.557,1333,3.015,1334,2.659,1335,3.557,1336,3.557,1337,3.557,1338,4.801,1339,3.557,1340,3.557,1341,3.557,1342,3.557,1343,3.015,1344,3.557,1345,3.557,1346,3.557,1347,3.557,1348,3.557,1349,3.015,1350,3.557]],["title/components/MDashboardComponent.html",[0,0.224,63,0.806]],["body/components/MDashboardComponent.html",[0,0.401,1,0.911,2,1.673,3,0.238,4,0.207,5,1.174,6,1.424,7,1.174,8,1.174,9,0.207,11,0.596,15,1.338,16,1.174,17,1.864,19,1.388,21,1.302,23,0.207,24,0.546,26,0.319,27,0.025,32,1.133,34,0.658,35,0.523,36,0.238,37,0.407,38,1.035,39,1.575,40,1.478,41,1.174,42,1.673,43,1.174,44,0.544,45,1.174,46,0.854,47,1.174,48,0.854,49,0.854,50,1.174,51,0.854,52,1.102,53,1.174,54,0.911,55,1.102,56,1.174,57,0.911,58,1.174,59,0.854,60,0.653,61,1.174,62,0.854,63,1.382,64,1.751,65,1.174,66,0.854,67,0.988,68,1.174,69,0.911,70,1.102,71,0.8,72,1.174,73,0.854,74,1.174,75,0.854,76,1.174,77,0.8,78,0.854,79,1.174,80,0.854,81,1.174,82,1.174,83,1.174,84,0.013,85,0.017,86,0.013,88,0.749,91,2.221,101,1.222,108,0.8,114,0.911,115,0.523,119,1.102,126,0.854,127,0.911,129,1.302,130,2.188,177,2.188,233,2.709,239,1.388,248,1.174,282,1.478,349,3.943,362,1.102,397,2.438,398,2.979,420,3.01,451,1.478,498,1.424,532,2.043,549,3.593,551,2.043,554,1.631,557,4.101,575,4.382,581,3.073,582,3.62,586,3.27,587,2.53,593,2.979,608,3.27,642,3.634,667,2.709,669,2.438,698,2.979,814,3.634,816,2.221,817,2.221,819,4.101,828,2.438,882,4.651,918,3.073,946,2.53,951,2.438,954,2.438,957,2.221,958,2.979,972,2.709,986,3.27,1014,2.221,1125,4.382,1126,2.709,1127,2.709,1145,4.122,1334,2.709,1351,3.073,1352,4.122,1353,5.486,1354,4.862,1355,4.862,1356,4.97,1357,4.862,1358,3.943,1359,4.122,1360,3.624,1361,4.862,1362,4.862,1363,4.122,1364,3.624,1365,3.624,1366,3.624,1367,4.862,1368,3.624]],["title/components/MeasurementConfigurationComponent.html",[0,0.224,66,0.806]],["body/components/MeasurementConfigurationComponent.html",[0,0.351,1,0.641,2,1.083,3,0.167,4,0.146,5,0.827,6,1.003,7,0.827,8,0.827,9,0.146,11,0.313,13,1.328,15,1.274,16,0.827,17,1.78,19,1.083,21,1.016,23,0.146,24,0.426,26,0.351,27,0.025,28,0.723,29,1.628,30,1.034,32,1.317,34,0.63,35,0.368,36,0.167,37,0.287,38,0.728,39,1.229,40,1.153,41,0.827,42,1.43,43,0.827,44,0.554,45,0.827,46,0.601,47,0.827,48,0.601,49,0.397,50,0.827,51,0.894,52,1.376,53,0.827,54,0.641,55,0.776,56,0.827,57,0.641,58,0.827,59,0.601,60,0.459,61,0.827,62,0.601,63,0.601,64,0.684,65,0.827,66,1.181,67,1.171,68,0.827,69,0.641,70,0.776,71,0.563,72,0.827,73,0.601,74,0.827,75,0.601,76,0.827,77,0.563,78,0.894,79,0.827,80,0.601,81,0.827,82,0.827,83,0.827,84,0.009,85,0.013,86,0.009,88,0.527,91,2.324,97,1.687,98,1.529,101,0.953,106,2.135,108,1.182,110,1.735,114,0.641,115,0.368,118,1.563,119,1.524,126,1.322,127,1.259,129,1.435,131,1.259,141,1.593,142,1.593,176,1.832,177,1.706,202,1.43,206,0.684,207,1.437,208,1.437,217,1.491,218,1.322,219,1.328,221,0.881,231,2.105,239,1.292,288,1.907,348,1.148,352,1.328,353,1.907,362,0.776,384,4.334,400,0.776,419,1.716,424,1.083,449,0.894,451,1.153,460,0.684,471,1.233,495,2.421,503,2.006,554,1.706,555,1.779,576,1.623,580,1.974,592,2.206,593,2.324,598,2.421,608,2.551,610,1.564,620,1.907,654,3.985,664,1.73,812,1.003,877,2.324,883,4.409,913,1.902,917,1.437,921,3.215,922,3.215,944,3.071,946,2.355,947,4.248,977,3.23,979,1.328,994,3.071,1003,2.787,1010,2.551,1011,2.551,1016,1.716,1019,1.716,1027,1.974,1035,3.37,1036,2.608,1037,3.37,1046,1.716,1047,1.328,1048,1.716,1050,2.324,1051,3.044,1052,1.716,1053,1.716,1056,3.071,1061,1.716,1082,2.835,1222,3.383,1223,3.383,1369,5.463,1370,2.163,1371,3.793,1372,3.215,1373,4.526,1374,3.793,1375,4.526,1376,4.526,1377,2.163,1378,3.793,1379,2.552,1380,2.551,1381,3.793,1382,3.215,1383,3.215,1384,2.552,1385,2.552,1386,3.793,1387,2.552,1388,5.011,1389,3.793,1390,3.793,1391,5.011,1392,5.011,1393,5.011,1394,2.552,1395,3.793,1396,3.793,1397,2.552,1398,3.793,1399,2.552,1400,2.163,1401,2.552,1402,2.552,1403,5.011,1404,2.552,1405,5.011,1406,2.552,1407,2.552,1408,2.552,1409,2.552,1410,2.552,1411,3.793,1412,2.552,1413,2.552,1414,2.552,1415,2.552,1416,3.793,1417,3.793,1418,2.552,1419,2.552,1420,3.793,1421,2.552,1422,2.552,1423,5.011,1424,3.793]],["title/interfaces/MeasurementDevice.html",[520,0.419,917,1.925]],["body/interfaces/MeasurementDevice.html",[3,0.23,4,0.2,9,0.2,11,0.429,13,3.008,15,0.917,23,0.308,24,0.533,26,0.446,27,0.025,28,0.967,30,0.917,34,0.533,36,0.312,44,0.578,49,0.545,60,0.855,67,1.088,84,0.012,85,0.017,86,0.012,92,3.551,93,2.674,98,0.999,115,0.834,119,1.065,120,1.065,124,1.471,129,1.669,131,1.602,138,2.617,147,1.194,175,1.669,181,2.355,194,3.255,198,1.691,205,2.295,218,1.27,231,1.996,405,2.617,420,1.575,449,1.27,488,1.575,503,1.996,520,0.741,522,1.209,524,2.472,526,2.272,532,1.471,533,1.996,540,2.426,541,1.575,542,2.355,543,2.146,558,1.822,604,1.867,651,3.542,654,3.974,658,1.971,697,2.146,715,3.195,731,2.674,766,3.195,827,2.911,843,1.996,844,2.911,845,2.674,848,2.911,854,3.195,878,2.674,883,2.355,913,2.724,917,2.674,946,1.822,1005,1.575,1017,2.911,1018,2.911,1028,2.146,1031,2.674,1039,2.146,1077,4.321,1179,2.617,1180,2.617,1181,4.57,1182,2.968,1184,3.195,1185,2.968,1186,2.968,1187,2.968,1188,2.968,1189,2.968,1190,2.968,1191,4.901,1192,4.027,1193,2.968,1194,3.195,1195,2.968,1196,2.968,1197,2.968,1198,2.968,1199,4.901,1200,4.027,1201,4.027,1202,4.321,1203,2.968,1204,2.968,1205,2.968,1206,2.968,1207,2.968,1208,2.968,1209,2.968,1210,2.968,1211,2.968,1212,2.968,1213,2.968,1214,2.968,1215,2.968,1216,2.968,1217,2.968,1218,2.968,1219,2.968,1220,2.968,1221,4.027,1222,2.617,1223,2.617,1224,2.968,1382,4.57,1383,4.57]],["title/injectables/MeasurementUpdateService.html",[87,1.437,582,1.925]],["body/injectables/MeasurementUpdateService.html",[3,0.179,4,0.155,9,0.155,11,0.487,18,1.83,23,0.155,24,0.446,26,0.414,27,0.025,28,0.895,29,1.572,30,1.061,32,1.369,34,0.645,35,0.392,36,0.179,37,0.528,44,0.533,55,1.209,67,1.034,71,0.878,84,0.009,85,0.014,86,0.009,87,1.671,88,0.562,89,1.83,94,1.749,97,1.775,98,1.135,101,0.999,108,0.601,109,1.416,110,1.674,111,1.674,112,1.903,114,1.443,115,0.828,117,2.437,119,1.209,126,1.537,127,1.491,131,1.181,141,1.671,147,0.821,148,2.675,157,4.382,202,1.135,203,1.921,206,0.729,209,0.881,212,1.314,214,1.847,217,2.031,218,0.641,220,1.224,221,1.784,231,1.671,239,1.844,249,0.939,257,1.288,259,1.002,281,2.069,282,1.672,288,2.972,362,0.827,400,0.827,439,2.675,449,0.937,450,2.034,460,1.259,471,2.774,472,1.314,473,2.972,481,2.437,490,3.086,494,4.869,498,1.069,526,2.031,527,2.239,551,1.671,569,4.11,582,2.239,586,3.477,587,2.069,591,1.532,598,1.314,612,2.034,623,1.921,651,2.437,661,2.972,694,2.034,697,2.437,698,2.437,699,2.034,702,3.864,843,1.671,929,4.636,1184,3.698,1202,2.972,1300,4.869,1356,5.155,1359,3.371,1363,3.371,1425,2.307,1426,3.976,1427,3.976,1428,3.976,1429,4.699,1430,4.699,1431,4.699,1432,3.976,1433,3.976,1434,3.976,1435,3.976,1436,5.743,1437,5.743,1438,3.976,1439,3.976,1440,2.721,1441,2.721,1442,3.976,1443,2.721,1444,2.721,1445,2.721,1446,2.721,1447,3.976,1448,2.721,1449,3.976,1450,3.976,1451,2.721,1452,5.169,1453,5.169,1454,2.721,1455,3.976,1456,3.976,1457,2.721,1458,4.699,1459,2.721,1460,3.976,1461,2.721,1462,3.976,1463,3.976,1464,3.976,1465,4.699,1466,3.976,1467,2.721,1468,3.976,1469,3.976,1470,2.721,1471,3.976,1472,2.721,1473,2.721,1474,3.976,1475,3.976,1476,3.976,1477,3.976,1478,3.976,1479,2.721,1480,3.698,1481,1.83,1482,2.721,1483,2.721,1484,2.721,1485,3.976,1486,3.976,1487,3.976,1488,5.169,1489,2.721,1490,2.721,1491,2.721,1492,2.721,1493,2.721,1494,2.721,1495,2.721,1496,2.721,1497,3.976,1498,1.83,1499,2.721,1500,2.721,1501,2.721,1502,2.721,1503,2.721,1504,1.83,1505,2.675,1506,2.721,1507,2.721,1508,2.721,1509,2.721,1510,2.721,1511,2.721]],["title/components/MenuListItemComponent.html",[0,0.224,69,0.859]],["body/components/MenuListItemComponent.html",[0,0.338,1,0.809,2,1.279,3,0.211,4,0.184,5,1.042,6,1.264,7,1.042,8,1.042,9,0.184,15,1.318,16,1.042,17,1.838,19,1.279,21,1.201,23,0.184,24,0.503,26,0.417,27,0.025,28,0.464,29,0.978,30,0.621,32,1.35,34,0.658,35,0.464,36,0.211,37,0.361,38,0.918,39,1.452,40,1.363,41,1.042,42,1.592,43,1.042,44,0.544,45,1.042,46,0.758,47,1.042,48,0.758,49,0.501,50,1.042,51,0.758,52,0.978,53,1.042,54,0.809,55,0.978,56,1.042,57,0.809,58,1.042,59,0.758,60,0.579,61,1.042,62,0.758,63,0.758,64,0.862,65,1.042,66,0.758,67,0.579,68,1.042,69,1.402,70,1.932,71,1.564,72,1.042,73,0.758,74,1.042,75,0.758,76,1.042,77,0.71,78,0.758,79,1.042,80,0.758,81,1.042,82,1.042,83,1.042,84,0.011,85,0.016,86,0.011,94,0.809,97,1.201,101,1.126,108,0.71,114,1.126,115,0.646,126,1.056,127,1.126,131,1.126,202,0.918,203,2.165,219,1.674,221,1.547,317,2.151,360,1.447,376,4.937,412,1.971,441,2.727,442,4.824,446,2.164,449,1.215,451,1.363,456,2.727,555,2.027,576,1.807,580,2.332,596,2.405,666,3.944,830,1.811,831,1.554,928,2.727,1512,4.937,1513,2.727,1514,4.19,1515,5.157,1516,4.481,1517,6.23,1518,4.481,1519,5.157,1520,5.577,1521,3.014,1522,4.481,1523,4.481,1524,4.481,1525,3.217,1526,3.217,1527,3.16,1528,3.217,1529,6.23,1530,3.217,1531,3.217,1532,4.481,1533,3.217,1534,3.217,1535,3.217,1536,3.217,1537,3.217,1538,3.217,1539,3.217,1540,2.727,1541,2.164,1542,3.217,1543,3.217,1544,3.217,1545,4.481,1546,3.217,1547,3.217,1548,3.217,1549,3.217,1550,3.217,1551,3.217,1552,3.217,1553,3.217,1554,3.217,1555,3.217,1556,3.217,1557,4.481,1558,4.481,1559,3.217,1560,4.481,1561,3.217,1562,3.217,1563,3.217,1564,3.217,1565,3.217,1566,3.217,1567,2.164,1568,4.481,1569,4.481,1570,3.217,1571,3.217,1572,3.217,1573,3.217,1574,4.481,1575,4.481,1576,4.481,1577,2.727,1578,3.217,1579,3.217,1580,2.727]],["title/components/MyNavComponent.html",[0,0.224,73,0.806]],["body/components/MyNavComponent.html",[0,0.33,1,0.487,2,1.238,3,0.127,4,0.111,5,0.628,6,0.762,7,0.628,8,0.628,9,0.111,11,0.238,15,1.223,16,0.628,17,1.711,19,0.877,21,1.022,23,0.175,24,0.345,25,2.742,26,0.359,27,0.025,28,0.76,29,1.602,30,1.017,32,1.236,34,0.647,35,0.28,36,0.202,37,0.345,38,0.553,39,0.995,40,0.934,41,0.628,42,1.238,43,0.628,44,0.402,45,0.628,46,0.457,47,0.628,48,0.457,49,0.302,50,0.628,51,0.457,52,0.59,53,0.628,54,0.487,55,0.59,56,0.628,57,0.487,58,0.628,59,0.457,60,0.851,61,0.628,62,0.457,63,0.457,64,0.519,65,0.628,66,0.457,67,0.687,68,0.628,69,0.487,70,1.529,71,1.163,72,0.628,73,1.022,74,0.628,75,0.724,76,0.628,77,0.428,78,0.899,79,0.628,80,0.457,81,0.628,82,0.628,83,0.628,84,0.007,85,0.011,86,0.007,88,0.4,94,1.188,97,1.818,98,1.238,100,2.123,101,0.772,108,0.678,110,1.531,111,1.531,112,1.741,114,0.487,115,0.28,125,1.598,126,0.899,127,1.264,130,0.872,147,0.4,154,2.066,165,1.009,168,2.096,169,1.29,175,0.823,176,1.842,177,1.716,183,1.382,189,2.066,206,0.519,209,0.628,212,0.937,214,0.762,217,1.207,218,0.457,221,1.317,231,1.602,237,1.484,239,0.877,247,0.762,248,0.995,249,0.669,250,1.499,257,0.995,259,1.131,281,2.257,282,0.934,317,1.819,322,1.986,337,1.304,348,0.872,360,0.872,362,0.59,398,1.188,400,1.87,410,1.842,416,1.822,420,2.692,422,3.349,424,1.504,425,1.952,427,2.066,428,2.066,430,2.918,440,3.219,449,0.724,460,1.464,465,3.082,472,1.484,475,2.066,480,2.337,488,1.382,490,2.46,495,0.937,498,0.762,503,1.498,520,0.238,545,1.598,551,1.822,554,2.459,576,1.405,587,1.598,592,1.207,598,0.937,602,1.598,604,1.705,623,0.937,649,1.882,664,1.06,712,1.092,733,2.337,807,2.918,812,1.499,819,2.296,822,2.658,824,2.066,825,1.882,830,2.147,831,2.096,832,1.449,834,1.188,835,1.304,843,1.822,877,1.882,878,1.729,911,2.257,913,1.986,944,1.188,949,1.882,953,1.644,954,1.304,957,1.882,958,1.188,961,1.449,964,1.449,967,1.449,970,1.449,977,2.617,979,1.009,980,1.092,981,1.092,982,1.729,996,0.937,1003,2.257,1021,1.729,1025,1.092,1027,1.598,1036,1.009,1047,1.009,1105,2.604,1115,1.644,1116,2.337,1123,1.644,1124,2.604,1125,1.449,1126,1.449,1127,1.449,1128,1.644,1157,1.188,1243,2.066,1309,2.066,1313,1.644,1358,2.066,1380,2.066,1480,2.565,1481,2.066,1498,1.304,1504,1.304,1505,1.304,1514,2.066,1521,2.565,1527,1.984,1541,2.565,1567,2.066,1577,3.233,1580,1.644,1581,4.084,1582,1.304,1583,3.242,1584,4.309,1585,2.851,1586,2.296,1587,4.085,1588,2.296,1589,2.296,1590,2.851,1591,2.296,1592,3.534,1593,3.939,1594,3.939,1595,2.851,1596,2.851,1597,2.851,1598,3.242,1599,1.939,1600,3.759,1601,1.939,1602,1.939,1603,1.939,1604,2.296,1605,3.242,1606,2.296,1607,2.296,1608,1.939,1609,2.851,1610,2.851,1611,2.296,1612,1.939,1613,4.396,1614,2.296,1615,2.296,1616,2.296,1617,1.939,1618,1.939,1619,2.296,1620,2.851,1621,2.296,1622,2.296,1623,1.939,1624,2.851,1625,1.939,1626,2.296,1627,2.296,1628,2.296,1629,1.939,1630,2.296,1631,4.224,1632,4.224,1633,4.224,1634,3.242,1635,2.066,1636,2.296,1637,2.296,1638,2.296,1639,1.939,1640,2.296,1641,1.939,1642,1.449,1643,1.188,1644,1.449,1645,1.449,1646,1.449,1647,1.449,1648,1.449,1649,1.449,1650,1.449,1651,1.449,1652,1.449,1653,1.449,1654,2.296,1655,1.449,1656,1.449,1657,1.304,1658,2.296,1659,1.449,1660,1.449,1661,1.449,1662,1.449,1663,1.449,1664,1.449,1665,2.296,1666,1.449,1667,1.449,1668,3.071,1669,3.071,1670,4.338,1671,1.939,1672,1.939,1673,1.939,1674,1.939,1675,1.939,1676,1.939,1677,1.939,1678,1.939,1679,1.939]],["title/interfaces/NavItem.html",[520,0.419,1527,1.779]],["body/interfaces/NavItem.html",[3,0.328,4,0.285,9,0.285,23,0.285,24,0.669,26,0.449,27,0.025,28,1.011,36,0.328,71,1.103,84,0.017,85,0.021,86,0.017,115,0.986,440,3.186,449,1.588,520,0.612,522,1.725,1045,4.436,1512,3.734,1527,3.507,1631,4.436,1632,4.436,1633,4.284,1635,4.436,1643,3.062,1680,4.235,1681,4.996]],["title/components/PowerOffDialog.html",[0,0.224,75,0.806]],["body/components/PowerOffDialog.html",[0,0.349,1,0.632,2,1.281,3,0.165,4,0.144,5,0.815,7,0.815,8,0.815,9,0.144,11,0.308,15,1.279,16,0.815,17,1.786,19,0.718,21,1.202,23,0.144,24,0.421,25,2.59,26,0.295,27,0.025,28,0.768,32,1.1,34,0.695,35,0.363,36,0.246,37,0.421,38,0.718,39,1.216,40,1.141,41,0.815,42,1.42,43,0.815,44,0.461,45,0.815,46,0.593,47,0.815,48,0.593,49,0.392,50,0.815,51,0.593,52,0.765,53,0.815,54,0.632,55,0.765,56,0.815,57,0.632,58,0.815,59,0.593,60,0.808,61,0.815,62,0.593,63,0.593,64,0.674,65,0.815,66,0.593,67,0.676,68,0.815,69,0.632,70,1.141,71,1.098,72,0.815,73,0.884,74,0.815,75,1.173,76,0.815,77,0.555,78,0.884,79,0.815,80,0.593,81,0.815,82,0.815,83,0.815,84,0.009,85,0.013,86,0.009,88,0.52,94,1.338,97,1.764,98,1.519,100,1.997,101,0.943,108,0.828,109,1.309,110,1.808,111,1.724,112,1.96,114,0.632,115,0.363,125,1.309,126,0.884,127,1.338,147,0.775,154,1.692,165,1.309,168,1.813,169,1.057,175,0.674,176,2.168,177,2.395,183,1.132,189,1.692,206,0.674,209,0.815,212,1.215,214,0.989,217,0.989,218,0.593,221,0.869,236,2.113,237,1.215,239,1.071,247,0.989,248,0.815,249,0.869,250,1.764,257,1.216,259,1.382,281,2.336,282,0.765,317,1.55,322,1.886,337,1.692,348,1.132,360,1.132,362,0.765,400,1.759,410,1.215,416,1.577,420,2.512,422,3.05,424,1.519,425,1.689,427,1.692,428,1.692,430,2.524,440,3.134,449,0.593,460,1.333,465,2.3,472,1.215,475,1.692,480,2.3,488,1.132,490,2.336,495,1.215,498,0.989,503,1.296,520,0.308,545,1.309,551,1.577,554,2.239,576,0.815,587,1.309,592,0.989,598,1.215,602,1.309,604,1.475,623,1.813,649,3.545,664,0.869,733,2.751,807,2.524,812,0.989,825,1.542,843,1.577,877,1.542,878,1.417,911,1.953,913,2.345,949,1.542,977,2.59,979,2.77,980,2.802,981,2.802,982,2.997,996,1.813,1003,1.953,1021,2.113,1025,1.417,1027,1.309,1036,1.953,1047,1.309,1066,2.805,1116,1.542,1157,1.542,1243,1.692,1309,1.692,1358,1.692,1380,1.692,1480,2.524,1481,2.524,1498,1.692,1504,1.692,1505,1.692,1514,1.692,1521,1.692,1527,1.953,1541,1.692,1567,2.524,1581,3.755,1582,1.692,1583,2.805,1584,3.979,1585,1.881,1586,1.881,1587,3.979,1588,1.881,1589,1.881,1590,1.881,1591,1.881,1592,1.881,1593,2.805,1594,2.805,1595,1.881,1596,1.881,1597,1.881,1598,1.881,1600,3.355,1604,1.881,1605,2.805,1606,1.881,1607,1.881,1609,3.355,1610,3.355,1611,1.881,1613,4.173,1614,1.881,1615,1.881,1616,1.881,1619,1.881,1620,2.805,1621,1.881,1622,1.881,1624,2.805,1626,1.881,1627,1.881,1628,1.881,1630,1.881,1631,3.999,1632,3.999,1633,3.999,1634,2.805,1635,1.692,1636,1.881,1637,1.881,1638,1.881,1640,1.881,1642,1.881,1643,1.542,1644,1.881,1645,1.881,1646,1.881,1647,1.881,1648,1.881,1649,1.881,1650,1.881,1651,1.881,1652,1.881,1653,1.881,1654,2.805,1655,1.881,1656,1.881,1657,1.692,1658,2.805,1659,1.881,1660,1.881,1661,1.881,1662,1.881,1663,2.805,1664,2.805,1665,3.355,1666,1.881,1667,1.881,1682,2.516,1683,2.516,1684,2.516,1685,2.516,1686,2.516]],["title/interfaces/ROUTE.html",[440,1.652,520,0.419]],["body/interfaces/ROUTE.html",[0,0.347,2,0.817,3,0.188,4,0.164,9,0.164,15,0.796,17,1.105,19,0.817,21,1.105,23,0.164,24,0.463,25,3.135,26,0.317,27,0.025,28,0.931,34,0.716,35,0.413,36,0.271,37,0.463,60,0.743,67,0.515,70,0.87,71,1.068,73,0.675,75,0.675,78,0.675,84,0.01,85,0.014,86,0.01,88,0.591,94,1.41,97,1.748,98,1.178,100,2.08,108,0.632,110,1.567,111,1.567,112,1.781,115,0.843,125,1.49,127,1.216,147,0.591,154,1.926,165,1.49,168,1.993,169,1.203,175,0.767,176,1.993,177,1.856,183,1.288,189,1.926,206,0.767,209,0.927,212,1.383,214,1.125,217,1.125,218,0.675,221,0.988,237,1.383,239,1.178,247,1.125,248,0.927,249,0.988,250,1.901,257,1.336,259,1.519,281,2.517,282,0.87,317,1.67,322,2.032,337,1.926,348,1.288,360,1.288,362,0.87,400,1.832,410,1.383,416,1.733,420,2.63,422,3.244,424,1.511,425,1.856,427,1.926,428,1.926,430,2.775,440,3.279,449,0.675,460,1.418,465,2.528,472,1.383,475,1.926,480,2.528,488,1.288,490,2.517,495,1.383,498,1.125,503,1.424,520,0.351,522,0.988,545,1.49,551,1.733,554,2.382,576,0.927,587,1.49,592,1.125,598,1.383,602,1.49,604,1.621,623,1.383,649,1.754,664,0.988,733,2.528,807,2.775,812,1.125,825,1.754,843,1.733,877,1.754,878,1.612,911,2.147,913,2.032,949,1.754,977,2.517,979,1.49,980,1.612,981,1.612,982,2.323,996,1.383,1003,2.147,1021,2.323,1025,1.612,1027,1.49,1036,1.49,1047,1.49,1116,1.754,1157,1.754,1243,1.926,1309,1.926,1358,1.926,1380,1.926,1480,2.775,1481,2.775,1498,1.926,1504,1.926,1505,1.926,1514,1.926,1521,1.926,1527,2.147,1541,1.926,1567,2.775,1581,1.926,1582,1.926,1583,3.084,1584,4.194,1585,2.14,1586,2.14,1587,4.194,1588,2.14,1589,2.14,1590,2.14,1591,2.14,1592,2.14,1593,3.084,1594,3.084,1595,2.14,1596,2.14,1597,2.14,1598,2.14,1600,3.616,1604,2.14,1605,3.084,1606,2.14,1607,2.14,1609,3.084,1610,3.084,1611,2.14,1613,4.695,1614,2.14,1615,2.14,1616,2.14,1619,2.14,1620,3.084,1621,2.14,1622,2.14,1624,3.084,1626,2.14,1627,2.14,1628,2.14,1630,2.14,1631,4.147,1632,4.147,1633,4.147,1634,3.084,1635,1.926,1636,2.14,1637,2.14,1638,2.14,1640,2.14,1642,2.14,1643,1.754,1644,2.14,1645,2.14,1646,2.14,1647,2.14,1648,2.14,1649,2.14,1650,2.14,1651,2.14,1652,2.14,1653,2.14,1654,3.084,1655,2.14,1656,2.14,1657,1.926,1658,3.084,1659,2.14,1660,2.14,1661,2.14,1662,2.14,1663,2.14,1664,2.14,1665,3.084,1666,2.14,1667,2.14]],["title/components/SupplyVoltagesComponent.html",[0,0.224,77,0.755]],["body/components/SupplyVoltagesComponent.html",[0,0.378,1,0.689,2,1.141,3,0.18,4,0.157,5,0.888,6,1.077,7,0.888,8,0.888,9,0.157,11,0.336,15,1.296,16,0.888,17,1.808,19,1.141,21,1.264,23,0.157,24,0.449,26,0.31,27,0.025,28,0.395,30,0.772,32,1.189,34,0.667,35,0.395,36,0.262,37,0.449,38,0.782,39,1.295,40,1.215,41,0.888,42,1.48,43,0.888,44,0.565,45,0.888,46,0.646,47,0.888,48,0.646,49,0.427,50,0.888,51,0.942,52,1.677,53,0.888,54,0.689,55,0.833,56,0.888,57,0.689,58,0.888,59,0.646,60,0.72,61,0.888,62,0.646,63,0.646,64,0.734,65,0.888,66,0.646,67,0.493,68,0.888,69,0.689,70,0.833,71,0.882,72,0.888,73,0.646,74,0.888,75,0.646,76,0.888,77,1.145,78,1.525,79,0.888,80,0.646,81,0.888,82,0.888,83,0.888,84,0.01,85,0.014,86,0.01,88,0.566,94,0.689,97,1.75,98,1.141,100,1.904,101,1.005,106,2.251,108,0.882,110,1.68,111,1.295,112,1.472,114,0.689,115,0.395,118,1.629,120,1.807,126,1.112,127,1.386,129,1.071,142,1.151,147,0.826,168,1.324,169,1.151,171,2.08,175,1.477,176,2.506,177,1.799,183,2.334,198,2.28,202,1.48,203,1.324,205,1.931,206,0.734,207,1.543,208,1.543,209,0.888,217,1.077,218,1.222,219,1.426,220,1.799,238,1.543,239,1.574,244,1.233,246,1.843,247,1.077,248,0.888,249,0.946,250,1.571,251,1.543,252,1.151,253,1.324,254,1.426,256,1.543,257,0.888,258,1.543,259,1.009,282,0.833,348,1.233,352,3.093,362,0.833,386,1.543,400,0.833,416,2.179,424,1.574,436,2.45,449,0.942,451,1.215,460,0.734,471,1.931,495,1.324,520,0.336,524,1.426,551,1.151,555,1.854,558,1.426,576,1.68,580,2.08,591,1.543,592,2.038,604,1.571,664,1.38,674,2.45,812,1.077,911,2.08,913,1.151,975,3.643,976,1.843,977,3.427,978,2.049,979,2.08,980,1.543,981,1.543,982,2.657,983,2.45,985,2.049,986,1.843,988,2.049,989,2.049,990,2.049,992,2.049,993,2.049,994,2.892,995,2.049,996,1.931,998,2.049,1002,2.049,1003,2.87,1004,2.049,1005,1.233,1006,1.843,1007,2.049,1008,2.049,1009,2.049,1010,3.489,1011,3.489,1012,2.049,1013,2.988,1014,1.68,1015,2.049,1016,2.689,1017,1.68,1018,1.68,1019,2.689,1020,2.049,1021,2.251,1022,2.049,1023,2.049,1024,1.843,1025,1.543,1026,2.988,1027,3.171,1028,2.45,1029,2.988,1030,2.988,1031,2.657,1032,2.988,1033,2.988,1034,3.527,1035,2.689,1036,2.08,1037,3.489,1038,2.049,1039,1.68,1040,2.049,1041,2.049,1042,2.689,1043,2.988,1044,2.049,1045,1.843,1046,1.843,1047,1.426,1048,3.174,1049,2.049,1050,2.45,1051,3.174,1052,1.843,1053,1.843,1054,2.049,1055,2.049,1056,1.68,1057,2.049,1058,2.049,1059,2.049,1060,2.049,1061,1.843,1377,2.323,1400,2.323,1687,3.997,1688,2.741,1689,2.741,1690,2.741,1691,2.741]],["title/classes/User.html",[37,0.384,424,0.976]],["body/classes/User.html",[3,0.295,4,0.257,9,0.257,11,0.552,23,0.257,24,0.628,26,0.444,27,0.025,28,1.001,32,1.378,36,0.295,37,0.505,84,0.016,85,0.019,86,0.016,115,0.807,120,1.369,131,1.406,147,1.155,175,1.859,217,2.198,237,2.174,253,2.702,424,1.904,425,2.738,478,4.548,484,3.9,485,4.487,487,4.548,488,3.139,526,2.391,540,2.025,604,1.769,1183,3.816,1692,4.501,1693,3.816,1694,6.084,1695,6.084,1696,4.501,1697,4.501,1698,4.501,1699,4.501,1700,4.501,1701,5.592,1702,4.501,1703,4.501,1704,4.501,1705,4.501]],["title/interfaces/VarSupply.html",[520,0.419,1005,1.539]],["body/interfaces/VarSupply.html",[3,0.263,4,0.229,9,0.229,11,0.492,23,0.229,24,0.584,26,0.447,27,0.025,28,0.88,30,1.29,36,0.263,42,1.484,44,0.611,78,1.438,84,0.014,85,0.018,86,0.014,115,0.934,119,1.22,131,1.743,147,1.074,218,1.438,236,2.928,292,4.408,297,4.408,359,3.497,439,3.497,449,1.526,481,3.186,488,2.34,503,1.795,520,0.637,522,1.385,527,2.928,533,2.184,536,2.459,600,3.497,675,3.887,676,3.887,680,2.459,683,3.289,743,4.725,791,3,843,2.184,946,3.544,950,3.887,1005,2.745,1119,4.408,1315,4.408,1372,4.408,1706,3.402,1707,4.013,1708,4.013,1709,5.768,1710,5.768,1711,5.768,1712,6.321,1713,5.768,1714,5.768,1715,6.476,1716,5.2,1717,5.2,1718,5.2,1719,5.2,1720,5.2,1721,5.2,1722,5.2,1723,5.2,1724,5.2,1725,5.2,1726,5.2,1727,5.2,1728,4.013,1729,4.013,1730,4.013,1731,4.013,1732,4.013,1733,4.013,1734,4.013]],["title/components/VideostreamComponent.html",[0,0.224,80,0.806]],["body/components/VideostreamComponent.html",[0,0.426,1,1.104,2,1.572,3,0.288,4,0.251,5,1.422,6,1.726,7,1.422,8,1.422,9,0.251,11,0.538,15,1.367,16,1.422,17,1.902,19,1.572,21,1.475,23,0.251,24,0.618,25,3.131,26,0.288,27,0.025,28,0.633,29,1.335,30,0.847,32,0.907,34,0.493,35,0.633,36,0.288,37,0.493,38,1.253,39,1.784,40,1.674,41,1.422,42,1.8,43,1.422,44,0.558,45,1.422,46,1.035,47,1.422,48,1.035,49,0.684,50,1.422,51,1.035,52,1.335,53,1.422,54,1.104,55,1.335,56,1.422,57,1.104,58,1.422,59,1.035,60,0.791,61,1.422,62,1.035,63,1.035,64,1.176,65,1.422,66,1.035,67,0.791,68,1.422,69,1.104,70,1.335,71,0.969,72,1.422,73,1.035,74,1.422,75,1.035,76,1.422,77,0.969,78,1.035,79,1.422,80,1.486,81,1.949,82,1.422,83,1.422,84,0.015,85,0.019,86,0.015,147,1.137,175,1.475,422,3.866,664,1.901,1352,4.668,1735,3.722,1736,5.506,1737,5.506,1738,6.016,1739,5.506,1740,5.506,1741,5.506,1742,4.391]],["title/coverage.html",[1743,3.962]],["body/coverage.html",[0,0.458,1,0.985,9,0.224,10,3.324,26,0.257,27,0.025,37,0.44,46,0.924,48,0.924,51,0.924,54,0.985,57,0.985,59,0.924,62,0.924,63,0.924,66,0.924,69,0.985,71,1.259,73,0.924,75,0.924,77,0.865,80,0.924,84,0.014,85,0.018,86,0.014,87,2.396,88,0.81,90,3.324,141,2.152,198,1.894,221,2.222,282,1.192,317,1.353,318,2.403,319,2.403,323,2.931,349,2.637,352,2.968,368,2.931,369,2.931,372,2.637,376,2.931,382,2.637,384,2.637,404,2.931,413,2.637,424,1.119,433,2.931,435,3.324,440,1.894,461,3.324,486,3.828,520,0.838,521,2.403,523,3.828,529,1.894,532,1.647,543,2.403,549,3.706,550,3.836,582,2.207,672,2.637,824,4.563,836,3.828,846,2.637,875,3.324,876,3.324,917,2.207,975,3.706,976,3.836,983,2.403,1005,1.764,1068,3.324,1139,3.828,1141,3.324,1162,3.324,1163,3.324,1179,3.828,1180,3.828,1225,3.324,1238,3.324,1333,5.127,1351,3.324,1369,3.324,1370,3.324,1425,3.324,1512,3.828,1513,3.324,1527,2.04,1581,3.836,1582,3.836,1643,2.403,1680,3.324,1693,3.324,1706,3.324,1735,3.324,1743,3.324,1744,3.921,1745,3.921,1746,6.048,1747,5.121,1748,3.921,1749,3.921,1750,3.921,1751,3.921,1752,5.121,1753,3.921,1754,3.921,1755,3.921,1756,3.921,1757,5.704,1758,3.921,1759,3.921,1760,3.921,1761,3.921,1762,3.921,1763,3.921,1764,3.921,1765,5.121,1766,3.921,1767,3.921,1768,3.921,1769,3.921,1770,3.921,1771,3.921,1772,5.121,1773,3.921,1774,3.921,1775,3.921,1776,5.121,1777,3.324,1778,5.704,1779,3.921,1780,5.121,1781,3.921,1782,3.921,1783,3.921,1784,3.921,1785,3.921,1786,3.921,1787,3.921,1788,3.921,1789,3.324,1790,4.342,1791,3.324,1792,3.921,1793,3.921]],["title/dependencies.html",[306,2.767,1794,2.852]],["body/dependencies.html",[27,0.025,35,0.677,49,0.731,84,0.016,85,0.02,86,0.016,111,1.52,124,1.972,186,3.86,209,2.008,214,1.844,306,3.157,308,4.633,327,4.865,328,4.289,348,2.112,355,3.508,359,3.86,365,3.979,380,3.979,381,4.865,412,2.876,484,2.876,560,3.508,590,3.157,1540,3.979,1795,4.693,1796,6.824,1797,4.693,1798,4.865,1799,4.693,1800,4.693,1801,4.693,1802,4.693,1803,4.693,1804,4.693,1805,4.693,1806,4.693,1807,3.979,1808,4.693,1809,4.693,1810,4.693,1811,4.693,1812,4.693,1813,4.693,1814,4.693,1815,4.693,1816,4.693,1817,4.693,1818,4.693,1819,4.693,1820,4.693,1821,4.693,1822,4.693,1823,4.693,1824,4.693,1825,4.693,1826,4.693,1827,3.979,1828,4.693,1829,4.693,1830,4.693,1831,4.693,1832,4.693,1833,4.693,1834,4.693,1835,4.693,1836,4.693,1837,4.693,1838,4.693,1839,4.693,1840,4.693,1841,4.693,1842,4.693]],["title/miscellaneous/functions.html",[1843,1.918,1844,3.488]],["body/miscellaneous/functions.html",[23,0.303,27,0.024,44,0.573,84,0.018,85,0.022,86,0.018,88,1.096,114,1.552,115,0.891,119,1.614,126,1.251,131,1.334,142,2.23,146,3.967,147,1.096,239,1.515,323,3.967,386,2.988,387,3.967,388,4.499,389,4.499,390,3.967,391,4.499,404,4.616,549,3.252,550,3.57,1777,5.235,1843,3.57,1844,4.499,1845,5.307,1846,5.307,1847,5.307]],["title/index.html",[23,0.163,1657,1.918,1848,2.852]],["body/index.html",[0,0.414,4,0.279,15,0.942,27,0.02,31,3.649,44,0.453,84,0.017,85,0.02,86,0.017,121,2.358,123,3.283,164,4.138,167,4.982,190,5.677,194,3.55,266,2.991,282,1.484,322,2.051,438,4.138,552,3.649,590,4.241,683,3.058,731,2.748,843,2.051,844,2.991,1184,3.953,1334,3.649,1343,4.138,1798,4.138,1807,5.346,1827,5.832,1849,4.881,1850,5.877,1851,4.881,1852,4.881,1853,4.881,1854,4.881,1855,4.881,1856,4.881,1857,4.881,1858,6.306,1859,4.881,1860,6.696,1861,4.881,1862,4.881,1863,4.881,1864,4.881,1865,4.138,1866,6.544,1867,5.877,1868,5.877,1869,4.881,1870,6.544,1871,4.881,1872,4.881,1873,4.881,1874,6.306,1875,4.881]],["title/modules.html",[305,2.864]],["body/modules.html",[27,0.022,84,0.019,85,0.022,86,0.019,304,3.72,305,3.39,316,3.39,328,4.135,534,2.878,1876,5.531,1877,5.531,1878,6.324,1879,5.531]],["title/overview.html",[1880,3.962]],["body/overview.html",[1,1.696,2,1.271,27,0.025,37,0.5,38,1.271,46,1.427,48,1.427,51,1.427,54,1.522,57,1.522,59,1.427,62,1.427,63,1.427,66,1.427,69,1.522,73,1.427,75,1.427,77,1.337,80,1.427,84,0.016,85,0.019,86,0.016,88,1.251,89,2.996,231,2.334,243,3.329,303,2.996,304,4.891,305,2.729,306,2.996,307,3.776,308,3.329,309,3.776,310,2.729,311,3.776,312,3.776,313,3.776,314,3.776,315,3.776,316,3.711,317,2.09,318,3.711,319,3.711,320,4.71,321,3.329,322,1.871,410,2.152,433,3.329,522,1.538,658,2.508,1194,2.996,1349,3.776,1880,3.776,1881,4.454]],["title/routes.html",[410,2.258]],["body/routes.html",[27,0.022,84,0.02,85,0.022,86,0.02,410,2.712]],["title/miscellaneous/variables.html",[1843,1.918,1882,3.488]],["body/miscellaneous/variables.html",[23,0.306,26,0.407,27,0.025,29,1.886,30,1.197,84,0.019,85,0.022,86,0.019,120,1.886,400,1.626,460,1.433,1789,4.535,1790,5.716,1791,4.535,1843,3.598,1865,5.259,1882,4.535,1883,5.349,1884,5.349]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/ChartObject.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"interceptors/ErrorInterceptor.html":{},"components/GeneralSettingsComponent.html":{},"interfaces/IAppConfig.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"interfaces/NavItem.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"classes/User.html":{},"interfaces/VarSupply.html":{},"components/VideostreamComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":221,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"components/LoginComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1828,"title":{},"body":{"dependencies.html":{}}}],["0.1",{"_index":1339,"title":{},"body":{"components/LoginComponent.html":{}}}],["0.1.2",{"_index":1812,"title":{},"body":{"dependencies.html":{}}}],["0.15",{"_index":969,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["0.4",{"_index":1319,"title":{},"body":{"components/LoginComponent.html":{}}}],["0.8.26",{"_index":1842,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1778,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1782,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1786,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1783,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":835,"title":{},"body":{"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ControlSliderComponent.html":{},"components/MyNavComponent.html":{}}}],["1",{"_index":231,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"interfaces/IAppConfig.html":{},"components/LoginComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{},"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"overview.html":{}}}],["1.0.0",{"_index":1808,"title":{},"body":{"dependencies.html":{}}}],["1.14.7",{"_index":1835,"title":{},"body":{"dependencies.html":{}}}],["1.4.32",{"_index":1805,"title":{},"body":{"dependencies.html":{}}}],["1.42857",{"_index":1128,"title":{},"body":{"components/ControlSliderComponent.html":{},"components/MyNavComponent.html":{}}}],["1.7.0",{"_index":1829,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":1806,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":1840,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1766,"title":{},"body":{"coverage.html":{}}}],["1/1000",{"_index":686,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["1/1000000",{"_index":689,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["1/2",{"_index":1765,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1747,"title":{},"body":{"coverage.html":{}}}],["10.0.2",{"_index":1833,"title":{},"body":{"dependencies.html":{}}}],["10.6.1",{"_index":1811,"title":{},"body":{"dependencies.html":{}}}],["10/11",{"_index":1753,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":824,"title":{},"body":{"components/ChartComponent.html":{},"components/LoginComponent.html":{},"components/MyNavComponent.html":{},"coverage.html":{}}}],["1000",{"_index":735,"title":{},"body":{"components/ChartComponent.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{}}}],["10000",{"_index":1645,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["10px",{"_index":972,"title":{},"body":{"components/ChartFormComponent.html":{},"components/ControlSliderComponent.html":{},"components/MDashboardComponent.html":{}}}],["10s",{"_index":1604,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["11",{"_index":1881,"title":{},"body":{"overview.html":{}}}],["11/11",{"_index":1758,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":936,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["12/13",{"_index":1785,"title":{},"body":{"coverage.html":{}}}],["12px",{"_index":964,"title":{},"body":{"components/ChartFormComponent.html":{},"components/ControlSliderComponent.html":{},"components/MyNavComponent.html":{}}}],["13/15",{"_index":1768,"title":{},"body":{"coverage.html":{}}}],["14px",{"_index":1137,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["15",{"_index":243,"title":{},"body":{"injectables/AppConfig.html":{},"components/LoginComponent.html":{},"overview.html":{}}}],["15/16",{"_index":1760,"title":{},"body":{"coverage.html":{}}}],["1500",{"_index":394,"title":{},"body":{"modules/AppModule.html":{}}}],["15px",{"_index":1125,"title":{},"body":{"components/ControlSliderComponent.html":{},"components/MDashboardComponent.html":{},"components/MyNavComponent.html":{}}}],["1em",{"_index":1117,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["1px",{"_index":963,"title":{},"body":{"components/ChartFormComponent.html":{},"components/ControlSliderComponent.html":{},"components/LoginComponent.html":{}}}],["2",{"_index":1194,"title":{},"body":{"interfaces/IAppConfig.html":{},"components/LoginComponent.html":{},"interfaces/MeasurementDevice.html":{},"overview.html":{}}}],["2.0.8",{"_index":1819,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":1803,"title":{},"body":{"dependencies.html":{}}}],["2.1.1",{"_index":1832,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":1838,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1815,"title":{},"body":{"dependencies.html":{}}}],["2.7.3",{"_index":1813,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1749,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1779,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":1772,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":1764,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":931,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["20/22",{"_index":1775,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":1671,"title":{},"body":{"components/MyNavComponent.html":{}}}],["20px",{"_index":951,"title":{},"body":{"components/ChartFormComponent.html":{},"components/ControlSliderComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{}}}],["25",{"_index":1763,"title":{},"body":{"coverage.html":{}}}],["255",{"_index":1173,"title":{},"body":{"components/GeneralSettingsComponent.html":{}}}],["2px",{"_index":829,"title":{},"body":{"components/ChartComponent.html":{},"components/ControlSliderComponent.html":{}}}],["3",{"_index":658,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"interfaces/IAppConfig.html":{},"components/LoginComponent.html":{},"interfaces/MeasurementDevice.html":{},"overview.html":{}}}],["3.0.1",{"_index":1826,"title":{},"body":{"dependencies.html":{}}}],["3.3",{"_index":1723,"title":{},"body":{"interfaces/VarSupply.html":{}}}],["3.3.1",{"_index":1821,"title":{},"body":{"dependencies.html":{}}}],["3.5v",{"_index":1722,"title":{},"body":{"interfaces/VarSupply.html":{}}}],["3/3",{"_index":1756,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":1788,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":1337,"title":{},"body":{"components/LoginComponent.html":{}}}],["30px",{"_index":1124,"title":{},"body":{"components/ControlSliderComponent.html":{},"components/MyNavComponent.html":{}}}],["33",{"_index":1746,"title":{},"body":{"coverage.html":{}}}],["35px",{"_index":955,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["3px",{"_index":952,"title":{},"body":{"components/ChartFormComponent.html":{},"components/ControlSliderComponent.html":{}}}],["3s",{"_index":269,"title":{},"body":{"injectables/AppConfig.html":{}}}],["4",{"_index":1345,"title":{},"body":{"components/LoginComponent.html":{}}}],["4.3.1",{"_index":1810,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1776,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":1771,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":1047,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["401",{"_index":1143,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["44",{"_index":1770,"title":{},"body":{"coverage.html":{}}}],["4px",{"_index":1110,"title":{},"body":{"components/ControlSliderComponent.html":{},"components/LoginComponent.html":{}}}],["5",{"_index":1346,"title":{},"body":{"components/LoginComponent.html":{}}}],["5.32.4",{"_index":1822,"title":{},"body":{"dependencies.html":{}}}],["5.6.3",{"_index":1817,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1333,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["500ma",{"_index":1195,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["500mv",{"_index":1197,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["500ua",{"_index":1193,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["50mv",{"_index":1196,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["50px",{"_index":1118,"title":{},"body":{"components/ControlSliderComponent.html":{},"components/LoginComponent.html":{}}}],["53",{"_index":1773,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":954,"title":{},"body":{"components/ChartFormComponent.html":{},"components/ControlSliderComponent.html":{},"components/MDashboardComponent.html":{},"components/MyNavComponent.html":{}}}],["5v",{"_index":1198,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["6",{"_index":934,"title":{},"body":{"components/ChartFormComponent.html":{},"components/LoginComponent.html":{}}}],["6.3.3",{"_index":1836,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1750,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":1787,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1748,"title":{},"body":{"coverage.html":{}}}],["673ab7",{"_index":1678,"title":{},"body":{"components/MyNavComponent.html":{}}}],["6px",{"_index":967,"title":{},"body":{"components/ChartFormComponent.html":{},"components/ControlSliderComponent.html":{},"components/MyNavComponent.html":{}}}],["6vw",{"_index":818,"title":{},"body":{"components/ChartComponent.html":{}}}],["7",{"_index":1347,"title":{},"body":{"components/LoginComponent.html":{}}}],["7.2.0",{"_index":1796,"title":{},"body":{"dependencies.html":{}}}],["7.2.14",{"_index":1800,"title":{},"body":{"dependencies.html":{}}}],["7.3.3",{"_index":1798,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["7/13",{"_index":1774,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":1757,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":1755,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":823,"title":{},"body":{"components/ChartComponent.html":{}}}],["70px",{"_index":1342,"title":{},"body":{"components/LoginComponent.html":{}}}],["75",{"_index":1780,"title":{},"body":{"coverage.html":{}}}],["7px",{"_index":1121,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["8",{"_index":1348,"title":{},"body":{"components/LoginComponent.html":{}}}],["8/8",{"_index":1751,"title":{},"body":{"coverage.html":{}}}],["8080",{"_index":1209,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["8080/api/loadconfig",{"_index":263,"title":{},"body":{"injectables/AppConfig.html":{}}}],["81",{"_index":1761,"title":{},"body":{"coverage.html":{}}}],["850px",{"_index":813,"title":{},"body":{"components/ChartComponent.html":{}}}],["85vw",{"_index":815,"title":{},"body":{"components/ChartComponent.html":{}}}],["86",{"_index":1767,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1754,"title":{},"body":{"coverage.html":{}}}],["888",{"_index":1332,"title":{},"body":{"components/LoginComponent.html":{}}}],["9",{"_index":1349,"title":{},"body":{"components/LoginComponent.html":{},"overview.html":{}}}],["9/11",{"_index":1762,"title":{},"body":{"coverage.html":{}}}],["9/12",{"_index":1781,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1752,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":1784,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":1759,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":159,"title":{},"body":{"injectables/AppConfig.html":{}}}],["_charging",{"_index":1656,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["_getsubjectobeservable",{"_index":1432,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["_getsubjectobeservable(chartid",{"_index":1440,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["_getsubjectobeservable(chartid:string",{"_index":1483,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["_guards",{"_index":414,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["_helpers",{"_index":366,"title":{},"body":{"modules/AppModule.html":{}}}],["_meta",{"_index":874,"title":{},"body":{"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{}}}],["_models",{"_index":496,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["_models/app",{"_index":207,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/MeasurementConfigurationComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["_models/chartdataset.model",{"_index":668,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["_models/chartobject.model",{"_index":669,"title":{},"body":{"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"interfaces/DataEntry.html":{},"components/MDashboardComponent.html":{}}}],["_models/varsupply.model",{"_index":1006,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["_services",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["_services/app.config",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["_services/measurementupdateservice",{"_index":667,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"components/MDashboardComponent.html":{}}}],["absolute",{"_index":1367,"title":{},"body":{"components/MDashboardComponent.html":{}}}],["access",{"_index":1296,"title":{},"body":{"components/LoginComponent.html":{}}}],["accessors",{"_index":106,"title":{},"body":{"injectables/AppConfig.html":{},"injectables/AuthenticationService.html":{},"components/ControlSliderComponent.html":{},"components/LoginComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["achieved",{"_index":1717,"title":{},"body":{"interfaces/VarSupply.html":{}}}],["actions",{"_index":809,"title":{},"body":{"components/ChartComponent.html":{}}}],["activatedroute",{"_index":1251,"title":{},"body":{"components/LoginComponent.html":{}}}],["activatedroutesnapshot",{"_index":445,"title":{},"body":{"guards/AuthGuard.html":{}}}],["active",{"_index":1677,"title":{},"body":{"components/MyNavComponent.html":{}}}],["actual_component",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["add",{"_index":610,"title":{},"body":{"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"components/MeasurementConfigurationComponent.html":{}}}],["addaxis",{"_index":886,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["addchart",{"_index":887,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["adddataset",{"_index":888,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["adddatasettochart",{"_index":570,"title":{},"body":{"components/ChartComponent.html":{}}}],["adddatasettochart(dataset",{"_index":605,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["adddatatochart",{"_index":571,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["adddatatochart(data",{"_index":611,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["added",{"_index":837,"title":{},"body":{"interfaces/ChartDataset.html":{}}}],["adding",{"_index":640,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["adds",{"_index":607,"title":{},"body":{"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"interfaces/DataEntry.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{}}}],["addtoslider",{"_index":1074,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["adresses",{"_index":185,"title":{},"body":{"injectables/AppConfig.html":{}}}],["ads885",{"_index":1185,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["afterviewinit",{"_index":556,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["against",{"_index":1562,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["align",{"_index":1126,"title":{},"body":{"components/ControlSliderComponent.html":{},"components/MDashboardComponent.html":{},"components/MyNavComponent.html":{}}}],["always",{"_index":1626,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["ang",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular",{"_index":590,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animation",{"_index":1795,"title":{},"body":{"dependencies.html":{}}}],["angular/animations",{"_index":1540,"title":{},"body":{"components/MenuListItemComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":1797,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":337,"title":{},"body":{"modules/AppModule.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["angular/common",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":206,"title":{},"body":{"injectables/AppConfig.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"interceptors/ErrorInterceptor.html":{},"components/GeneralSettingsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/MeasurementConfigurationComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["angular/compiler",{"_index":1799,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"interceptors/ErrorInterceptor.html":{},"components/GeneralSettingsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":327,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":412,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/MenuListItemComponent.html":{},"dependencies.html":{}}}],["animate",{"_index":1537,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["animate('225ms",{"_index":1551,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["animations",{"_index":1542,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["answers",{"_index":267,"title":{},"body":{"injectables/AppConfig.html":{},"interceptors/ErrorInterceptor.html":{}}}],["anymore",{"_index":1359,"title":{},"body":{"components/MDashboardComponent.html":{},"injectables/MeasurementUpdateService.html":{}}}],["anything",{"_index":760,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["apend",{"_index":1232,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["api",{"_index":205,"title":{},"body":{"injectables/AppConfig.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/IAppConfig.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/MeasurementDevice.html":{},"components/SupplyVoltagesComponent.html":{}}}],["apilink:string",{"_index":1213,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["apipath",{"_index":215,"title":{},"body":{"injectables/AppConfig.html":{}}}],["apiport:string",{"_index":1210,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["apiurl",{"_index":107,"title":{},"body":{"injectables/AppConfig.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"modules/AppModule.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"interfaces/IAppConfig.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{},"index.html":{}}}],["app.component",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["app.config",{"_index":497,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["app_initializer",{"_index":361,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appconfig",{"_index":88,"title":{"injectables/AppConfig.html":{}},"body":{"injectables/AppConfig.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["appconfig.apiurl",{"_index":1468,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["appconfig.clear",{"_index":925,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["appconfig.load",{"_index":392,"title":{},"body":{"modules/AppModule.html":{}}}],["appconfig.removeprivatevalues(appconfig.settings",{"_index":242,"title":{},"body":{"injectables/AppConfig.html":{}}}],["appconfig.removeprivatevalues(obj[key",{"_index":230,"title":{},"body":{"injectables/AppConfig.html":{}}}],["appconfig.settings",{"_index":246,"title":{},"body":{"injectables/AppConfig.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["appconfig.settings.charts",{"_index":233,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartFormComponent.html":{},"components/MDashboardComponent.html":{}}}],["appconfig.settings.deployment.host",{"_index":275,"title":{},"body":{"injectables/AppConfig.html":{}}}],["appconfig.settings.devices",{"_index":922,"title":{},"body":{"components/ChartFormComponent.html":{},"components/MeasurementConfigurationComponent.html":{}}}],["appconfig.settings.general.chartoptions",{"_index":705,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["appconfig.settings.general.currentresolutionmap",{"_index":1390,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["appconfig.settings.general.timerinterval",{"_index":1497,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["appconfig.settings.general.voltageresolutionmap",{"_index":1398,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["appconfig.settings.supplies[this.deviceid",{"_index":1103,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["appended",{"_index":1281,"title":{},"body":{"components/LoginComponent.html":{}}}],["appends",{"_index":1229,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["application",{"_index":390,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"miscellaneous/functions.html":{}}}],["apply",{"_index":948,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["appmodule",{"_index":304,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":316,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["area",{"_index":863,"title":{},"body":{"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{}}}],["ariaexpanded",{"_index":1556,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["array",{"_index":129,"title":{},"body":{"injectables/AppConfig.html":{},"modules/AppRoutingModule.html":{},"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/ChartObject.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"interfaces/IAppConfig.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{},"components/SupplyVoltagesComponent.html":{}}}],["arrow",{"_index":1081,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["arrows",{"_index":1069,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["artifacts",{"_index":1861,"title":{},"body":{"index.html":{}}}],["assets/config/config.json",{"_index":172,"title":{},"body":{"injectables/AppConfig.html":{}}}],["assets/config/hosts.json",{"_index":179,"title":{},"body":{"injectables/AppConfig.html":{}}}],["attr.aria",{"_index":1523,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["auth0/angular",{"_index":1802,"title":{},"body":{"dependencies.html":{}}}],["authenticationservice",{"_index":317,"title":{"injectables/AuthenticationService.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"coverage.html":{},"overview.html":{}}}],["authguard",{"_index":413,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authorization",{"_index":1226,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["authorized",{"_index":1144,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["auto",{"_index":944,"title":{},"body":{"components/ChartFormComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MyNavComponent.html":{}}}],["autolabel",{"_index":838,"title":{},"body":{"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{}}}],["autolabel?:boolean",{"_index":859,"title":{},"body":{"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{}}}],["automatically",{"_index":844,"title":{},"body":{"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{},"index.html":{}}}],["autorange",{"_index":839,"title":{},"body":{"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{}}}],["autorange?:boolean",{"_index":860,"title":{},"body":{"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{}}}],["autoresolution",{"_index":1191,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["avaiable",{"_index":912,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["available",{"_index":1879,"title":{},"body":{"modules.html":{}}}],["axes",{"_index":525,"title":{},"body":{"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartObject.html":{}}}],["axes.length",{"_index":788,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["axes.push(entry",{"_index":796,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["axis",{"_index":528,"title":{},"body":{"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/ChartObject.html":{},"interfaces/DataEntry.html":{}}}],["axis.id",{"_index":792,"title":{},"body":{"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"interfaces/DataEntry.html":{}}}],["axis.position",{"_index":794,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["axis.ticks.max",{"_index":752,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["axis.ticks.min",{"_index":754,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["back",{"_index":1255,"title":{},"body":{"components/LoginComponent.html":{}}}],["backend",{"_index":147,"title":{},"body":{"injectables/AppConfig.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"interfaces/IAppConfig.html":{},"components/LoginComponent.html":{},"interfaces/MeasurementDevice.html":{},"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"classes/User.html":{},"interfaces/VarSupply.html":{},"components/VideostreamComponent.html":{},"miscellaneous/functions.html":{}}}],["backendpath",{"_index":993,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["background",{"_index":830,"title":{},"body":{"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ControlSliderComponent.html":{},"components/LoginComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{}}}],["base64",{"_index":624,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["battery",{"_index":1587,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["battery_20",{"_index":1423,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["battery_unknown",{"_index":1611,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["batteryicon",{"_index":1592,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["batterylevel",{"_index":1593,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["bearer",{"_index":1235,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["before",{"_index":387,"title":{},"body":{"modules/AppModule.html":{},"components/ChartFormComponent.html":{},"miscellaneous/functions.html":{}}}],["behaviorsubject",{"_index":469,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["behaviorsubject(json.parse(localstorage.getitem('currentuser",{"_index":500,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["belong",{"_index":538,"title":{},"body":{"interfaces/ChartAxis.html":{},"interfaces/ChartObject.html":{}}}],["belongs",{"_index":870,"title":{},"body":{"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartJsDataset.html":{}}}],["beta.28.3",{"_index":1809,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":513,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["bezier(0.4,0.0,0.2,1",{"_index":1553,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["big",{"_index":949,"title":{},"body":{"components/ChartFormComponent.html":{},"components/ControlSliderComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["black",{"_index":1320,"title":{},"body":{"components/LoginComponent.html":{}}}],["block",{"_index":966,"title":{},"body":{"components/ChartFormComponent.html":{},"components/LoginComponent.html":{}}}],["board",{"_index":1028,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{},"components/SupplyVoltagesComponent.html":{}}}],["body",{"_index":254,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/GeneralSettingsComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["boolean",{"_index":449,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"interfaces/IAppConfig.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"interfaces/NavItem.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"interfaces/VarSupply.html":{}}}],["boot",{"_index":178,"title":{},"body":{"injectables/AppConfig.html":{}}}],["boots",{"_index":405,"title":{},"body":{"modules/AppModule.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["bootstrap",{"_index":308,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":834,"title":{},"body":{"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ControlSliderComponent.html":{},"components/LoginComponent.html":{},"components/MyNavComponent.html":{}}}],["border:1px",{"_index":1131,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["bordercolor",{"_index":973,"title":{},"body":{"interfaces/ChartJsDataset.html":{}}}],["bordercolor?:string",{"_index":867,"title":{},"body":{"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{}}}],["bottom",{"_index":397,"title":{},"body":{"modules/AppModule.html":{},"components/ChartFormComponent.html":{},"components/ControlSliderComponent.html":{},"components/MDashboardComponent.html":{}}}],["breakpointobserver",{"_index":1600,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["breakpoints",{"_index":1642,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["brightness",{"_index":1164,"title":{},"body":{"components/GeneralSettingsComponent.html":{}}}],["browse",{"_index":1878,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":328,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":333,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":332,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":326,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":961,"title":{},"body":{"components/ChartFormComponent.html":{},"components/ControlSliderComponent.html":{},"components/MyNavComponent.html":{}}}],["bug",{"_index":1721,"title":{},"body":{"interfaces/VarSupply.html":{}}}],["build",{"_index":1860,"title":{},"body":{"index.html":{}}}],["button",{"_index":554,"title":{},"body":{"components/ChartComponent.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["c",{"_index":272,"title":{},"body":{"injectables/AppConfig.html":{}}}],["cache",{"_index":1442,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["calculation",{"_index":650,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["call",{"_index":252,"title":{},"body":{"injectables/AppConfig.html":{},"modules/AppModule.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/SupplyVoltagesComponent.html":{}}}],["callback",{"_index":291,"title":{},"body":{"injectables/AppConfig.html":{}}}],["called",{"_index":142,"title":{},"body":{"injectables/AppConfig.html":{},"modules/AppModule.html":{},"components/ChartComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"components/MeasurementConfigurationComponent.html":{},"components/SupplyVoltagesComponent.html":{},"miscellaneous/functions.html":{}}}],["callpath",{"_index":1019,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/MeasurementConfigurationComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["calls",{"_index":992,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["canactivate",{"_index":426,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":444,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cancel",{"_index":1066,"title":{},"body":{"components/ConfirmDialog.html":{},"components/LoginComponent.html":{},"components/PowerOffDialog.html":{}}}],["cancelset",{"_index":1067,"title":{},"body":{"components/ConfirmDialog.html":{}}}],["card",{"_index":814,"title":{},"body":{"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/MDashboardComponent.html":{}}}],["case",{"_index":757,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["catch((response",{"_index":300,"title":{},"body":{"injectables/AppConfig.html":{}}}],["catcherror",{"_index":211,"title":{},"body":{"injectables/AppConfig.html":{},"interceptors/ErrorInterceptor.html":{}}}],["catcherror((e",{"_index":271,"title":{},"body":{"injectables/AppConfig.html":{}}}],["cd",{"_index":583,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["center",{"_index":1127,"title":{},"body":{"components/ControlSliderComponent.html":{},"components/MDashboardComponent.html":{},"components/MyNavComponent.html":{}}}],["centered",{"_index":1331,"title":{},"body":{"components/LoginComponent.html":{}}}],["change",{"_index":731,"title":{},"body":{"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"interfaces/DataEntry.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{},"index.html":{}}}],["changed",{"_index":715,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["changedetectorref",{"_index":584,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["changes",{"_index":592,"title":{},"body":{"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["character",{"_index":1280,"title":{},"body":{"components/LoginComponent.html":{}}}],["chart",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/ChartObject.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"interfaces/IAppConfig.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{},"dependencies.html":{}}}],["chart'},{'name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["chart(this.chartobject.chartid",{"_index":711,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["chart.component.css",{"_index":561,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["chart.component.html",{"_index":562,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["chart.datasets",{"_index":235,"title":{},"body":{"injectables/AppConfig.html":{}}}],["chart.js",{"_index":124,"title":{},"body":{"injectables/AppConfig.html":{},"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/ChartObject.html":{},"interfaces/DataEntry.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{},"dependencies.html":{}}}],["chart.name",{"_index":942,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["chartaxis",{"_index":521,"title":{"interfaces/ChartAxis.html":{}},"body":{"interfaces/ChartAxis.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartObject.html":{},"coverage.html":{}}}],["chartcomponent",{"_index":46,"title":{"components/ChartComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["chartdataset",{"_index":529,"title":{"interfaces/ChartDataset.html":{}},"body":{"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/ChartObject.html":{},"interfaces/DataEntry.html":{},"coverage.html":{}}}],["chartdataset.model",{"_index":530,"title":{},"body":{"interfaces/ChartAxis.html":{},"interfaces/ChartObject.html":{}}}],["chartdataset:chartjsdataset",{"_index":858,"title":{},"body":{"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{}}}],["chartformcomponent",{"_index":48,"title":{"components/ChartFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["chartid",{"_index":929,"title":{},"body":{"components/ChartFormComponent.html":{},"interfaces/ChartObject.html":{},"injectables/MeasurementUpdateService.html":{}}}],["chartid:string",{"_index":539,"title":{},"body":{"interfaces/ChartAxis.html":{},"interfaces/ChartObject.html":{}}}],["chartjsdataset",{"_index":846,"title":{"interfaces/ChartJsDataset.html":{}},"body":{"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{},"coverage.html":{}}}],["chartline",{"_index":563,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["chartobject",{"_index":532,"title":{"interfaces/ChartObject.html":{}},"body":{"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartObject.html":{},"interfaces/DataEntry.html":{},"interfaces/IAppConfig.html":{},"components/MDashboardComponent.html":{},"interfaces/MeasurementDevice.html":{},"coverage.html":{}}}],["chartobject.model",{"_index":1190,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["chartobject.name",{"_index":806,"title":{},"body":{"components/ChartComponent.html":{}}}],["chartobjects",{"_index":882,"title":{},"body":{"components/ChartFormComponent.html":{},"components/MDashboardComponent.html":{}}}],["chartoptions",{"_index":1224,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["charts",{"_index":878,"title":{},"body":{"components/ChartFormComponent.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["chartsettings",{"_index":427,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["check",{"_index":266,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"interceptors/JwtInterceptor.html":{},"index.html":{}}}],["checkbox",{"_index":950,"title":{},"body":{"components/ChartFormComponent.html":{},"components/ControlSliderComponent.html":{},"interfaces/VarSupply.html":{}}}],["checked",{"_index":1720,"title":{},"body":{"interfaces/VarSupply.html":{}}}],["checkinput",{"_index":1078,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["checks",{"_index":436,"title":{},"body":{"guards/AuthGuard.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["chevron_left",{"_index":1107,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["chevron_right",{"_index":1108,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["children",{"_index":1635,"title":{},"body":{"components/MyNavComponent.html":{},"interfaces/NavItem.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["chips",{"_index":1186,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["choose",{"_index":1032,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["circle",{"_index":1123,"title":{},"body":{"components/ControlSliderComponent.html":{},"components/MyNavComponent.html":{}}}],["class",{"_index":37,"title":{"classes/User.html":{}},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"interceptors/ErrorInterceptor.html":{},"components/GeneralSettingsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"classes/User.html":{},"components/VideostreamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":1692,"title":{},"body":{"classes/User.html":{}}}],["clear",{"_index":102,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["clearmessage",{"_index":1433,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["clearmessage(chartid",{"_index":1443,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["clearmessage(chartid:string",{"_index":1508,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["cli",{"_index":1807,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["clicked",{"_index":988,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["clicking",{"_index":1718,"title":{},"body":{"interfaces/VarSupply.html":{}}}],["client",{"_index":186,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"dependencies.html":{}}}],["close",{"_index":989,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["cluster_appmodule",{"_index":311,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":314,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":312,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":315,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1343,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["col",{"_index":932,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["collapsed",{"_index":1550,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["color",{"_index":831,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartJsDataset.html":{},"components/ControlSliderComponent.html":{},"components/LoginComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{}}}],["color:#673ab7",{"_index":1579,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["color:#fafafa",{"_index":1132,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["commonmodule",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["communicate",{"_index":599,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{},"coverage.html":{},"index.html":{}}}],["component:editorcomponent",{"_index":431,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:mdashboardcomponent",{"_index":421,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:measurementconfigurationcomponent",{"_index":429,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component_template",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{},"overview.html":{}}}],["concat(this.voltagedevices).concat(this.currentdevices",{"_index":1412,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["concerning",{"_index":1707,"title":{},"body":{"interfaces/VarSupply.html":{}}}],["config",{"_index":119,"title":{},"body":{"injectables/AppConfig.html":{},"modules/AppModule.html":{},"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartObject.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"interfaces/IAppConfig.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{},"injectables/MeasurementUpdateService.html":{},"interfaces/VarSupply.html":{},"miscellaneous/functions.html":{}}}],["config'},{'name",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["config.component",{"_index":385,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["config.component.css",{"_index":1373,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["config.component.html",{"_index":1374,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["config.component.ts",{"_index":1370,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{},"coverage.html":{}}}],["config.component.ts:107",{"_index":1379,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["config.component.ts:22",{"_index":1394,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["config.component.ts:26",{"_index":1397,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["config.component.ts:30",{"_index":1387,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["config.component.ts:34",{"_index":1399,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["config.component.ts:38",{"_index":1378,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["config.component.ts:40",{"_index":1396,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["config.component.ts:45",{"_index":1385,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["config.component.ts:86",{"_index":1401,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["config.component.ts:99",{"_index":1384,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["config.model",{"_index":208,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/MeasurementConfigurationComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["config.model.ts",{"_index":1180,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{},"coverage.html":{}}}],["config/measurement",{"_index":384,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MeasurementConfigurationComponent.html":{},"coverage.html":{}}}],["configobject",{"_index":1168,"title":{},"body":{"components/GeneralSettingsComponent.html":{}}}],["configuration",{"_index":92,"title":{},"body":{"injectables/AppConfig.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["configure",{"_index":1026,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["configured",{"_index":1395,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["confirm",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["confirmation",{"_index":1036,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["confirmationdialog",{"_index":1009,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["confirmationdialogdata",{"_index":983,"title":{"interfaces/ConfirmationDialogData.html":{}},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{},"coverage.html":{}}}],["confirmdialog",{"_index":51,"title":{"components/ConfirmDialog.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["confirmed",{"_index":1013,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["connecting",{"_index":188,"title":{},"body":{"injectables/AppConfig.html":{}}}],["console.log",{"_index":280,"title":{},"body":{"injectables/AppConfig.html":{}}}],["console.log(\"clear",{"_index":232,"title":{},"body":{"injectables/AppConfig.html":{}}}],["console.log(\"could",{"_index":293,"title":{},"body":{"injectables/AppConfig.html":{}}}],["console.log(\"deleted",{"_index":228,"title":{},"body":{"injectables/AppConfig.html":{}}}],["console.log(\"error",{"_index":1504,"title":{},"body":{"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["console.log(\"exp",{"_index":798,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["console.log(\"key",{"_index":223,"title":{},"body":{"injectables/AppConfig.html":{}}}],["console.log(\"play",{"_index":804,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["console.log(\"post",{"_index":251,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/GeneralSettingsComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["console.log(\"sending",{"_index":1493,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["console.log(\"trying",{"_index":264,"title":{},"body":{"injectables/AppConfig.html":{}}}],["console.log(`${this.item.route",{"_index":1565,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["console.log(`checking",{"_index":1561,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["console.log(key",{"_index":224,"title":{},"body":{"injectables/AppConfig.html":{}}}],["console.log(response",{"_index":258,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/GeneralSettingsComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["const",{"_index":419,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/MeasurementConfigurationComponent.html":{}}}],["constructor",{"_index":108,"title":{},"body":{"injectables/AppConfig.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/GeneralSettingsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["constructor(authenticationservice",{"_index":1147,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["constructor(breakpointobserver",{"_index":1599,"title":{},"body":{"components/MyNavComponent.html":{}}}],["constructor(dialog",{"_index":1377,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["constructor(formbuilder",{"_index":1249,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(http",{"_index":109,"title":{},"body":{"injectables/AppConfig.html":{},"injectables/AuthenticationService.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/GeneralSettingsComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/PowerOffDialog.html":{}}}],["constructor(measurementupdateservice",{"_index":581,"title":{},"body":{"components/ChartComponent.html":{},"components/MDashboardComponent.html":{}}}],["constructor(private",{"_index":498,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"interfaces/DataEntry.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/MDashboardComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["constructor(public",{"_index":219,"title":{},"body":{"injectables/AppConfig.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/GeneralSettingsComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["constructor(router",{"_index":441,"title":{},"body":{"guards/AuthGuard.html":{},"components/MenuListItemComponent.html":{}}}],["container",{"_index":819,"title":{},"body":{"components/ChartComponent.html":{},"components/MDashboardComponent.html":{},"components/MyNavComponent.html":{}}}],["containg",{"_index":615,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["containing",{"_index":416,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/ChartAxis.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartObject.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["contains",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"interfaces/IAppConfig.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{}}}],["content",{"_index":1014,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["content/box",{"_index":1329,"title":{},"body":{"components/LoginComponent.html":{}}}],["continue",{"_index":229,"title":{},"body":{"injectables/AppConfig.html":{}}}],["control",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["controlled",{"_index":1090,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["controlslidercomponent",{"_index":54,"title":{"components/ControlSliderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["convas",{"_index":594,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["convenience",{"_index":1293,"title":{},"body":{"components/LoginComponent.html":{}}}],["core",{"_index":1814,"title":{},"body":{"dependencies.html":{}}}],["corelate",{"_index":1725,"title":{},"body":{"interfaces/VarSupply.html":{}}}],["correspond",{"_index":853,"title":{},"body":{"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{}}}],["coverage",{"_index":1743,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpu",{"_index":1605,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["create",{"_index":600,"title":{},"body":{"components/ChartComponent.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"interfaces/VarSupply.html":{}}}],["created",{"_index":627,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["creates",{"_index":551,"title":{},"body":{"components/ChartComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"components/MDashboardComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["credentials",{"_index":482,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["critical",{"_index":1614,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["csv",{"_index":799,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["cubic",{"_index":1552,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["curr_device.deviceid",{"_index":1424,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["current",{"_index":503,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/DataEntry.html":{},"interfaces/IAppConfig.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"interfaces/VarSupply.html":{}}}],["currentdevices",{"_index":1375,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["currently",{"_index":488,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChartFormComponent.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"classes/User.html":{},"interfaces/VarSupply.html":{}}}],["currentresolution",{"_index":1199,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["currentresolutionmap",{"_index":1223,"title":{},"body":{"interfaces/IAppConfig.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{}}}],["currents",{"_index":1389,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["currentuser",{"_index":452,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/JwtInterceptor.html":{}}}],["currentuser.token",{"_index":1231,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["currentuser.token.jwt",{"_index":1236,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["currentusersubject",{"_index":462,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["currentuservalue",{"_index":466,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["currentvoltage",{"_index":1709,"title":{},"body":{"interfaces/VarSupply.html":{}}}],["currentvoltage:number",{"_index":1728,"title":{},"body":{"interfaces/VarSupply.html":{}}}],["currvalue",{"_index":692,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/DataEntry.html":{}}}],["custom",{"_index":540,"title":{},"body":{"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/ChartObject.html":{},"interfaces/DataEntry.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{},"classes/User.html":{}}}],["customdatahandlerenabled",{"_index":840,"title":{},"body":{"interfaces/ChartDataset.html":{}}}],["customdatahandlerenabled:boolean",{"_index":857,"title":{},"body":{"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{}}}],["darkred",{"_index":1679,"title":{},"body":{"components/MyNavComponent.html":{}}}],["dashboard",{"_index":420,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChartFormComponent.html":{},"interfaces/IAppConfig.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"interfaces/MeasurementDevice.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["dashboard'},{'name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["dashboard.component",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["dashboard.component.css",{"_index":1353,"title":{},"body":{"components/MDashboardComponent.html":{}}}],["dashboard.component.html",{"_index":1354,"title":{},"body":{"components/MDashboardComponent.html":{}}}],["dashboard.component.ts",{"_index":1351,"title":{},"body":{"components/MDashboardComponent.html":{},"coverage.html":{}}}],["dashboard.component.ts:17",{"_index":1355,"title":{},"body":{"components/MDashboardComponent.html":{}}}],["dashboard.component.ts:31",{"_index":1360,"title":{},"body":{"components/MDashboardComponent.html":{}}}],["dashboard/chart/chart.component",{"_index":351,"title":{},"body":{"modules/AppModule.html":{}}}],["dashboard/chart/chart.component.ts",{"_index":550,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["dashboard/chart/chart.component.ts:106",{"_index":652,"title":{},"body":{"components/ChartComponent.html":{}}}],["dashboard/chart/chart.component.ts:111",{"_index":645,"title":{},"body":{"components/ChartComponent.html":{}}}],["dashboard/chart/chart.component.ts:120",{"_index":585,"title":{},"body":{"components/ChartComponent.html":{}}}],["dashboard/chart/chart.component.ts:133",{"_index":629,"title":{},"body":{"components/ChartComponent.html":{}}}],["dashboard/chart/chart.component.ts:140",{"_index":636,"title":{},"body":{"components/ChartComponent.html":{}}}],["dashboard/chart/chart.component.ts:158",{"_index":633,"title":{},"body":{"components/ChartComponent.html":{}}}],["dashboard/chart/chart.component.ts:166",{"_index":625,"title":{},"body":{"components/ChartComponent.html":{}}}],["dashboard/chart/chart.component.ts:196",{"_index":613,"title":{},"body":{"components/ChartComponent.html":{}}}],["dashboard/chart/chart.component.ts:286",{"_index":606,"title":{},"body":{"components/ChartComponent.html":{}}}],["dashboard/chart/chart.component.ts:312",{"_index":617,"title":{},"body":{"components/ChartComponent.html":{}}}],["dashboard/chart/chart.component.ts:329",{"_index":621,"title":{},"body":{"components/ChartComponent.html":{}}}],["dashboard/chart/chart.component.ts:345",{"_index":635,"title":{},"body":{"components/ChartComponent.html":{}}}],["dashboard/chart/chart.component.ts:366",{"_index":619,"title":{},"body":{"components/ChartComponent.html":{}}}],["dashboard/chart/chart.component.ts:385",{"_index":637,"title":{},"body":{"components/ChartComponent.html":{}}}],["dashboard/chart/chart.component.ts:74",{"_index":647,"title":{},"body":{"components/ChartComponent.html":{}}}],["dashboard/chart/chart.component.ts:79",{"_index":603,"title":{},"body":{"components/ChartComponent.html":{}}}],["dashboard/chart/chart.component.ts:84",{"_index":656,"title":{},"body":{"components/ChartComponent.html":{}}}],["dashboard/chart/chart.component.ts:87",{"_index":665,"title":{},"body":{"components/ChartComponent.html":{}}}],["dashboard/chart/chart.component.ts:94",{"_index":641,"title":{},"body":{"components/ChartComponent.html":{}}}],["dashboard/chart/chart.component.ts:99",{"_index":659,"title":{},"body":{"components/ChartComponent.html":{}}}],["dashboard/m",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MDashboardComponent.html":{},"coverage.html":{}}}],["data",{"_index":239,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"miscellaneous/functions.html":{}}}],["data.battery.value",{"_index":1652,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["data.charging",{"_index":1655,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["data.temp",{"_index":1650,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["data.unit.charat(0",{"_index":684,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["data.value",{"_index":690,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["data[dataset.sourceid].max",{"_index":753,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["data[dataset.sourceid].unit",{"_index":745,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["data[dataset.sourceid].value",{"_index":780,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["datacount",{"_index":729,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["dataentry",{"_index":672,"title":{"interfaces/DataEntry.html":{}},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"coverage.html":{}}}],["datapoints",{"_index":872,"title":{},"body":{"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{}}}],["datas",{"_index":737,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["dataset",{"_index":234,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/DataEntry.html":{}}}],["dataset.autolabel",{"_index":744,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["dataset.autorange",{"_index":749,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["dataset.chartdataset._meta",{"_index":241,"title":{},"body":{"injectables/AppConfig.html":{}}}],["dataset.chartdataset.currvalue",{"_index":810,"title":{},"body":{"components/ChartComponent.html":{}}}],["dataset.chartdataset.data",{"_index":240,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["dataset.chartdataset.data.length",{"_index":730,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["dataset.chartdataset.data.shift",{"_index":739,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["dataset.chartdataset.label",{"_index":746,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["dataset.chartdataset.yaxisid",{"_index":748,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["dataset.customdatahandlerenabled",{"_index":774,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["dataset.datasetid",{"_index":720,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["dataset.name",{"_index":747,"title":{},"body":{"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"interfaces/DataEntry.html":{}}}],["dataset.negrange",{"_index":750,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["dataset.sourceid",{"_index":943,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["dataset.unit",{"_index":721,"title":{},"body":{"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"interfaces/DataEntry.html":{}}}],["datasethandlerfunction",{"_index":722,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["datasethandlerfunctions",{"_index":564,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["datasetid",{"_index":719,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/DataEntry.html":{}}}],["datasetid:string",{"_index":851,"title":{},"body":{"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{}}}],["datasetname",{"_index":741,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/DataEntry.html":{}}}],["datasets",{"_index":537,"title":{},"body":{"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartObject.html":{},"interfaces/DataEntry.html":{}}}],["datavalues",{"_index":1217,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["date",{"_index":1704,"title":{},"body":{"classes/User.html":{}}}],["date().gettime",{"_index":930,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["deal",{"_index":1388,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["decide",{"_index":718,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["decimal",{"_index":662,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["declarations",{"_index":307,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":997,"title":{},"body":{"components/ConfirmDialog.html":{}}}],["decrease",{"_index":1478,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["deep",{"_index":163,"title":{},"body":{"injectables/AppConfig.html":{}}}],["default",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/VideostreamComponent.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":524,"title":{},"body":{"interfaces/ChartAxis.html":{},"interfaces/ChartObject.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{},"components/SupplyVoltagesComponent.html":{}}}],["defined",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/GeneralSettingsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"classes/User.html":{},"components/VideostreamComponent.html":{}}}],["defines",{"_index":660,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/DataEntry.html":{}}}],["defining",{"_index":531,"title":{},"body":{"interfaces/ChartAxis.html":{},"interfaces/ChartObject.html":{}}}],["deice",{"_index":915,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["delete",{"_index":226,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartFormComponent.html":{}}}],["deleteaxis",{"_index":889,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["deleteaxis(axis",{"_index":899,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["deletechart",{"_index":890,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["deletedataset",{"_index":891,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["deletedataset(datasetid",{"_index":903,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["deletedataset(datasetid:string",{"_index":941,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["deletes",{"_index":901,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["deltes",{"_index":905,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["demo",{"_index":1741,"title":{},"body":{"components/VideostreamComponent.html":{}}}],["demonstrator",{"_index":1669,"title":{},"body":{"components/MyNavComponent.html":{}}}],["dependencies",{"_index":306,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":1336,"title":{},"body":{"components/LoginComponent.html":{}}}],["deployment",{"_index":1181,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["deps",{"_index":407,"title":{},"body":{"modules/AppModule.html":{}}}],["depth",{"_index":1519,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartObject.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"interceptors/ErrorInterceptor.html":{},"components/GeneralSettingsComponent.html":{},"interfaces/IAppConfig.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{},"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"classes/User.html":{},"interfaces/VarSupply.html":{},"components/VideostreamComponent.html":{}}}],["design",{"_index":1824,"title":{},"body":{"dependencies.html":{}}}],["desiredresolution",{"_index":1382,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{}}}],["desiredresolution?:number",{"_index":1203,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["desiredvoltage",{"_index":1710,"title":{},"body":{"interfaces/VarSupply.html":{}}}],["desiredvoltage?:number",{"_index":1732,"title":{},"body":{"interfaces/VarSupply.html":{}}}],["destroyed",{"_index":630,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["details",{"_index":510,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["dev",{"_index":1854,"title":{},"body":{"index.html":{}}}],["development",{"_index":1852,"title":{},"body":{"index.html":{}}}],["device",{"_index":913,"title":{},"body":{"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/IAppConfig.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["device.currentresolution",{"_index":1416,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["device.desiredresolution",{"_index":1417,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["device.desiredvoltage",{"_index":1052,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/MeasurementConfigurationComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["device.deviceid",{"_index":947,"title":{},"body":{"components/ChartFormComponent.html":{},"components/MeasurementConfigurationComponent.html":{}}}],["device.maxvalue",{"_index":1053,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/MeasurementConfigurationComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["device.name",{"_index":1405,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["device.oldname",{"_index":1403,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["device.type",{"_index":1420,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["deviceid",{"_index":1077,"title":{},"body":{"components/ControlSliderComponent.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["devices",{"_index":883,"title":{},"body":{"components/ChartFormComponent.html":{},"interfaces/IAppConfig.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{}}}],["devices.py",{"_index":1201,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["devices:array",{"_index":1205,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["dialog",{"_index":977,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["dialog'},{'name",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["dialog.component.html",{"_index":978,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["dialogref",{"_index":979,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["dialogref.afterclosed().subscribe(succesfull",{"_index":1414,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["different",{"_index":183,"title":{},"body":{"injectables/AppConfig.html":{},"interfaces/ChartAxis.html":{},"interfaces/ChartObject.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["directive",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["directives",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1859,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1863,"title":{},"body":{"index.html":{}}}],["disable/enable",{"_index":1030,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["disabled",{"_index":1045,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/NavItem.html":{},"components/SupplyVoltagesComponent.html":{}}}],["disables",{"_index":1087,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["display",{"_index":827,"title":{},"body":{"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"interfaces/IAppConfig.html":{},"components/LoginComponent.html":{},"interfaces/MeasurementDevice.html":{}}}],["displayed",{"_index":1039,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{},"components/SupplyVoltagesComponent.html":{}}}],["displayname",{"_index":1631,"title":{},"body":{"components/MyNavComponent.html":{},"interfaces/NavItem.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["dist",{"_index":1862,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":543,"title":{},"body":{"interfaces/ChartAxis.html":{},"interfaces/ChartObject.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{},"coverage.html":{}}}],["doesn't",{"_index":595,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["down",{"_index":733,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["drawer",{"_index":1520,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["drawer.toggle",{"_index":1571,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["drawer:any",{"_index":1557,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["dropdown",{"_index":825,"title":{},"body":{"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["dropright",{"_index":808,"title":{},"body":{"components/ChartComponent.html":{}}}],["during",{"_index":268,"title":{},"body":{"injectables/AppConfig.html":{}}}],["dynamic",{"_index":1801,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1289,"title":{},"body":{"components/LoginComponent.html":{}}}],["e.g",{"_index":122,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["e1e1e1",{"_index":1136,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["e2e",{"_index":1871,"title":{},"body":{"index.html":{}}}],["easy",{"_index":1295,"title":{},"body":{"components/LoginComponent.html":{}}}],["edit",{"_index":877,"title":{},"body":{"components/ChartFormComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["editor",{"_index":430,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["editor'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["editor/editor.component",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["editorcomponent",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["efefef",{"_index":1133,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["element",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["elements",{"_index":156,"title":{},"body":{"injectables/AppConfig.html":{}}}],["empty",{"_index":758,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["enable",{"_index":848,"title":{},"body":{"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/IAppConfig.html":{},"components/LoginComponent.html":{},"interfaces/MeasurementDevice.html":{}}}],["enabled",{"_index":743,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"interfaces/VarSupply.html":{}}}],["enabled:boolean",{"_index":1731,"title":{},"body":{"interfaces/VarSupply.html":{}}}],["enables",{"_index":1088,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["end",{"_index":1870,"title":{},"body":{"index.html":{}}}],["entered",{"_index":1263,"title":{},"body":{"components/LoginComponent.html":{}}}],["entry",{"_index":791,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"interfaces/VarSupply.html":{}}}],["entrycomponents",{"_index":324,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":1790,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":276,"title":{},"body":{"injectables/AppConfig.html":{},"interceptors/ErrorInterceptor.html":{}}}],["err.error.message",{"_index":1159,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["err.status",{"_index":1156,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["err.statustext",{"_index":1160,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error",{"_index":281,"title":{},"body":{"injectables/AppConfig.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["errorcallback",{"_index":133,"title":{},"body":{"injectables/AppConfig.html":{}}}],["errorinterceptor",{"_index":318,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["errors",{"_index":1266,"title":{},"body":{"components/LoginComponent.html":{}}}],["etc",{"_index":125,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["eval(dataset.handler",{"_index":777,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["example",{"_index":558,"title":{},"body":{"components/ChartComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{},"components/SupplyVoltagesComponent.html":{}}}],["execute",{"_index":1867,"title":{},"body":{"index.html":{}}}],["executed",{"_index":1449,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["exist",{"_index":1230,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["expand_more",{"_index":1576,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["expanded",{"_index":1517,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["expiry",{"_index":1703,"title":{},"body":{"classes/User.html":{}}}],["export",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/ChartObject.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"interceptors/ErrorInterceptor.html":{},"components/GeneralSettingsComponent.html":{},"interfaces/IAppConfig.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"interfaces/NavItem.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"classes/User.html":{},"interfaces/VarSupply.html":{},"components/VideostreamComponent.html":{}}}],["exportcsv",{"_index":572,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["exported",{"_index":786,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["exportimage",{"_index":573,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["exports",{"_index":310,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"overview.html":{}}}],["f",{"_index":1248,"title":{},"body":{"components/LoginComponent.html":{}}}],["f2f2f2",{"_index":1580,"title":{},"body":{"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{}}}],["fafafa",{"_index":1134,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["fails",{"_index":1607,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["fake",{"_index":773,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["fallback",{"_index":173,"title":{},"body":{"injectables/AppConfig.html":{},"components/LoginComponent.html":{}}}],["fallbackconfpath",{"_index":95,"title":{},"body":{"injectables/AppConfig.html":{}}}],["false",{"_index":460,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"components/LoginComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"miscellaneous/variables.html":{}}}],["feed",{"_index":1737,"title":{},"body":{"components/VideostreamComponent.html":{}}}],["fefefe",{"_index":1330,"title":{},"body":{"components/LoginComponent.html":{}}}],["field",{"_index":1259,"title":{},"body":{"components/LoginComponent.html":{}}}],["fields",{"_index":1297,"title":{},"body":{"components/LoginComponent.html":{}}}],["figure",{"_index":732,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/ChartObject.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"interceptors/ErrorInterceptor.html":{},"components/GeneralSettingsComponent.html":{},"interfaces/IAppConfig.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"interfaces/NavItem.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"classes/User.html":{},"interfaces/VarSupply.html":{},"components/VideostreamComponent.html":{},"coverage.html":{}}}],["files",{"_index":1856,"title":{},"body":{"index.html":{}}}],["fill",{"_index":862,"title":{},"body":{"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{}}}],["fill?:boolean",{"_index":865,"title":{},"body":{"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{}}}],["find",{"_index":136,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["findworkinghost",{"_index":103,"title":{},"body":{"injectables/AppConfig.html":{}}}],["findworkinghost(hostlist",{"_index":128,"title":{},"body":{"injectables/AppConfig.html":{}}}],["first",{"_index":1275,"title":{},"body":{"components/LoginComponent.html":{}}}],["firstname",{"_index":1694,"title":{},"body":{"classes/User.html":{}}}],["fixed",{"_index":1310,"title":{},"body":{"components/LoginComponent.html":{}}}],["flag",{"_index":843,"title":{},"body":{"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{},"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"interfaces/VarSupply.html":{},"index.html":{}}}],["flash_on",{"_index":1637,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["flex",{"_index":1676,"title":{},"body":{"components/MyNavComponent.html":{}}}],["following",{"_index":1018,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{},"components/SupplyVoltagesComponent.html":{}}}],["follows",{"_index":1012,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["font",{"_index":1115,"title":{},"body":{"components/ControlSliderComponent.html":{},"components/MyNavComponent.html":{}}}],["fontawesome",{"_index":1816,"title":{},"body":{"dependencies.html":{}}}],["for(let",{"_index":1419,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["form",{"_index":879,"title":{},"body":{"components/ChartFormComponent.html":{},"components/LoginComponent.html":{}}}],["form'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["form.component",{"_index":373,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["form.component.css",{"_index":880,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["form.component.html",{"_index":881,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["form.component.ts",{"_index":876,"title":{},"body":{"components/ChartFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:111",{"_index":902,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["form.component.ts:128",{"_index":896,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["form.component.ts:148",{"_index":908,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["form.component.ts:156",{"_index":904,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["form.component.ts:21",{"_index":910,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["form.component.ts:25",{"_index":916,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["form.component.ts:29",{"_index":914,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["form.component.ts:33",{"_index":893,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["form.component.ts:38",{"_index":906,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["form.component.ts:47",{"_index":907,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["form.component.ts:67",{"_index":900,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["form.component.ts:79",{"_index":894,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["form.component.ts:94",{"_index":897,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["form/chart",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChartFormComponent.html":{},"coverage.html":{}}}],["formbuilder",{"_index":1250,"title":{},"body":{"components/LoginComponent.html":{}}}],["formgroup",{"_index":1268,"title":{},"body":{"components/LoginComponent.html":{}}}],["formsmodule",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":140,"title":{},"body":{"injectables/AppConfig.html":{}}}],["from(this.http.get(appconfig.apiurl",{"_index":1646,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["from(this.http.get(this.pollurl",{"_index":1501,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["fromhosts",{"_index":295,"title":{},"body":{"injectables/AppConfig.html":{}}}],["frontend",{"_index":93,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"interfaces/DataEntry.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["full",{"_index":1315,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/VarSupply.html":{}}}],["function",{"_index":141,"title":{},"body":{"injectables/AppConfig.html":{},"modules/AppModule.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/DataEntry.html":{},"components/MeasurementConfigurationComponent.html":{},"injectables/MeasurementUpdateService.html":{},"coverage.html":{}}}],["function(data",{"_index":776,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["functions",{"_index":1844,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1873,"title":{},"body":{"index.html":{}}}],["general",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartObject.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"interfaces/IAppConfig.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["generalsettingscomponent",{"_index":59,"title":{"components/GeneralSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["generate",{"_index":1858,"title":{},"body":{"index.html":{}}}],["generated",{"_index":123,"title":{},"body":{"injectables/AppConfig.html":{},"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{},"index.html":{}}}],["getapiurl",{"_index":200,"title":{},"body":{"injectables/AppConfig.html":{}}}],["getcheckinput",{"_index":1092,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["getcurrentuserobservable",{"_index":463,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getcurrentuservalue",{"_index":492,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getf",{"_index":1272,"title":{},"body":{"components/LoginComponent.html":{}}}],["gets",{"_index":217,"title":{},"body":{"injectables/AppConfig.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"classes/User.html":{}}}],["getsysteminfos",{"_index":1647,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["getter",{"_index":1294,"title":{},"body":{"components/LoginComponent.html":{}}}],["getting",{"_index":1657,"title":{"index.html":{}},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["getvalidinputs",{"_index":1400,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["getvoltageupdateobs",{"_index":1434,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["getvoltageupdateobs(chartid",{"_index":1445,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["getvoltageupdateobs(chartid:string",{"_index":1510,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["given",{"_index":439,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/MeasurementUpdateService.html":{},"interfaces/VarSupply.html":{}}}],["go",{"_index":164,"title":{},"body":{"injectables/AppConfig.html":{},"index.html":{}}}],["goback",{"_index":1245,"title":{},"body":{"components/LoginComponent.html":{}}}],["going",{"_index":296,"title":{},"body":{"injectables/AppConfig.html":{}}}],["graph",{"_index":534,"title":{},"body":{"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartObject.html":{},"interfaces/DataEntry.html":{},"modules.html":{}}}],["gray",{"_index":833,"title":{},"body":{"components/ChartComponent.html":{},"components/ControlSliderComponent.html":{}}}],["grid",{"_index":1366,"title":{},"body":{"components/MDashboardComponent.html":{}}}],["group",{"_index":959,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["guard",{"_index":433,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":434,"title":{},"body":{"guards/AuthGuard.html":{}}}],["halts",{"_index":638,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["hammerjs",{"_index":1818,"title":{},"body":{"dependencies.html":{}}}],["handlepolleddata",{"_index":1435,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["handlepolleddata(data",{"_index":1447,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["handler",{"_index":772,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"interfaces/DataEntry.html":{}}}],["handler?:string",{"_index":856,"title":{},"body":{"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{}}}],["handset",{"_index":1624,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["header",{"_index":956,"title":{},"body":{"components/ChartFormComponent.html":{},"components/ControlSliderComponent.html":{},"interceptors/JwtInterceptor.html":{}}}],["heat",{"_index":1594,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["height",{"_index":822,"title":{},"body":{"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ControlSliderComponent.html":{},"components/LoginComponent.html":{},"components/MyNavComponent.html":{}}}],["height:30px",{"_index":1138,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["help",{"_index":1874,"title":{},"body":{"index.html":{}}}],["here",{"_index":1301,"title":{},"body":{"components/LoginComponent.html":{}}}],["hex",{"_index":866,"title":{},"body":{"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{}}}],["hidden",{"_index":1309,"title":{},"body":{"components/LoginComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["highest",{"_index":1719,"title":{},"body":{"interfaces/VarSupply.html":{}}}],["holds",{"_index":642,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"components/MDashboardComponent.html":{}}}],["host",{"_index":138,"title":{},"body":{"injectables/AppConfig.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["host.json",{"_index":285,"title":{},"body":{"injectables/AppConfig.html":{}}}],["host:string",{"_index":1206,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["hostbinding",{"_index":1536,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["hostbinding('attr.aria",{"_index":1555,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["hostbindings",{"_index":1522,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["hostlist",{"_index":139,"title":{},"body":{"injectables/AppConfig.html":{}}}],["hostlist.length",{"_index":261,"title":{},"body":{"injectables/AppConfig.html":{}}}],["hostlist[position",{"_index":262,"title":{},"body":{"injectables/AppConfig.html":{}}}],["hosts",{"_index":287,"title":{},"body":{"injectables/AppConfig.html":{}}}],["hosts.json",{"_index":182,"title":{},"body":{"injectables/AppConfig.html":{}}}],["hostspath",{"_index":96,"title":{},"body":{"injectables/AppConfig.html":{}}}],["hotspot",{"_index":1165,"title":{},"body":{"components/GeneralSettingsComponent.html":{}}}],["html",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["http",{"_index":98,"title":{},"body":{"injectables/AppConfig.html":{},"injectables/AuthenticationService.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"interfaces/IAppConfig.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{},"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["http://localhost:4200",{"_index":1855,"title":{},"body":{"index.html":{}}}],["http://localhost:8080/api",{"_index":216,"title":{},"body":{"injectables/AppConfig.html":{}}}],["http_interceptors",{"_index":357,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":110,"title":{},"body":{"injectables/AppConfig.html":{},"injectables/AuthenticationService.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["httpclient,private",{"_index":1176,"title":{},"body":{"components/GeneralSettingsComponent.html":{}}}],["httpclientmodule",{"_index":356,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":1153,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httphandler",{"_index":1151,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httpinterceptor",{"_index":1154,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httprequest",{"_index":1150,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["human",{"_index":1392,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["iappconfig",{"_index":198,"title":{"interfaces/IAppConfig.html":{}},"body":{"injectables/AppConfig.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{},"components/SupplyVoltagesComponent.html":{},"coverage.html":{}}}],["icon",{"_index":1613,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["iconname",{"_index":1632,"title":{},"body":{"components/MyNavComponent.html":{},"interfaces/NavItem.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["icons",{"_index":1825,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":526,"title":{},"body":{"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/ChartObject.html":{},"interfaces/DataEntry.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{},"injectables/MeasurementUpdateService.html":{},"classes/User.html":{}}}],["identifier",{"_index":1744,"title":{},"body":{"coverage.html":{}}}],["idtoyaxis",{"_index":565,"title":{},"body":{"components/ChartComponent.html":{}}}],["idtoyaxis:record",{"_index":693,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["if(!this.subjects.hasownproperty(chartid",{"_index":1484,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["if(item.loginrequired",{"_index":1566,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["if(this.chartobject.axes",{"_index":789,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["if(this.deviceid",{"_index":1101,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["if(this.istoggleenabled",{"_index":1570,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["if(this.subscribercounter",{"_index":1487,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["if(unit",{"_index":687,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["ignore",{"_index":1055,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["image",{"_index":622,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["implement",{"_index":1418,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["implements",{"_index":451,"title":{},"body":{"guards/AuthGuard.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"interceptors/ErrorInterceptor.html":{},"components/GeneralSettingsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["import",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartObject.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"interceptors/ErrorInterceptor.html":{},"components/GeneralSettingsComponent.html":{},"interfaces/IAppConfig.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["important",{"_index":828,"title":{},"body":{"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{}}}],["imports",{"_index":325,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["increased",{"_index":1727,"title":{},"body":{"interfaces/VarSupply.html":{}}}],["incresed",{"_index":1477,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/ChartObject.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"interceptors/ErrorInterceptor.html":{},"components/GeneralSettingsComponent.html":{},"interfaces/IAppConfig.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"interfaces/NavItem.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"classes/User.html":{},"interfaces/VarSupply.html":{},"components/VideostreamComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/ChartObject.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"interceptors/ErrorInterceptor.html":{},"components/GeneralSettingsComponent.html":{},"interfaces/IAppConfig.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"interfaces/NavItem.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"classes/User.html":{},"interfaces/VarSupply.html":{},"components/VideostreamComponent.html":{}}}],["inform",{"_index":995,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["information",{"_index":604,"title":{},"body":{"components/ChartComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"classes/User.html":{}}}],["inherit",{"_index":1672,"title":{},"body":{"components/MyNavComponent.html":{}}}],["init",{"_index":1380,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["initializeapp",{"_index":404,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["initializeapp(appconfig",{"_index":391,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["inject",{"_index":1002,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["inject(mat_dialog_data",{"_index":998,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["injectable",{"_index":87,"title":{"injectables/AppConfig.html":{},"injectables/AuthenticationService.html":{},"injectables/MeasurementUpdateService.html":{}},"body":{"injectables/AppConfig.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MeasurementUpdateService.html":{},"coverage.html":{}}}],["injectables",{"_index":89,"title":{},"body":{"injectables/AppConfig.html":{},"injectables/AuthenticationService.html":{},"injectables/MeasurementUpdateService.html":{},"overview.html":{}}}],["inline",{"_index":965,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["input",{"_index":666,"title":{},"body":{"components/ChartComponent.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"components/MenuListItemComponent.html":{}}}],["inputs",{"_index":580,"title":{},"body":{"components/ChartComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["instead",{"_index":292,"title":{},"body":{"injectables/AppConfig.html":{},"interfaces/VarSupply.html":{}}}],["inteface",{"_index":1007,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["intercept",{"_index":1146,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["intercept(request",{"_index":1149,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["interceptor",{"_index":1139,"title":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":1140,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["interface",{"_index":520,"title":{"interfaces/ChartAxis.html":{},"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/ChartObject.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{},"interfaces/NavItem.html":{},"interfaces/ROUTE.html":{},"interfaces/VarSupply.html":{}},"body":{"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/ChartObject.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{},"components/MyNavComponent.html":{},"interfaces/NavItem.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"interfaces/VarSupply.html":{},"coverage.html":{}}}],["interfaces",{"_index":522,"title":{},"body":{"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/ChartObject.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{},"interfaces/NavItem.html":{},"interfaces/ROUTE.html":{},"interfaces/VarSupply.html":{},"overview.html":{}}}],["internal",{"_index":1202,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{},"injectables/MeasurementUpdateService.html":{}}}],["interval",{"_index":1465,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["invalid",{"_index":1111,"title":{},"body":{"components/ControlSliderComponent.html":{},"components/LoginComponent.html":{}}}],["io",{"_index":1831,"title":{},"body":{"dependencies.html":{}}}],["ip",{"_index":184,"title":{},"body":{"injectables/AppConfig.html":{}}}],["ip's",{"_index":195,"title":{},"body":{"injectables/AppConfig.html":{}}}],["isempty",{"_index":1242,"title":{},"body":{"components/LoginComponent.html":{}}}],["ishandset",{"_index":1595,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["isloggedin",{"_index":464,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["istoggleenabled",{"_index":1521,"title":{},"body":{"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["istoggleenabled:boolean",{"_index":1554,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["it's",{"_index":597,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["item",{"_index":1514,"title":{},"body":{"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["item'},{'name",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["item.active",{"_index":1578,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["item.children",{"_index":1568,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["item.children.length",{"_index":1569,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["item.component",{"_index":377,"title":{},"body":{"modules/AppModule.html":{}}}],["item.component.css",{"_index":1515,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["item.component.html",{"_index":1516,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["item.component.ts",{"_index":1513,"title":{},"body":{"components/MenuListItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:23",{"_index":1526,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["item.component.ts:24",{"_index":1534,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["item.component.ts:25",{"_index":1530,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["item.component.ts:26",{"_index":1528,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["item.component.ts:27",{"_index":1525,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["item.component.ts:28",{"_index":1524,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["item.component.ts:29",{"_index":1535,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["item.component.ts:35",{"_index":1531,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["item.component.ts:46",{"_index":1533,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["item.displayname",{"_index":1575,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["item.iconname",{"_index":1574,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["item.name",{"_index":1062,"title":{},"body":{"components/ConfirmDialog.html":{}}}],["item.newvalue",{"_index":1065,"title":{},"body":{"components/ConfirmDialog.html":{}}}],["item.oldvalue",{"_index":1063,"title":{},"body":{"components/ConfirmDialog.html":{}}}],["item.ts",{"_index":1680,"title":{},"body":{"interfaces/NavItem.html":{},"coverage.html":{}}}],["item/menu",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"components/MenuListItemComponent.html":{},"coverage.html":{}}}],["item/nav",{"_index":1643,"title":{},"body":{"components/MyNavComponent.html":{},"interfaces/NavItem.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"coverage.html":{}}}],["items",{"_index":1640,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["jquery",{"_index":1820,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":560,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"dependencies.html":{}}}],["json.stringify(response",{"_index":302,"title":{},"body":{"injectables/AppConfig.html":{}}}],["json.stringify(user",{"_index":516,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["jsoneditor",{"_index":381,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["jwt",{"_index":484,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"classes/User.html":{},"dependencies.html":{}}}],["jwt_expires",{"_index":1705,"title":{},"body":{"classes/User.html":{}}}],["jwtinterceptor",{"_index":319,"title":{"interceptors/JwtInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/JwtInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["karma",{"_index":1869,"title":{},"body":{"index.html":{}}}],["keep",{"_index":512,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["keeps",{"_index":1474,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["key",{"_index":222,"title":{},"body":{"injectables/AppConfig.html":{}}}],["key.startswith(\"_",{"_index":225,"title":{},"body":{"injectables/AppConfig.html":{}}}],["knows",{"_index":418,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["label",{"_index":740,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/DataEntry.html":{}}}],["label?:string",{"_index":868,"title":{},"body":{"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{}}}],["labeled",{"_index":971,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["labels",{"_index":644,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["laod",{"_index":294,"title":{},"body":{"injectables/AppConfig.html":{}}}],["last",{"_index":653,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"components/LoginComponent.html":{}}}],["lastname",{"_index":1695,"title":{},"body":{"classes/User.html":{}}}],["lastresolution",{"_index":566,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["lastunit",{"_index":725,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["layoutmodule",{"_index":336,"title":{},"body":{"modules/AppModule.html":{}}}],["leading",{"_index":204,"title":{},"body":{"injectables/AppConfig.html":{}}}],["left",{"_index":817,"title":{},"body":{"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ControlSliderComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{}}}],["legend",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{},"overview.html":{}}}],["less",{"_index":1335,"title":{},"body":{"components/LoginComponent.html":{}}}],["lets",{"_index":1029,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["level",{"_index":154,"title":{},"body":{"injectables/AppConfig.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["lg",{"_index":933,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["line",{"_index":712,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"components/MyNavComponent.html":{}}}],["linear",{"_index":793,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["link",{"_index":1211,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["list",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"interfaces/NavItem.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{},"coverage.html":{}}}],["listener",{"_index":1659,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["listeners",{"_index":990,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["listens",{"_index":1142,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["literal",{"_index":1183,"title":{},"body":{"interfaces/IAppConfig.html":{},"classes/User.html":{}}}],["live",{"_index":1740,"title":{},"body":{"components/VideostreamComponent.html":{}}}],["load",{"_index":91,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{}}}],["loaded",{"_index":152,"title":{},"body":{"injectables/AppConfig.html":{}}}],["loading",{"_index":1243,"title":{},"body":{"components/LoginComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["loads",{"_index":146,"title":{},"body":{"injectables/AppConfig.html":{},"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["local",{"_index":174,"title":{},"body":{"injectables/AppConfig.html":{},"injectables/AuthenticationService.html":{}}}],["localhost",{"_index":196,"title":{},"body":{"injectables/AppConfig.html":{}}}],["localstorage.removeitem('currentuser",{"_index":518,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.setitem('currentuser",{"_index":515,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["location.reload(true",{"_index":1158,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["log",{"_index":480,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["logged",{"_index":425,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"classes/User.html":{}}}],["loggedin",{"_index":1596,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["login",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{}}}],["login(username",{"_index":477,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login.component.html",{"_index":1241,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":415,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":62,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":1244,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginrequired",{"_index":1633,"title":{},"body":{"components/MyNavComponent.html":{},"interfaces/NavItem.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["loginrequired:boolean",{"_index":1681,"title":{},"body":{"interfaces/NavItem.html":{}}}],["logout",{"_index":465,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["logs",{"_index":475,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["longer",{"_index":1145,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/MDashboardComponent.html":{}}}],["look",{"_index":187,"title":{},"body":{"injectables/AppConfig.html":{}}}],["lowest",{"_index":1724,"title":{},"body":{"interfaces/VarSupply.html":{}}}],["m",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["ma",{"_index":678,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["main",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["make",{"_index":176,"title":{},"body":{"injectables/AppConfig.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["makes",{"_index":1361,"title":{},"body":{"components/MDashboardComponent.html":{}}}],["many",{"_index":661,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"injectables/MeasurementUpdateService.html":{}}}],["map",{"_index":495,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["map(result",{"_index":1621,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["mapping",{"_index":651,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{},"injectables/MeasurementUpdateService.html":{}}}],["maps",{"_index":1391,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["margin",{"_index":816,"title":{},"body":{"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ControlSliderComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{}}}],["mat",{"_index":1577,"title":{},"body":{"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{}}}],["mat_dialog_data",{"_index":1004,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["matbuttonmodule",{"_index":339,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":344,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":1200,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["matching",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/ChartObject.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"interceptors/ErrorInterceptor.html":{},"components/GeneralSettingsComponent.html":{},"interfaces/IAppConfig.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"interfaces/NavItem.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"classes/User.html":{},"interfaces/VarSupply.html":{},"components/VideostreamComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":1003,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["matdialogmodule",{"_index":346,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogref",{"_index":982,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["material",{"_index":1823,"title":{},"body":{"dependencies.html":{}}}],["matexpansionmodule",{"_index":347,"title":{},"body":{"modules/AppModule.html":{}}}],["matgridlistmodule",{"_index":343,"title":{},"body":{"modules/AppModule.html":{}}}],["math.pow(10",{"_index":657,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["math.round",{"_index":1099,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["math.round(this.datasethandlerfunctions[datasetid](data",{"_index":723,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["maticonmodule",{"_index":341,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodule",{"_index":342,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodule",{"_index":345,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodule",{"_index":340,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":338,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":533,"title":{},"body":{"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/ChartObject.html":{},"interfaces/DataEntry.html":{},"interfaces/IAppConfig.html":{},"components/LoginComponent.html":{},"interfaces/MeasurementDevice.html":{},"interfaces/VarSupply.html":{}}}],["maxfix",{"_index":1711,"title":{},"body":{"interfaces/VarSupply.html":{}}}],["maxfix?:number",{"_index":1734,"title":{},"body":{"interfaces/VarSupply.html":{}}}],["maxvalue",{"_index":1712,"title":{},"body":{"interfaces/VarSupply.html":{}}}],["maxvalue:number",{"_index":1730,"title":{},"body":{"interfaces/VarSupply.html":{}}}],["maxvaluecheckbox",{"_index":1120,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["maxvaluecheckboxtext",{"_index":1122,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["maxvaluechecked",{"_index":1713,"title":{},"body":{"interfaces/VarSupply.html":{}}}],["maxvaluechecked?:boolean",{"_index":1733,"title":{},"body":{"interfaces/VarSupply.html":{}}}],["maxvalues",{"_index":535,"title":{},"body":{"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartObject.html":{},"interfaces/DataEntry.html":{}}}],["md",{"_index":935,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["mdashboardcomponent",{"_index":63,"title":{"components/MDashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["measdevices",{"_index":428,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["measurement",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartJsDataset.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"interfaces/IAppConfig.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["measurementconfigurationcomponent",{"_index":66,"title":{"components/MeasurementConfigurationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["measurementdevice",{"_index":917,"title":{"interfaces/MeasurementDevice.html":{}},"body":{"components/ChartFormComponent.html":{},"interfaces/IAppConfig.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{},"coverage.html":{}}}],["measurementdevices",{"_index":1371,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["measurements",{"_index":616,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["measurementupdate",{"_index":1463,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["measurementupdateservice",{"_index":582,"title":{"injectables/MeasurementUpdateService.html":{}},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"components/MDashboardComponent.html":{},"injectables/MeasurementUpdateService.html":{},"coverage.html":{}}}],["measurementvalues",{"_index":1427,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["measurment",{"_index":854,"title":{},"body":{"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["media",{"_index":811,"title":{},"body":{"components/ChartComponent.html":{}}}],["menu",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["menulistitemcomponent",{"_index":69,"title":{"components/MenuListItemComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["message",{"_index":691,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["methods",{"_index":101,"title":{},"body":{"injectables/AppConfig.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/GeneralSettingsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{}}}],["min",{"_index":1726,"title":{},"body":{"interfaces/VarSupply.html":{}}}],["minvalue",{"_index":1714,"title":{},"body":{"interfaces/VarSupply.html":{}}}],["minvalue:number",{"_index":1729,"title":{},"body":{"interfaces/VarSupply.html":{}}}],["miscellaneous",{"_index":1843,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["modal",{"_index":1239,"title":{},"body":{"components/LoginComponent.html":{}}}],["mode",{"_index":297,"title":{},"body":{"injectables/AppConfig.html":{},"interfaces/VarSupply.html":{}}}],["module",{"_index":303,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":305,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1334,"title":{},"body":{"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"index.html":{}}}],["ms",{"_index":1219,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["multi",{"_index":403,"title":{},"body":{"modules/AppModule.html":{}}}],["multiplier",{"_index":685,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["mv",{"_index":677,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["mynavcomponent",{"_index":73,"title":{"components/MyNavComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/ChartObject.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"interceptors/ErrorInterceptor.html":{},"components/GeneralSettingsComponent.html":{},"interfaces/IAppConfig.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"interfaces/VarSupply.html":{},"components/VideostreamComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["name:string",{"_index":536,"title":{},"body":{"interfaces/ChartAxis.html":{},"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/ChartObject.html":{},"interfaces/VarSupply.html":{}}}],["nav",{"_index":1541,"title":{},"body":{"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["nav'},{'name",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["nav.component",{"_index":335,"title":{},"body":{"modules/AppModule.html":{}}}],["nav.component.css",{"_index":1590,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["nav.component.html",{"_index":1591,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["nav.component.ts",{"_index":1582,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"coverage.html":{}}}],["nav.component.ts:109",{"_index":1629,"title":{},"body":{"components/MyNavComponent.html":{}}}],["nav.component.ts:114",{"_index":1625,"title":{},"body":{"components/MyNavComponent.html":{}}}],["nav.component.ts:118",{"_index":1617,"title":{},"body":{"components/MyNavComponent.html":{}}}],["nav.component.ts:122",{"_index":1612,"title":{},"body":{"components/MyNavComponent.html":{}}}],["nav.component.ts:126",{"_index":1618,"title":{},"body":{"components/MyNavComponent.html":{}}}],["nav.component.ts:132",{"_index":1623,"title":{},"body":{"components/MyNavComponent.html":{}}}],["nav.component.ts:140",{"_index":1602,"title":{},"body":{"components/MyNavComponent.html":{}}}],["nav.component.ts:142",{"_index":1601,"title":{},"body":{"components/MyNavComponent.html":{}}}],["nav.component.ts:149",{"_index":1608,"title":{},"body":{"components/MyNavComponent.html":{}}}],["nav.component.ts:159",{"_index":1603,"title":{},"body":{"components/MyNavComponent.html":{}}}],["nav.component.ts:212",{"_index":1682,"title":{},"body":{"components/PowerOffDialog.html":{}}}],["nav.component.ts:215",{"_index":1686,"title":{},"body":{"components/PowerOffDialog.html":{}}}],["nav.component.ts:216",{"_index":1685,"title":{},"body":{"components/PowerOffDialog.html":{}}}],["nav.component.ts:220",{"_index":1683,"title":{},"body":{"components/PowerOffDialog.html":{}}}],["nav.component.ts:226",{"_index":1684,"title":{},"body":{"components/PowerOffDialog.html":{}}}],["nav.component.ts:32",{"_index":1639,"title":{},"body":{"components/MyNavComponent.html":{}}}],["nav.component.ts:85",{"_index":1641,"title":{},"body":{"components/MyNavComponent.html":{}}}],["navigate",{"_index":438,"title":{},"body":{"guards/AuthGuard.html":{},"index.html":{}}}],["navigates",{"_index":1254,"title":{},"body":{"components/LoginComponent.html":{}}}],["navigation",{"_index":1583,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["navigation/menu",{"_index":375,"title":{},"body":{"modules/AppModule.html":{}}}],["navigation/my",{"_index":334,"title":{},"body":{"modules/AppModule.html":{}}}],["navitem",{"_index":1527,"title":{"interfaces/NavItem.html":{}},"body":{"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"interfaces/NavItem.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"coverage.html":{}}}],["navitems",{"_index":1597,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["need",{"_index":193,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"interceptors/JwtInterceptor.html":{}}}],["needed",{"_index":593,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{}}}],["needs",{"_index":386,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interceptors/ErrorInterceptor.html":{},"components/SupplyVoltagesComponent.html":{},"miscellaneous/functions.html":{}}}],["neg",{"_index":945,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["negative",{"_index":849,"title":{},"body":{"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{}}}],["negrange",{"_index":841,"title":{},"body":{"interfaces/ChartDataset.html":{}}}],["negrange?:boolean",{"_index":861,"title":{},"body":{"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{}}}],["new",{"_index":282,"title":{},"body":{"injectables/AppConfig.html":{},"injectables/AuthenticationService.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"components/MDashboardComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"coverage.html":{},"index.html":{}}}],["newvalue",{"_index":1011,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/MeasurementConfigurationComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["next",{"_index":278,"title":{},"body":{"injectables/AppConfig.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["next.handle(request",{"_index":1237,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["next.handle(request).pipe(catcherror(err",{"_index":1155,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":1827,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":574,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["ngjsoneditormodule",{"_index":379,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":329,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":575,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"components/MDashboardComponent.html":{}}}],["ngoninit",{"_index":576,"title":{},"body":{"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["ngx",{"_index":209,"title":{},"body":{"injectables/AppConfig.html":{},"modules/AppModule.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"dependencies.html":{}}}],["ngxbootstrapslidermodule",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["nobody",{"_index":1456,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["none",{"_index":821,"title":{},"body":{"components/ChartComponent.html":{},"components/ControlSliderComponent.html":{}}}],["nopad",{"_index":960,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["normal",{"_index":1615,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["normalli",{"_index":1212,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["normaly",{"_index":1192,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["nothing",{"_index":761,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["notification",{"_index":169,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["notifies",{"_index":1452,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["notify",{"_index":591,"title":{},"body":{"components/ChartComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"injectables/MeasurementUpdateService.html":{},"components/SupplyVoltagesComponent.html":{}}}],["notifysubscribe",{"_index":1436,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["notifyunsubscribe",{"_index":1437,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["nowrap",{"_index":1341,"title":{},"body":{"components/LoginComponent.html":{}}}],["number",{"_index":131,"title":{},"body":{"injectables/AppConfig.html":{},"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/ChartObject.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"interfaces/IAppConfig.html":{},"components/LoginComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"classes/User.html":{},"interfaces/VarSupply.html":{},"miscellaneous/functions.html":{}}}],["numbers",{"_index":663,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["obejct",{"_index":1038,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["obj",{"_index":160,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["obj.key",{"_index":227,"title":{},"body":{"injectables/AppConfig.html":{}}}],["obj:record",{"_index":800,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["obj[dataset.name",{"_index":801,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["object",{"_index":120,"title":{},"body":{"injectables/AppConfig.html":{},"injectables/AuthenticationService.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartJsDataset.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{},"components/SupplyVoltagesComponent.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":545,"title":{},"body":{"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"interfaces/ChartObject.html":{},"interfaces/DataEntry.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["observable",{"_index":490,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["observables",{"_index":589,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["observer",{"_index":1453,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["observers",{"_index":1460,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["obtained",{"_index":614,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["occured",{"_index":1503,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["old",{"_index":238,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"components/SupplyVoltagesComponent.html":{}}}],["oldname",{"_index":1383,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{}}}],["oldname?:string",{"_index":1204,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["oldvalue",{"_index":1010,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/MeasurementConfigurationComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["once",{"_index":608,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{}}}],["onclickme",{"_index":1246,"title":{},"body":{"components/LoginComponent.html":{}}}],["onclickme(number",{"_index":1257,"title":{},"body":{"components/LoginComponent.html":{}}}],["onclickme(number:string",{"_index":1282,"title":{},"body":{"components/LoginComponent.html":{}}}],["ondestroy",{"_index":557,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"components/MDashboardComponent.html":{}}}],["one",{"_index":288,"title":{},"body":{"injectables/AppConfig.html":{},"components/MeasurementConfigurationComponent.html":{},"injectables/MeasurementUpdateService.html":{}}}],["oninit",{"_index":555,"title":{},"body":{"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["oninit,input",{"_index":1095,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["onitemselected",{"_index":1518,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["onitemselected(item",{"_index":1532,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["onnoclick",{"_index":980,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["onsubmit",{"_index":1056,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/LoginComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["onyesclick",{"_index":981,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["opacity",{"_index":1322,"title":{},"body":{"components/LoginComponent.html":{}}}],["opendialog",{"_index":1037,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/MeasurementConfigurationComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["opens",{"_index":1035,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/MeasurementConfigurationComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["operation",{"_index":170,"title":{},"body":{"injectables/AppConfig.html":{}}}],["option",{"_index":742,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/DataEntry.html":{}}}],["optional",{"_index":115,"title":{},"body":{"injectables/AppConfig.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/ChartObject.html":{},"components/ConfirmDialog.html":{},"interceptors/ErrorInterceptor.html":{},"components/GeneralSettingsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"interfaces/NavItem.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"classes/User.html":{},"interfaces/VarSupply.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":541,"title":{},"body":{"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/ChartObject.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["options?:any",{"_index":546,"title":{},"body":{"interfaces/ChartAxis.html":{},"interfaces/ChartObject.html":{}}}],["otherwise",{"_index":144,"title":{},"body":{"injectables/AppConfig.html":{},"injectables/AuthenticationService.html":{}}}],["out",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"interceptors/ErrorInterceptor.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":1119,"title":{},"body":{"components/ControlSliderComponent.html":{},"interfaces/VarSupply.html":{}}}],["overflow",{"_index":1316,"title":{},"body":{"components/LoginComponent.html":{}}}],["overview",{"_index":1880,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":544,"title":{},"body":{"interfaces/ChartAxis.html":{},"interfaces/ChartObject.html":{}}}],["package",{"_index":1794,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":957,"title":{},"body":{"components/ChartFormComponent.html":{},"components/ControlSliderComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MyNavComponent.html":{}}}],["padding:0px",{"_index":1368,"title":{},"body":{"components/MDashboardComponent.html":{}}}],["page",{"_index":455,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{}}}],["param",{"_index":220,"title":{},"body":{"injectables/AppConfig.html":{},"injectables/AuthenticationService.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"injectables/MeasurementUpdateService.html":{},"components/SupplyVoltagesComponent.html":{}}}],["parameters",{"_index":114,"title":{},"body":{"injectables/AppConfig.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interceptors/ErrorInterceptor.html":{},"components/GeneralSettingsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1279,"title":{},"body":{"components/LoginComponent.html":{}}}],["param{confirmationdialogdata",{"_index":1020,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["param{measurementupdateservice",{"_index":1364,"title":{},"body":{"components/MDashboardComponent.html":{}}}],["param{string",{"_index":506,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["parseint(data.battery.value",{"_index":1653,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["part",{"_index":1017,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{},"components/SupplyVoltagesComponent.html":{}}}],["particular",{"_index":706,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["passed",{"_index":646,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["password",{"_index":478,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"classes/User.html":{}}}],["path",{"_index":181,"title":{},"body":{"injectables/AppConfig.html":{},"modules/AppRoutingModule.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["pathscomponents",{"_index":417,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pause",{"_index":553,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["paused",{"_index":567,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["pcb",{"_index":1188,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["percentage",{"_index":1588,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["permission",{"_index":437,"title":{},"body":{"guards/AuthGuard.html":{}}}],["picture",{"_index":1736,"title":{},"body":{"components/VideostreamComponent.html":{}}}],["pin",{"_index":1264,"title":{},"body":{"components/LoginComponent.html":{}}}],["pipe",{"_index":1620,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["pipe(first",{"_index":1305,"title":{},"body":{"components/LoginComponent.html":{}}}],["pipe(map(user",{"_index":507,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["pipe(switchmap",{"_index":1500,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["pipe(timeout(3000",{"_index":270,"title":{},"body":{"injectables/AppConfig.html":{}}}],["pirvate",{"_index":923,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["place",{"_index":1312,"title":{},"body":{"components/LoginComponent.html":{}}}],["play][reload][export",{"_index":559,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["points",{"_index":618,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["polled",{"_index":1450,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["polling",{"_index":1356,"title":{},"body":{"components/MDashboardComponent.html":{},"injectables/MeasurementUpdateService.html":{}}}],["polls",{"_index":587,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"components/MDashboardComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["pollurl",{"_index":1429,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["popper.js",{"_index":1834,"title":{},"body":{"dependencies.html":{}}}],["port",{"_index":1207,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["position",{"_index":130,"title":{},"body":{"injectables/AppConfig.html":{},"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartObject.html":{},"interfaces/DataEntry.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MyNavComponent.html":{}}}],["position:number",{"_index":260,"title":{},"body":{"injectables/AppConfig.html":{}}}],["position:string",{"_index":548,"title":{},"body":{"interfaces/ChartAxis.html":{},"interfaces/ChartObject.html":{}}}],["positionclass",{"_index":395,"title":{},"body":{"modules/AppModule.html":{}}}],["possible",{"_index":673,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{}}}],["post",{"_index":1015,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["power",{"_index":649,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["power_off_dialog",{"_index":1663,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["power_off_dialog'},{'name",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["power_off_dialog.component.html",{"_index":1664,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["power_settings_new",{"_index":1105,"title":{},"body":{"components/ControlSliderComponent.html":{},"components/MyNavComponent.html":{}}}],["poweroffdialog",{"_index":75,"title":{"components/PowerOffDialog.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["precision",{"_index":568,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["pressed",{"_index":1082,"title":{},"body":{"components/ControlSliderComponent.html":{},"components/LoginComponent.html":{},"components/MeasurementConfigurationComponent.html":{}}}],["pressing",{"_index":1628,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["preventduplicates",{"_index":399,"title":{},"body":{"modules/AppModule.html":{}}}],["primary",{"_index":1674,"title":{},"body":{"components/MyNavComponent.html":{}}}],["private",{"_index":94,"title":{},"body":{"injectables/AppConfig.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartJsDataset.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"components/LoginComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["prod",{"_index":1864,"title":{},"body":{"index.html":{}}}],["production",{"_index":1865,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["programatically",{"_index":1091,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["programmatically",{"_index":873,"title":{},"body":{"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{}}}],["project",{"_index":1850,"title":{},"body":{"index.html":{}}}],["promise",{"_index":149,"title":{},"body":{"injectables/AppConfig.html":{}}}],["promise((resolve",{"_index":283,"title":{},"body":{"injectables/AppConfig.html":{}}}],["properties",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"injectables/AuthenticationService.html":{},"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/ChartObject.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"interfaces/IAppConfig.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"interfaces/NavItem.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"classes/User.html":{},"interfaces/VarSupply.html":{},"components/VideostreamComponent.html":{}}}],["protcol",{"_index":1214,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["protocol:string",{"_index":1216,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["protractor",{"_index":1872,"title":{},"body":{"index.html":{}}}],["provide",{"_index":401,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":450,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/MeasurementUpdateService.html":{}}}],["providers",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["provides",{"_index":1428,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["public",{"_index":97,"title":{},"body":{"injectables/AppConfig.html":{},"injectables/AuthenticationService.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["publishes",{"_index":588,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["pull",{"_index":1471,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["pulp",{"_index":1668,"title":{},"body":{"components/MyNavComponent.html":{}}}],["push",{"_index":755,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["pushed",{"_index":762,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["queryparams",{"_index":457,"title":{},"body":{"guards/AuthGuard.html":{}}}],["radius",{"_index":970,"title":{},"body":{"components/ChartFormComponent.html":{},"components/ControlSliderComponent.html":{},"components/MyNavComponent.html":{}}}],["range",{"_index":845,"title":{},"body":{"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartJsDataset.html":{},"components/ControlSliderComponent.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["ranges",{"_index":1221,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["reached",{"_index":766,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["reactiveformsmodule",{"_index":354,"title":{},"body":{"modules/AppModule.html":{}}}],["readable",{"_index":1393,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["readme",{"_index":1875,"title":{},"body":{"index.html":{}}}],["real",{"_index":643,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["really",{"_index":1609,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["recalculate",{"_index":736,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["record",{"_index":612,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"injectables/MeasurementUpdateService.html":{}}}],["red",{"_index":1113,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["redirect",{"_index":454,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["reference",{"_index":986,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/MDashboardComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["refreshed",{"_index":1218,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["refreshes",{"_index":514,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["register",{"_index":770,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["regulary",{"_index":1426,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["reject",{"_index":284,"title":{},"body":{"injectables/AppConfig.html":{}}}],["reject(`could",{"_index":301,"title":{},"body":{"injectables/AppConfig.html":{}}}],["relative",{"_index":820,"title":{},"body":{"components/ChartComponent.html":{},"components/ChartFormComponent.html":{}}}],["reload",{"_index":552,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"index.html":{}}}],["remove",{"_index":165,"title":{},"body":{"injectables/AppConfig.html":{},"injectables/AuthenticationService.html":{},"components/ChartFormComponent.html":{},"components/LoginComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["removed",{"_index":162,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartFormComponent.html":{}}}],["removelastnumber",{"_index":1247,"title":{},"body":{"components/LoginComponent.html":{}}}],["removeprivatevalues",{"_index":104,"title":{},"body":{"injectables/AppConfig.html":{}}}],["removeprivatevalues(obj",{"_index":153,"title":{},"body":{"injectables/AppConfig.html":{}}}],["removes",{"_index":117,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"components/LoginComponent.html":{},"injectables/MeasurementUpdateService.html":{}}}],["request",{"_index":996,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["request.clone",{"_index":1233,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["requests",{"_index":985,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["require",{"_index":423,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["required",{"_index":1344,"title":{},"body":{"components/LoginComponent.html":{}}}],["rescale",{"_index":655,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["reset",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"overview.html":{}}}],["resolution",{"_index":654,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"interfaces/IAppConfig.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{}}}],["resolve",{"_index":132,"title":{},"body":{"injectables/AppConfig.html":{}}}],["resolved",{"_index":150,"title":{},"body":{"injectables/AppConfig.html":{}}}],["response",{"_index":257,"title":{},"body":{"injectables/AppConfig.html":{},"injectables/AuthenticationService.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"interceptors/ErrorInterceptor.html":{},"components/GeneralSettingsComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["responseobject",{"_index":670,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["responsetype",{"_index":247,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["rest",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["result",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/ChartObject.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"interceptors/ErrorInterceptor.html":{},"components/GeneralSettingsComponent.html":{},"interfaces/IAppConfig.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"interfaces/NavItem.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"classes/User.html":{},"interfaces/VarSupply.html":{},"components/VideostreamComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.matches",{"_index":1622,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["results",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/ChartObject.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"interceptors/ErrorInterceptor.html":{},"components/GeneralSettingsComponent.html":{},"interfaces/IAppConfig.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"interfaces/NavItem.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"classes/User.html":{},"interfaces/VarSupply.html":{},"components/VideostreamComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["resumes",{"_index":639,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["retreaving",{"_index":1505,"title":{},"body":{"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["return",{"_index":202,"title":{},"body":{"injectables/AppConfig.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ChartComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["returned",{"_index":253,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interceptors/ErrorInterceptor.html":{},"components/GeneralSettingsComponent.html":{},"components/SupplyVoltagesComponent.html":{},"classes/User.html":{}}}],["returns",{"_index":126,"title":{},"body":{"injectables/AppConfig.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/GeneralSettingsComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"miscellaneous/functions.html":{}}}],["returnurl",{"_index":458,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["rgb(0",{"_index":1318,"title":{},"body":{"components/LoginComponent.html":{}}}],["rgba(0",{"_index":968,"title":{},"body":{"components/ChartFormComponent.html":{},"components/LoginComponent.html":{}}}],["right",{"_index":398,"title":{},"body":{"modules/AppModule.html":{},"components/ChartFormComponent.html":{},"components/ControlSliderComponent.html":{},"components/MDashboardComponent.html":{},"components/MyNavComponent.html":{}}}],["root",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/MeasurementUpdateService.html":{}}}],["root'},{'name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["rotate(0deg",{"_index":1546,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["rotate(180deg",{"_index":1548,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["route",{"_index":440,"title":{"interfaces/ROUTE.html":{}},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/MyNavComponent.html":{},"interfaces/NavItem.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"coverage.html":{}}}],["router",{"_index":442,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/MenuListItemComponent.html":{}}}],["routermodule",{"_index":411,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":432,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":447,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":410,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"interceptors/JwtInterceptor.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":409,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rpi",{"_index":189,"title":{},"body":{"injectables/AppConfig.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["run",{"_index":190,"title":{},"body":{"injectables/AppConfig.html":{},"index.html":{}}}],["running",{"_index":1184,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{},"injectables/MeasurementUpdateService.html":{},"index.html":{}}}],["rxjs",{"_index":214,"title":{},"body":{"injectables/AppConfig.html":{},"injectables/AuthenticationService.html":{},"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":212,"title":{},"body":{"injectables/AppConfig.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["same",{"_index":191,"title":{},"body":{"injectables/AppConfig.html":{}}}],["scaffolding",{"_index":1857,"title":{},"body":{"index.html":{}}}],["scale",{"_index":675,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"interfaces/VarSupply.html":{}}}],["scaletosiunit",{"_index":1777,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["scaletosiunit(data",{"_index":1847,"title":{},"body":{"miscellaneous/functions.html":{}}}],["scaletosiunit(data:dataentry):number",{"_index":682,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["scaletosiunit(data['cm3",{"_index":779,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["scaletosiunit(data['vm1",{"_index":778,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["screen",{"_index":602,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["script",{"_index":192,"title":{},"body":{"injectables/AppConfig.html":{}}}],["scroll",{"_index":1317,"title":{},"body":{"components/LoginComponent.html":{}}}],["see",{"_index":542,"title":{},"body":{"interfaces/ChartAxis.html":{},"interfaces/ChartObject.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["selecetable",{"_index":1094,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["select",{"_index":1071,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["selected",{"_index":895,"title":{},"body":{"components/ChartFormComponent.html":{},"components/ControlSliderComponent.html":{}}}],["selecteddevicenumb",{"_index":884,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["selectedobject",{"_index":885,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["selection",{"_index":909,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["send",{"_index":674,"title":{},"body":{"components/ChartComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"components/SupplyVoltagesComponent.html":{}}}],["sendmeasurmentupdate",{"_index":1438,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["sendmeasurmentupdate(chartid",{"_index":1457,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["sendmeasurmentupdate(chartid:string",{"_index":1491,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["sends",{"_index":623,"title":{},"body":{"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["serve",{"_index":1853,"title":{},"body":{"index.html":{}}}],["server",{"_index":167,"title":{},"body":{"injectables/AppConfig.html":{},"index.html":{}}}],["serves",{"_index":1362,"title":{},"body":{"components/MDashboardComponent.html":{}}}],["service",{"_index":586,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"components/MDashboardComponent.html":{},"injectables/MeasurementUpdateService.html":{}}}],["set",{"_index":218,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"interfaces/IAppConfig.html":{},"components/LoginComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{},"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"interfaces/VarSupply.html":{}}}],["setheaders",{"_index":1234,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["sets",{"_index":628,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["setting",{"_index":609,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["settings",{"_index":100,"title":{},"body":{"injectables/AppConfig.html":{},"modules/AppRoutingModule.html":{},"interfaces/ChartAxis.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartObject.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["settings'},{'name",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["settings.component",{"_index":383,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["settings.component.css",{"_index":1166,"title":{},"body":{"components/GeneralSettingsComponent.html":{}}}],["settings.component.html",{"_index":1167,"title":{},"body":{"components/GeneralSettingsComponent.html":{}}}],["settings.component.ts",{"_index":1163,"title":{},"body":{"components/GeneralSettingsComponent.html":{},"coverage.html":{}}}],["settings.component.ts:16",{"_index":1174,"title":{},"body":{"components/GeneralSettingsComponent.html":{}}}],["settings.component.ts:18",{"_index":1169,"title":{},"body":{"components/GeneralSettingsComponent.html":{}}}],["settings.component.ts:19",{"_index":1175,"title":{},"body":{"components/GeneralSettingsComponent.html":{}}}],["settings.component.ts:21",{"_index":1170,"title":{},"body":{"components/GeneralSettingsComponent.html":{}}}],["settings.component.ts:27",{"_index":1171,"title":{},"body":{"components/GeneralSettingsComponent.html":{}}}],["settings/general",{"_index":382,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GeneralSettingsComponent.html":{},"coverage.html":{}}}],["settings_input_antenna",{"_index":1638,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["setts",{"_index":1381,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["setupaxesconfig",{"_index":577,"title":{},"body":{"components/ChartComponent.html":{}}}],["setupaxesconfig(axes",{"_index":634,"title":{},"body":{"components/ChartComponent.html":{}}}],["setupaxesconfig(axes:array",{"_index":787,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["setupsubscription",{"_index":578,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["shift",{"_index":765,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["show",{"_index":664,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"components/LoginComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["show/hide",{"_index":1630,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["show_chart",{"_index":1636,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["showing",{"_index":1586,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["shown",{"_index":911,"title":{},"body":{"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["shows",{"_index":168,"title":{},"body":{"injectables/AppConfig.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/GeneralSettingsComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["shut",{"_index":1610,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["shutdown",{"_index":1665,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["shutdowndialog",{"_index":1598,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["side",{"_index":1070,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["sidebar",{"_index":1584,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["sidenav",{"_index":1670,"title":{},"body":{"components/MyNavComponent.html":{}}}],["simple",{"_index":1352,"title":{},"body":{"components/MDashboardComponent.html":{},"components/VideostreamComponent.html":{}}}],["sit",{"_index":1314,"title":{},"body":{"components/LoginComponent.html":{}}}],["size",{"_index":1116,"title":{},"body":{"components/ControlSliderComponent.html":{},"components/LoginComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["slider",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"components/ControlSliderComponent.html":{},"interfaces/VarSupply.html":{},"dependencies.html":{}}}],["slider'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["slider.component",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["slider.component.css",{"_index":1072,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["slider.component.html",{"_index":1073,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["slider.component.ts",{"_index":1068,"title":{},"body":{"components/ControlSliderComponent.html":{},"coverage.html":{}}}],["slider.component.ts:18",{"_index":1089,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["slider.component.ts:24",{"_index":1079,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["slider.component.ts:30",{"_index":1093,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["slider.component.ts:36",{"_index":1086,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["slider.component.ts:43",{"_index":1080,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["slider.component.ts:50",{"_index":1084,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["slider.component.ts:55",{"_index":1083,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["slider/control",{"_index":369,"title":{},"body":{"modules/AppModule.html":{},"components/ControlSliderComponent.html":{},"coverage.html":{}}}],["slim",{"_index":962,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["sm",{"_index":937,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["small",{"_index":601,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["socket",{"_index":1830,"title":{},"body":{"dependencies.html":{}}}],["socket.io",{"_index":1837,"title":{},"body":{"dependencies.html":{}}}],["solid",{"_index":1112,"title":{},"body":{"components/ControlSliderComponent.html":{},"components/LoginComponent.html":{}}}],["somebody",{"_index":474,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["soon",{"_index":151,"title":{},"body":{"injectables/AppConfig.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/ChartObject.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"interceptors/ErrorInterceptor.html":{},"components/GeneralSettingsComponent.html":{},"interfaces/IAppConfig.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"interfaces/NavItem.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"classes/User.html":{},"interfaces/VarSupply.html":{},"components/VideostreamComponent.html":{},"index.html":{}}}],["sourcedevice",{"_index":852,"title":{},"body":{"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{}}}],["sourceid",{"_index":842,"title":{},"body":{"interfaces/ChartDataset.html":{}}}],["sourceid:string",{"_index":855,"title":{},"body":{"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{}}}],["space",{"_index":1340,"title":{},"body":{"components/LoginComponent.html":{}}}],["spacer",{"_index":953,"title":{},"body":{"components/ChartFormComponent.html":{},"components/MyNavComponent.html":{}}}],["specified",{"_index":1466,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["src/.../app.module.ts",{"_index":1845,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../chart.component.ts",{"_index":1846,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":1883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/_guards/auth.guard.ts",{"_index":435,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/_guards/auth.guard.ts:10",{"_index":443,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/_guards/auth.guard.ts:16",{"_index":448,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/_helpers/error.interceptor.ts",{"_index":1141,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/_helpers/error.interceptor.ts:11",{"_index":1148,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/_helpers/error.interceptor.ts:14",{"_index":1152,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/_helpers/jwt.interceptor.ts",{"_index":1225,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"coverage.html":{}}}],["src/app/_helpers/jwt.interceptor.ts:12",{"_index":1227,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/_helpers/jwt.interceptor.ts:18",{"_index":1228,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/_models/app",{"_index":1179,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{},"coverage.html":{}}}],["src/app/_models/chartdataset.model.ts",{"_index":836,"title":{},"body":{"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{},"coverage.html":{}}}],["src/app/_models/chartobject.model.ts",{"_index":523,"title":{},"body":{"interfaces/ChartAxis.html":{},"interfaces/ChartObject.html":{},"coverage.html":{}}}],["src/app/_models/user.ts",{"_index":1693,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/_models/user.ts:12",{"_index":1702,"title":{},"body":{"classes/User.html":{}}}],["src/app/_models/user.ts:16",{"_index":1699,"title":{},"body":{"classes/User.html":{}}}],["src/app/_models/user.ts:20",{"_index":1696,"title":{},"body":{"classes/User.html":{}}}],["src/app/_models/user.ts:24",{"_index":1698,"title":{},"body":{"classes/User.html":{}}}],["src/app/_models/user.ts:28",{"_index":1700,"title":{},"body":{"classes/User.html":{}}}],["src/app/_models/user.ts:8",{"_index":1697,"title":{},"body":{"classes/User.html":{}}}],["src/app/_models/varsupply.model.ts",{"_index":1706,"title":{},"body":{"interfaces/VarSupply.html":{},"coverage.html":{}}}],["src/app/_services/app.config.ts",{"_index":90,"title":{},"body":{"injectables/AppConfig.html":{},"coverage.html":{}}}],["src/app/_services/app.config.ts:110",{"_index":134,"title":{},"body":{"injectables/AppConfig.html":{}}}],["src/app/_services/app.config.ts:144",{"_index":145,"title":{},"body":{"injectables/AppConfig.html":{}}}],["src/app/_services/app.config.ts:18",{"_index":199,"title":{},"body":{"injectables/AppConfig.html":{}}}],["src/app/_services/app.config.ts:24",{"_index":180,"title":{},"body":{"injectables/AppConfig.html":{}}}],["src/app/_services/app.config.ts:30",{"_index":113,"title":{},"body":{"injectables/AppConfig.html":{}}}],["src/app/_services/app.config.ts:38",{"_index":197,"title":{},"body":{"injectables/AppConfig.html":{}}}],["src/app/_services/app.config.ts:43",{"_index":201,"title":{},"body":{"injectables/AppConfig.html":{}}}],["src/app/_services/app.config.ts:53",{"_index":155,"title":{},"body":{"injectables/AppConfig.html":{}}}],["src/app/_services/app.config.ts:74",{"_index":116,"title":{},"body":{"injectables/AppConfig.html":{}}}],["src/app/_services/app.config.ts:91",{"_index":166,"title":{},"body":{"injectables/AppConfig.html":{}}}],["src/app/_services/authentication.service.ts",{"_index":461,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/app/_services/authentication.service.ts:13",{"_index":491,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/_services/authentication.service.ts:14",{"_index":467,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/_services/authentication.service.ts:24",{"_index":468,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/_services/authentication.service.ts:31",{"_index":493,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/_services/authentication.service.ts:38",{"_index":476,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/_services/authentication.service.ts:51",{"_index":479,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/_services/authentication.service.ts:67",{"_index":489,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/_services/measurementupdateservice.ts",{"_index":1425,"title":{},"body":{"injectables/MeasurementUpdateService.html":{},"coverage.html":{}}}],["src/app/_services/measurementupdateservice.ts:108",{"_index":1448,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["src/app/_services/measurementupdateservice.ts:117",{"_index":1444,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["src/app/_services/measurementupdateservice.ts:125",{"_index":1446,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["src/app/_services/measurementupdateservice.ts:18",{"_index":1472,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["src/app/_services/measurementupdateservice.ts:22",{"_index":1470,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["src/app/_services/measurementupdateservice.ts:26",{"_index":1473,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["src/app/_services/measurementupdateservice.ts:30",{"_index":1479,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["src/app/_services/measurementupdateservice.ts:34",{"_index":1439,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["src/app/_services/measurementupdateservice.ts:41",{"_index":1441,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["src/app/_services/measurementupdateservice.ts:51",{"_index":1454,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["src/app/_services/measurementupdateservice.ts:59",{"_index":1451,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["src/app/_services/measurementupdateservice.ts:68",{"_index":1459,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["src/app/_services/measurementupdateservice.ts:76",{"_index":1467,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["src/app/_services/measurementupdateservice.ts:84",{"_index":1461,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["src/app/app",{"_index":408,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":323,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/chart",{"_index":875,"title":{},"body":{"components/ChartFormComponent.html":{},"coverage.html":{}}}],["src/app/editor/editor.component.ts",{"_index":1769,"title":{},"body":{"coverage.html":{}}}],["src/app/general",{"_index":1162,"title":{},"body":{"components/GeneralSettingsComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts",{"_index":1238,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:13",{"_index":1269,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:14",{"_index":1267,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:15",{"_index":1271,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:19",{"_index":1270,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:23",{"_index":1265,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:24",{"_index":1252,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:38",{"_index":1253,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:45",{"_index":1262,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:53",{"_index":1258,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:58",{"_index":1256,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:74",{"_index":1273,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:79",{"_index":1260,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/m",{"_index":549,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"components/MDashboardComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/measurement",{"_index":1369,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{},"coverage.html":{}}}],["src/app/navigation/menu",{"_index":1512,"title":{},"body":{"components/MenuListItemComponent.html":{},"interfaces/NavItem.html":{},"coverage.html":{}}}],["src/app/navigation/my",{"_index":1581,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"coverage.html":{}}}],["src/app/supply",{"_index":975,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"components/SupplyVoltagesComponent.html":{},"coverage.html":{}}}],["src/app/videostream/videostream.component.ts",{"_index":1735,"title":{},"body":{"components/VideostreamComponent.html":{},"coverage.html":{}}}],["src/app/videostream/videostream.component.ts:12",{"_index":1742,"title":{},"body":{"components/VideostreamComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":1789,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1791,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":157,"title":{},"body":{"injectables/AppConfig.html":{},"injectables/MeasurementUpdateService.html":{}}}],["started",{"_index":1848,"title":{"index.html":{}},"body":{}}],["starting",{"_index":388,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["starts",{"_index":1462,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["state",{"_index":446,"title":{},"body":{"guards/AuthGuard.html":{},"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"components/MenuListItemComponent.html":{}}}],["state('collapsed",{"_index":1544,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["state('expanded",{"_index":1547,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["state.url",{"_index":459,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":1745,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":99,"title":{},"body":{"injectables/AppConfig.html":{}}}],["status",{"_index":1290,"title":{},"body":{"components/LoginComponent.html":{}}}],["stay",{"_index":1311,"title":{},"body":{"components/LoginComponent.html":{}}}],["step",{"_index":1135,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["stepsize",{"_index":1715,"title":{},"body":{"interfaces/VarSupply.html":{}}}],["sticky",{"_index":1675,"title":{},"body":{"components/MyNavComponent.html":{}}}],["stop",{"_index":1300,"title":{},"body":{"components/LoginComponent.html":{},"injectables/MeasurementUpdateService.html":{}}}],["stops",{"_index":1363,"title":{},"body":{"components/MDashboardComponent.html":{},"injectables/MeasurementUpdateService.html":{}}}],["storage",{"_index":511,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["store",{"_index":237,"title":{},"body":{"injectables/AppConfig.html":{},"injectables/AuthenticationService.html":{},"components/ChartFormComponent.html":{},"components/LoginComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"classes/User.html":{}}}],["storeconfig",{"_index":245,"title":{},"body":{"injectables/AppConfig.html":{}}}],["storecsv",{"_index":802,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["stored",{"_index":121,"title":{},"body":{"injectables/AppConfig.html":{},"injectables/AuthenticationService.html":{},"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartObject.html":{},"interfaces/DataEntry.html":{},"index.html":{}}}],["storeimage",{"_index":783,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["stores",{"_index":148,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"injectables/MeasurementUpdateService.html":{}}}],["storesettings",{"_index":105,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartFormComponent.html":{}}}],["storing",{"_index":924,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["string",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"injectables/AuthenticationService.html":{},"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/ChartObject.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"interfaces/IAppConfig.html":{},"components/LoginComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"interfaces/NavItem.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"classes/User.html":{},"interfaces/VarSupply.html":{},"components/VideostreamComponent.html":{}}}],["structure",{"_index":1008,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["stuff",{"_index":716,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["style",{"_index":1538,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["style({transform",{"_index":1545,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["styleurls",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["subfromslider",{"_index":1075,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["subject",{"_index":494,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/MeasurementUpdateService.html":{}}}],["subjects",{"_index":1430,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["subjects:record",{"_index":1482,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["submit",{"_index":994,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/GeneralSettingsComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["submitobj",{"_index":1411,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["submitobject",{"_index":1016,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/MeasurementConfigurationComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["submits",{"_index":1261,"title":{},"body":{"components/LoginComponent.html":{}}}],["submitted",{"_index":847,"title":{},"body":{"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{},"components/LoginComponent.html":{}}}],["subscribe",{"_index":249,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["subscribe((data",{"_index":1648,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["subscribe(data",{"_index":274,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["subscribed",{"_index":702,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"injectables/MeasurementUpdateService.html":{}}}],["subscriber",{"_index":1476,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["subscribercounter",{"_index":1431,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["subscription",{"_index":569,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"injectables/MeasurementUpdateService.html":{}}}],["subtract",{"_index":1085,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["succesfull",{"_index":1415,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["succesfully",{"_index":483,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["successful",{"_index":171,"title":{},"body":{"injectables/AppConfig.html":{},"injectables/AuthenticationService.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/GeneralSettingsComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["successfully",{"_index":256,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/GeneralSettingsComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["sup",{"_index":1057,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["sup.desiredvoltage",{"_index":1059,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["sup.maxfix",{"_index":1060,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["sup.maxvaluechecked",{"_index":1058,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["suported",{"_index":1187,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["suporting",{"_index":1215,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["supplies",{"_index":1031,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{},"components/SupplyVoltagesComponent.html":{}}}],["supply",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"interfaces/VarSupply.html":{},"components/VideostreamComponent.html":{}}}],["supply.currentvoltage",{"_index":1043,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["supply.desiredvoltage",{"_index":1044,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["supply.enabled",{"_index":1041,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["supply.maxfix}}v",{"_index":1109,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["supply.name",{"_index":1042,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["supply.unit",{"_index":1106,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["supplyvoltagescomponent",{"_index":77,"title":{"components/SupplyVoltagesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["support",{"_index":1876,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":1372,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{},"interfaces/VarSupply.html":{}}}],["sure",{"_index":177,"title":{},"body":{"injectables/AppConfig.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["svg",{"_index":1877,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":1481,"title":{},"body":{"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["table",{"_index":1793,"title":{},"body":{"coverage.html":{}}}],["table>tbody>tr>td",{"_index":1323,"title":{},"body":{"components/LoginComponent.html":{}}}],["table>tbody>tr>th",{"_index":1324,"title":{},"body":{"components/LoginComponent.html":{}}}],["table>tfoot>tr>td",{"_index":1325,"title":{},"body":{"components/LoginComponent.html":{}}}],["table>tfoot>tr>th",{"_index":1326,"title":{},"body":{"components/LoginComponent.html":{}}}],["table>thead>tr>td",{"_index":1327,"title":{},"body":{"components/LoginComponent.html":{}}}],["table>thead>tr>th",{"_index":1328,"title":{},"body":{"components/LoginComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1792,"title":{},"body":{"coverage.html":{}}}],["td",{"_index":1338,"title":{},"body":{"components/LoginComponent.html":{}}}],["temperature",{"_index":1589,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["terminated",{"_index":1357,"title":{},"body":{"components/MDashboardComponent.html":{}}}],["terminates",{"_index":143,"title":{},"body":{"injectables/AppConfig.html":{}}}],["test",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["testapp",{"_index":1849,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1866,"title":{},"body":{"index.html":{}}}],["text",{"_index":248,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["th",{"_index":1182,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["there's",{"_index":508,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._getsubjectobeservable(chartid).asobservable",{"_index":1511,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["this._getsubjectobeservable(chartid).next",{"_index":1509,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["this._getsubjectobeservable(chartid).next(voltagevalue",{"_index":1496,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["this.adddatasettochart(dataset",{"_index":696,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["this.adddatatochart(data",{"_index":701,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["this.ariaexpanded",{"_index":1564,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["this.authenticationservice.currentuservalue",{"_index":453,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/JwtInterceptor.html":{}}}],["this.authenticationservice.getcurrentuserobservable().subscribe(val",{"_index":1660,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["this.authenticationservice.isloggedin",{"_index":1567,"title":{},"body":{"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["this.authenticationservice.login(this.f.username.value",{"_index":1304,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authenticationservice.logout",{"_index":1157,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["this.batteryicon",{"_index":1654,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["this.batterylevel",{"_index":1651,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["this.breakpointobserver.observe(breakpoints.handset",{"_index":1619,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["this.cd.detectchanges",{"_index":717,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["this.chartline",{"_index":710,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["this.chartline.ctx.canvas.todataurl",{"_index":784,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["this.chartline.options.scales.yaxes[this.idtoyaxis[dataset.chartdataset.yaxisid",{"_index":751,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["this.chartline.update",{"_index":769,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["this.chartobject.axes",{"_index":790,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["this.chartobject.datasets",{"_index":695,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["this.chartobject.hasownproperty(\"options",{"_index":707,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["this.chartobject.maxvalues",{"_index":738,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["this.chartobject.options",{"_index":708,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["this.chartobjects",{"_index":918,"title":{},"body":{"components/ChartFormComponent.html":{},"components/MDashboardComponent.html":{}}}],["this.chartobjects.push(chart",{"_index":939,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["this.chartobjects[0",{"_index":920,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["this.chartobjects[this.selecteddevicenumb",{"_index":940,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["this.configobject",{"_index":1178,"title":{},"body":{"components/GeneralSettingsComponent.html":{}}}],["this.currentdevices.push(device",{"_index":1422,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["this.currentresolutionmap[device.currentresolution",{"_index":1408,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["this.currentresolutionmap[device.desiredresolution",{"_index":1409,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["this.currentuser",{"_index":501,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.currentusersubject",{"_index":499,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.currentusersubject.asobservable",{"_index":502,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.currentusersubject.next(null",{"_index":519,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.currentusersubject.next(user",{"_index":517,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.currentusersubject.value",{"_index":504,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.currentuservalue",{"_index":505,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.data",{"_index":713,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["this.data.callpath",{"_index":1022,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["this.data.datasets.push(dataset.chartdataset",{"_index":771,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["this.data.labels",{"_index":781,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["this.data.labels.length",{"_index":767,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["this.data.labels.push",{"_index":764,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["this.data.labels.shift",{"_index":768,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["this.data.submitobject",{"_index":1023,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["this.datasethandlerfunctions[dataset.datasetid",{"_index":775,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["this.depth",{"_index":1558,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["this.devices",{"_index":921,"title":{},"body":{"components/ChartFormComponent.html":{},"components/MeasurementConfigurationComponent.html":{}}}],["this.dialog.open(confirmdialog",{"_index":1046,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/MeasurementConfigurationComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["this.dialog.open(poweroffdialog",{"_index":1644,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["this.dialogref.close(false",{"_index":1021,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["this.dialogref.close(true",{"_index":1025,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["this.error",{"_index":1307,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.expanded",{"_index":1529,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["this.f.password.setvalue",{"_index":1308,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.f.password.setvalue(this.f.password.value",{"_index":1283,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.f.password.setvalue(value.substring(0,value.length",{"_index":1278,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.f.password.value",{"_index":1277,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.f.password.valuechanges.subscribe(e",{"_index":1287,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.fallbackconfpath",{"_index":298,"title":{},"body":{"injectables/AppConfig.html":{}}}],["this.findworkinghost(hostlist",{"_index":279,"title":{},"body":{"injectables/AppConfig.html":{}}}],["this.findworkinghost(response.hosts",{"_index":290,"title":{},"body":{"injectables/AppConfig.html":{}}}],["this.formbuilder.group",{"_index":1285,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.handlepolleddata(data",{"_index":1502,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["this.heat",{"_index":1649,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["this.http.get(appconfig.apiurl",{"_index":1666,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["this.http.get(path",{"_index":265,"title":{},"body":{"injectables/AppConfig.html":{}}}],["this.http.get(this.fallbackconfpath).topromise().then((response",{"_index":299,"title":{},"body":{"injectables/AppConfig.html":{}}}],["this.http.get(this.hostspath).topromise().then",{"_index":286,"title":{},"body":{"injectables/AppConfig.html":{}}}],["this.http.post(appconfig.apiurl",{"_index":244,"title":{},"body":{"injectables/AppConfig.html":{},"injectables/AuthenticationService.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["this.idtoyaxis[axis.id",{"_index":797,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["this.isempty",{"_index":1288,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.ishandset$.subscribe(handset",{"_index":1661,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["this.istoggleenabled",{"_index":1662,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["this.item.route",{"_index":1560,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["this.lastresolution[dataset.datasetid",{"_index":726,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["this.loading",{"_index":1303,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loggedin",{"_index":1658,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["this.loginform",{"_index":1284,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls",{"_index":1298,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.invalid",{"_index":1302,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.measurementupdateservice.getvoltageupdateobs(this.chartobject.chartid",{"_index":700,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["this.measurementupdateservice.notifysubscribe",{"_index":703,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["this.measurementupdateservice.notifyunsubscribe",{"_index":805,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["this.measurementupdateservice.stop",{"_index":1365,"title":{},"body":{"components/MDashboardComponent.html":{}}}],["this.navservice.closenav",{"_index":1573,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["this.navservice.currenturl.subscribe((url",{"_index":1559,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["this.opendialog",{"_index":1061,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/MeasurementConfigurationComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["this.paused",{"_index":714,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["this.pollurl",{"_index":1499,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["this.precision",{"_index":724,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["this.returnurl",{"_index":1291,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.route.snapshot.queryparams['returnurl",{"_index":1292,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate([\"/dashboard",{"_index":1276,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/login",{"_index":456,"title":{},"body":{"guards/AuthGuard.html":{},"components/MenuListItemComponent.html":{}}}],["this.router.navigate([item.route",{"_index":1572,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["this.router.navigate([this.returnurl",{"_index":1306,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.running",{"_index":1488,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["this.selectedobject",{"_index":919,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["this.settings",{"_index":1054,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["this.settings.supplies",{"_index":1048,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/MeasurementConfigurationComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["this.settings.supplies.map(supply",{"_index":1040,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["this.setupaxesconfig(options.scales.yaxes",{"_index":709,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["this.setupsubscription",{"_index":704,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["this.start",{"_index":1490,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["this.stop",{"_index":1489,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["this.subjects",{"_index":1506,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["this.subjects[chartid",{"_index":1485,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["this.subjects[chartid].next(data",{"_index":1507,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["this.submitted",{"_index":1299,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.subscribercounter",{"_index":1486,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["this.subscription",{"_index":699,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"injectables/MeasurementUpdateService.html":{}}}],["this.subscription.unsubscribe",{"_index":694,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"injectables/MeasurementUpdateService.html":{}}}],["this.supply",{"_index":1102,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["this.supply.currentvoltage",{"_index":1104,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["this.supply.desiredvoltage",{"_index":1097,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["this.supply.maxvaluechecked",{"_index":1096,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["this.supply.minvalue",{"_index":1098,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["this.supply.stepsize",{"_index":1100,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["this.toastr.error(response",{"_index":259,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["this.toastr.success('changes",{"_index":927,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["this.toastr.success('csv",{"_index":803,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["this.toastr.success('image",{"_index":785,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["this.toastr.success('powering",{"_index":1667,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["this.toastr.success('settings",{"_index":255,"title":{},"body":{"injectables/AppConfig.html":{}}}],["this.toastr.success('values",{"_index":1024,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/GeneralSettingsComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["this.toggleplay",{"_index":782,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["this.voltagedevices.map(device",{"_index":1402,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["this.voltagedevices.push(device",{"_index":1421,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["this.voltageresolutionmap[device.currentresolution",{"_index":1404,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["this.voltageresolutionmap[device.desiredresolution",{"_index":1406,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["throwerror",{"_index":213,"title":{},"body":{"injectables/AppConfig.html":{},"interceptors/ErrorInterceptor.html":{}}}],["throwerror(e",{"_index":273,"title":{},"body":{"injectables/AppConfig.html":{}}}],["throwerror(error",{"_index":1161,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ticks",{"_index":795,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["time",{"_index":697,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{},"injectables/MeasurementUpdateService.html":{}}}],["timeout",{"_index":210,"title":{},"body":{"injectables/AppConfig.html":{},"modules/AppModule.html":{}}}],["timer",{"_index":1480,"title":{},"body":{"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["timer(0",{"_index":1498,"title":{},"body":{"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["timerinterval",{"_index":1220,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["timestamp",{"_index":898,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["title",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChartAxis.html":{},"interfaces/ChartObject.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/VideostreamComponent.html":{}}}],["tmp",{"_index":1606,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["toast",{"_index":396,"title":{},"body":{"modules/AppModule.html":{}}}],["toastr",{"_index":111,"title":{},"body":{"injectables/AppConfig.html":{},"modules/AppModule.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"dependencies.html":{}}}],["toastrmodule",{"_index":363,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrmodule.forroot",{"_index":393,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservice",{"_index":112,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["todo",{"_index":620,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"components/MeasurementConfigurationComponent.html":{}}}],["toggle",{"_index":807,"title":{},"body":{"components/ChartComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["toggle::after",{"_index":826,"title":{},"body":{"components/ChartComponent.html":{}}}],["toggleenabled",{"_index":1076,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["toggleplay",{"_index":579,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["token",{"_index":485,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"classes/User.html":{}}}],["toolbar",{"_index":1585,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["toolbar.mat",{"_index":1673,"title":{},"body":{"components/MyNavComponent.html":{}}}],["top",{"_index":958,"title":{},"body":{"components/ChartFormComponent.html":{},"components/ControlSliderComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MyNavComponent.html":{}}}],["top:20px",{"_index":1130,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["top:5px",{"_index":1129,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["track",{"_index":1475,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["transform",{"_index":648,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/DataEntry.html":{}}}],["transition",{"_index":1539,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["transition('expanded",{"_index":1549,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["transparent",{"_index":1114,"title":{},"body":{"components/ControlSliderComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["trending_flat",{"_index":1064,"title":{},"body":{"components/ConfirmDialog.html":{}}}],["tries",{"_index":135,"title":{},"body":{"injectables/AppConfig.html":{},"injectables/AuthenticationService.html":{}}}],["trigger",{"_index":596,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"components/MenuListItemComponent.html":{}}}],["trigger('indicatorrotate",{"_index":1543,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["triggered",{"_index":472,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"interfaces/DataEntry.html":{},"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["true",{"_index":400,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ChartComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"components/LoginComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":277,"title":{},"body":{"injectables/AppConfig.html":{}}}],["trying",{"_index":289,"title":{},"body":{"injectables/AppConfig.html":{}}}],["tslib",{"_index":1839,"title":{},"body":{"dependencies.html":{}}}],["ture",{"_index":1627,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["type",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/ChartObject.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"interceptors/ErrorInterceptor.html":{},"components/GeneralSettingsComponent.html":{},"interfaces/IAppConfig.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"interfaces/NavItem.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"classes/User.html":{},"interfaces/VarSupply.html":{},"components/VideostreamComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/socket.io",{"_index":1804,"title":{},"body":{"dependencies.html":{}}}],["u",{"_index":688,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["ua",{"_index":679,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["undefined",{"_index":928,"title":{},"body":{"components/ChartFormComponent.html":{},"components/MenuListItemComponent.html":{}}}],["under",{"_index":864,"title":{},"body":{"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{}}}],["underscore",{"_index":158,"title":{},"body":{"injectables/AppConfig.html":{}}}],["unique",{"_index":527,"title":{},"body":{"interfaces/ChartAxis.html":{},"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/ChartObject.html":{},"injectables/MeasurementUpdateService.html":{},"interfaces/VarSupply.html":{}}}],["unit",{"_index":683,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/DataEntry.html":{},"interfaces/VarSupply.html":{},"index.html":{}}}],["unit:string",{"_index":680,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/DataEntry.html":{},"interfaces/VarSupply.html":{}}}],["units",{"_index":727,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["unknown",{"_index":1616,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["unsubscribed",{"_index":1455,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["unsubscribes",{"_index":631,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["up",{"_index":598,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"components/LoginComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["update",{"_index":698,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"injectables/MeasurementUpdateService.html":{}}}],["update/chartconfig",{"_index":926,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["update/measurementdevices",{"_index":1413,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["updated",{"_index":1410,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["updatedevicevoltages",{"_index":1049,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["updategeneralsettings",{"_index":1177,"title":{},"body":{"components/GeneralSettingsComponent.html":{}}}],["updates",{"_index":471,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChartComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"components/MeasurementConfigurationComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/SupplyVoltagesComponent.html":{}}}],["updates.concat(this.currentdevices.map(device",{"_index":1407,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["updateselecteddevice",{"_index":892,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["updt",{"_index":1495,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["upscale",{"_index":734,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["url",{"_index":203,"title":{},"body":{"injectables/AppConfig.html":{},"guards/AuthGuard.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/LoginComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["url.indexof(`/${this.item.route",{"_index":1563,"title":{},"body":{"components/MenuListItemComponent.html":{}}}],["use",{"_index":194,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{},"index.html":{}}}],["useclass",{"_index":402,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":175,"title":{},"body":{"injectables/AppConfig.html":{},"injectables/AuthenticationService.html":{},"components/ChartComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"interfaces/IAppConfig.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"interfaces/MeasurementDevice.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"classes/User.html":{},"components/VideostreamComponent.html":{}}}],["usefactory",{"_index":406,"title":{},"body":{"modules/AppModule.html":{}}}],["useful",{"_index":850,"title":{},"body":{"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{}}}],["user",{"_index":424,"title":{"classes/User.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{},"classes/User.html":{},"coverage.html":{}}}],["user.token",{"_index":509,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["username",{"_index":487,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"classes/User.html":{}}}],["usersubject",{"_index":470,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["uses",{"_index":1464,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["using",{"_index":481,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"injectables/MeasurementUpdateService.html":{},"interfaces/VarSupply.html":{}}}],["usually",{"_index":1208,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["v",{"_index":676,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{},"interfaces/VarSupply.html":{}}}],["val",{"_index":250,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["valid",{"_index":1050,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interceptors/ErrorInterceptor.html":{},"components/MeasurementConfigurationComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["validators",{"_index":1274,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.required",{"_index":1286,"title":{},"body":{"components/LoginComponent.html":{}}}],["validinputs",{"_index":1051,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/MeasurementConfigurationComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["value",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfig.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartJsDataset.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"interfaces/IAppConfig.html":{},"components/LoginComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/SupplyVoltagesComponent.html":{},"interfaces/VarSupply.html":{},"components/VideostreamComponent.html":{},"miscellaneous/variables.html":{}}}],["value:number",{"_index":681,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["values",{"_index":118,"title":{},"body":{"injectables/AppConfig.html":{},"interfaces/ChartAxis.html":{},"components/ChartComponent.html":{},"interfaces/ChartDataset.html":{},"components/ChartFormComponent.html":{},"interfaces/ChartJsDataset.html":{},"interfaces/ChartObject.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/SupplyVoltagesComponent.html":{}}}],["var",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"interfaces/VarSupply.html":{},"components/VideostreamComponent.html":{}}}],["variable",{"_index":486,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1882,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["varsuplly",{"_index":1716,"title":{},"body":{"interfaces/VarSupply.html":{}}}],["varsupplies",{"_index":1708,"title":{},"body":{"interfaces/VarSupply.html":{}}}],["varsupply",{"_index":1005,"title":{"interfaces/VarSupply.html":{}},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{},"components/SupplyVoltagesComponent.html":{},"interfaces/VarSupply.html":{},"coverage.html":{}}}],["varsupply.model",{"_index":1189,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/MeasurementDevice.html":{}}}],["verify",{"_index":1701,"title":{},"body":{"classes/User.html":{}}}],["version",{"_index":1851,"title":{},"body":{"index.html":{}}}],["via",{"_index":1868,"title":{},"body":{"index.html":{}}}],["video",{"_index":422,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/VideostreamComponent.html":{}}}],["videocam",{"_index":1634,"title":{},"body":{"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["videostream",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["videostream.component.css",{"_index":1738,"title":{},"body":{"components/VideostreamComponent.html":{}}}],["videostream.component.html",{"_index":1739,"title":{},"body":{"components/VideostreamComponent.html":{}}}],["videostream/videostream.component",{"_index":371,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["videostreamcomponent",{"_index":80,"title":{"components/VideostreamComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{},"coverage.html":{},"overview.html":{}}}],["view",{"_index":626,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["visible",{"_index":1358,"title":{},"body":{"components/MDashboardComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{}}}],["void",{"_index":127,"title":{},"body":{"injectables/AppConfig.html":{},"injectables/AuthenticationService.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"interfaces/DataEntry.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"injectables/MeasurementUpdateService.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["volt",{"_index":1494,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["voltage",{"_index":946,"title":{},"body":{"components/ChartFormComponent.html":{},"components/ControlSliderComponent.html":{},"interfaces/IAppConfig.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{},"interfaces/VarSupply.html":{}}}],["voltagedevices",{"_index":1376,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["voltageresolutionmap",{"_index":1222,"title":{},"body":{"interfaces/IAppConfig.html":{},"components/MeasurementConfigurationComponent.html":{},"interfaces/MeasurementDevice.html":{}}}],["voltages",{"_index":1027,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["voltages'},{'name",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"components/ControlSliderComponent.html":{},"components/GeneralSettingsComponent.html":{},"components/LoginComponent.html":{},"components/MDashboardComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MenuListItemComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"components/SupplyVoltagesComponent.html":{},"components/VideostreamComponent.html":{}}}],["voltages.component",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MeasurementConfigurationComponent.html":{}}}],["voltages.component.css",{"_index":1034,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["voltages.component.html",{"_index":1033,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{}}}],["voltages.component.ts",{"_index":976,"title":{},"body":{"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/SupplyVoltagesComponent.html":{},"coverage.html":{}}}],["voltages.component.ts:101",{"_index":1690,"title":{},"body":{"components/SupplyVoltagesComponent.html":{}}}],["voltages.component.ts:106",{"_index":1689,"title":{},"body":{"components/SupplyVoltagesComponent.html":{}}}],["voltages.component.ts:132",{"_index":1691,"title":{},"body":{"components/SupplyVoltagesComponent.html":{}}}],["voltages.component.ts:142",{"_index":1688,"title":{},"body":{"components/SupplyVoltagesComponent.html":{}}}],["voltages.component.ts:41",{"_index":984,"title":{},"body":{"components/ConfirmDialog.html":{}}}],["voltages.component.ts:50",{"_index":1001,"title":{},"body":{"components/ConfirmDialog.html":{}}}],["voltages.component.ts:51",{"_index":1000,"title":{},"body":{"components/ConfirmDialog.html":{}}}],["voltages.component.ts:52",{"_index":999,"title":{},"body":{"components/ConfirmDialog.html":{}}}],["voltages.component.ts:59",{"_index":987,"title":{},"body":{"components/ConfirmDialog.html":{}}}],["voltages.component.ts:66",{"_index":991,"title":{},"body":{"components/ConfirmDialog.html":{}}}],["voltages.component.ts:99",{"_index":1687,"title":{},"body":{"components/SupplyVoltagesComponent.html":{}}}],["voltages/control",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"components/ControlSliderComponent.html":{},"coverage.html":{}}}],["voltages/supply",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/MeasurementConfigurationComponent.html":{},"components/SupplyVoltagesComponent.html":{},"coverage.html":{}}}],["voltageupdate",{"_index":671,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["voltageupdate/all",{"_index":1469,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["voltageupdatesubscription",{"_index":632,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["voltagevalue",{"_index":1458,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["voltagevalue:number",{"_index":1492,"title":{},"body":{"injectables/MeasurementUpdateService.html":{}}}],["w",{"_index":1321,"title":{},"body":{"components/LoginComponent.html":{}}}],["want",{"_index":236,"title":{},"body":{"injectables/AppConfig.html":{},"components/ChartComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/DataEntry.html":{},"components/PowerOffDialog.html":{},"interfaces/VarSupply.html":{}}}],["whenever",{"_index":473,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChartFormComponent.html":{},"injectables/MeasurementUpdateService.html":{}}}],["wheter",{"_index":1172,"title":{},"body":{"components/GeneralSettingsComponent.html":{}}}],["white",{"_index":832,"title":{},"body":{"components/ChartComponent.html":{},"components/LoginComponent.html":{},"components/MyNavComponent.html":{}}}],["whole",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["whose",{"_index":161,"title":{},"body":{"injectables/AppConfig.html":{}}}],["width",{"_index":812,"title":{},"body":{"components/ChartComponent.html":{},"components/ChartFormComponent.html":{},"components/ConfirmDialog.html":{},"interfaces/ConfirmationDialogData.html":{},"components/ControlSliderComponent.html":{},"components/LoginComponent.html":{},"components/MeasurementConfigurationComponent.html":{},"components/MyNavComponent.html":{},"components/PowerOffDialog.html":{},"interfaces/ROUTE.html":{},"components/SupplyVoltagesComponent.html":{}}}],["window",{"_index":1240,"title":{},"body":{"components/LoginComponent.html":{}}}],["wnats",{"_index":1386,"title":{},"body":{"components/MeasurementConfigurationComponent.html":{}}}],["won't",{"_index":763,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["working",{"_index":137,"title":{},"body":{"injectables/AppConfig.html":{}}}],["write",{"_index":759,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["x",{"_index":756,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["xs",{"_index":938,"title":{},"body":{"components/ChartFormComponent.html":{}}}],["y",{"_index":547,"title":{},"body":{"interfaces/ChartAxis.html":{},"interfaces/ChartObject.html":{}}}],["yaxis",{"_index":869,"title":{},"body":{"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{}}}],["yaxisid",{"_index":974,"title":{},"body":{"interfaces/ChartJsDataset.html":{}}}],["yaxisid?:string",{"_index":871,"title":{},"body":{"interfaces/ChartDataset.html":{},"interfaces/ChartJsDataset.html":{}}}],["yes",{"_index":728,"title":{},"body":{"components/ChartComponent.html":{},"interfaces/DataEntry.html":{}}}],["z",{"_index":1313,"title":{},"body":{"components/LoginComponent.html":{},"components/MyNavComponent.html":{}}}],["zone.js",{"_index":1841,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["zurück",{"_index":1350,"title":{},"body":{"components/LoginComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Main component which contains the whole app\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'test-app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n/**\n* Main component which contains the whole app\n*/\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'test-app';\n}\n\n    \n\n    \n         \n\n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartFormComponent', 'selector': 'app-chart-form'},{'name': 'ConfirmDialog', 'selector': 'app-confirm-dialog'},{'name': 'ControlSliderComponent', 'selector': 'app-control-slider'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GeneralSettingsComponent', 'selector': 'app-general-settings'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MDashboardComponent', 'selector': 'app-m-dashboard'},{'name': 'MeasurementConfigurationComponent', 'selector': 'app-measurement-config'},{'name': 'MenuListItemComponent', 'selector': 'app-menu-list-item'},{'name': 'MyNavComponent', 'selector': 'app-my-nav'},{'name': 'PowerOffDialog', 'selector': 'app-power_off_dialog'},{'name': 'SupplyVoltagesComponent', 'selector': 'app-supply-voltages'},{'name': 'VideostreamComponent', 'selector': 'app-videostream'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppConfig.html":{"url":"injectables/AppConfig.html","title":"injectable - AppConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_services/app.config.ts\n        \n\n            \n                Description\n            \n            \n                Class to load the configuration of the frontend.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                fallbackConfPath\n                            \n                            \n                                    Private\n                                hostspath\n                            \n                            \n                                    Public\n                                http\n                            \n                            \n                                    Static\n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clear\n                            \n                            \n                                    Private\n                                findWorkingHost\n                            \n                            \n                                    Public\n                                load\n                            \n                            \n                                    Private\n                                    Static\n                                removePrivateValues\n                            \n                            \n                                    Public\n                                storeSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    apiUrl\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/_services/app.config.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/app.config.ts:74\n                \n            \n\n\n            \n                \n                    Removes values from the config object which should not be stored. \ne.g. private values, values that got generated from chart.js etc.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            findWorkingHost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findWorkingHost(hostlist: Array, position: number, resolve: () => void, errorCallback: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/app.config.ts:110\n                \n            \n\n\n            \n                \n                    Tries to find a working host from hostlist.\nIf found the resolve function we be called and the function terminates. \nOtherwise the errorCallback will be called if no host is found.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hostlist\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    resolve\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    errorCallback\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/app.config.ts:144\n                \n            \n\n\n            \n                \n                    Loads the config from the backend and stores it in the settings object \n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        a Promise that is resolved as soon as the config is loaded\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            removePrivateValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removePrivateValues(obj: any, level: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/app.config.ts:53\n                \n            \n\n\n            \n                \n                    Removes all elements that start with a underscore \"_\". \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the object whose properties should be removed\n\n                                    \n                                \n                                \n                                    level\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        how deep we should go to remove properties\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            storeSettings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    storeSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/app.config.ts:91\n                \n            \n\n\n            \n                \n                    Stores the appconfig file on the backend server. \nshows a notification if the operation was successful\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fallbackConfPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"assets/config/config.json\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/app.config.ts:30\n                            \n                        \n\n                \n                    \n                        Fallback to the local config file. If no backend is found, this config will be used to make sure the frontend can boot\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hostspath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"assets/config/hosts.json\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/app.config.ts:24\n                            \n                        \n\n                \n                    \n                        Path to the hosts.json file. Contains different IP-Adresses on which the client should look for the backend server \nSince a host connecting to the RPI will run the same script we need to be able to use different IP's for the backend then just localhost\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/app.config.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IAppConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/app.config.ts:18\n                            \n                        \n\n                \n                    \n                        Contains the Configuration of the app.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        apiUrl\n                    \n                \n\n                \n                    \n                        getapiUrl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_services/app.config.ts:43\n                                \n                            \n                    \n                        \n                                Return the url leading to the API path. \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { IAppConfig } from '../_models/app-config.model';\nimport { ToastrService } from 'ngx-toastr';\nimport { timeout, catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\n\n/**\n* Class to load the configuration of the frontend.\n*/\n@Injectable()\nexport class AppConfig {\n\n  /**\n  * Contains the Configuration of the app.\n  */\n  public static settings: IAppConfig;\n\n  /**\n  * Path to the hosts.json file. Contains different IP-Adresses on which the client should look for the backend server \n  * Since a host connecting to the RPI will run the same script we need to be able to use different IP's for the backend then just localhost\n  */\n  private hostspath: string = \"assets/config/hosts.json\";\n\n  // private apiPath: string = \"http://localhost:8080/api\";\n  /**\n  * Fallback to the local config file. If no backend is found, this config will be used to make sure the frontend can boot\n  */\n  private fallbackConfPath: string = \"assets/config/config.json\";\n\n  // /**\n  // * The host for the backend. \n  // * Value gets set\n  // */\n  // private host: string;\n\n  constructor(public http: HttpClient, private toastr: ToastrService) { }\n\n  /**\n  * Return the url leading to the API path. \n  * @param {any} obj the object whose properties should be removed\n  * @param {number} level how deep we should go to remove properties\n  */\n  private static removePrivateValues(obj: any, level: number) {\n    if (level == 0)\n      return;\n\n    for (let key in obj) {\n      // console.log(\"key:\" + key)\n      // console.log(key)\n      if (key.startsWith(\"_\")) {\n        delete obj.key;\n        console.log(\"deleted\" + key)\n        continue;\n      }\n      AppConfig.removePrivateValues(obj[key], level - 1);\n\n    }\n  }\n\n  /**\n  * Removes values from the config object which should not be stored. \n  * e.g. private values, values that got generated from chart.js etc.\n  */\n  public static clear() {\n    console.log(\"clear\")\n    for (let chart of AppConfig.settings.charts) {\n      for (let dataset of chart.datasets) {\n        // we do not want to store old data\n        delete dataset.chartDataset.data;\n        delete dataset.chartDataset._meta;\n      }\n    }\n    AppConfig.removePrivateValues(AppConfig.settings, 15);\n  }\n\n\n  /**\n  * Stores the appconfig file on the backend server. \n  * shows a notification if the operation was successful\n  */\n  public storeSettings(): void {\n    this.http.post(AppConfig.apiUrl + \"/storeconfig\", AppConfig.settings, { responseType: 'text' })\n      .subscribe(\n        (val) => {\n          console.log(\"POST call successful value returned in body\",\n            val);\n          this.toastr.success('Settings stored successfully');\n        },\n        response => {\n          console.log(response)\n          this.toastr.error(response, \"Could not store Settings\");\n        });\n  }\n\n  /**\n  * Tries to find a working host from hostlist.\n  * If found the resolve function we be called and the function terminates. \n  * Otherwise the errorCallback will be called if no host is found.\n  */\n  private findWorkingHost(hostlist: Array, position:number, resolve : () => void, errorCallback : () => void) {\n\n    if (position >= hostlist.length) {\n      // No host was found.\n      errorCallback();\n      return;\n    }\n\n\n    let path = \"http://\" + hostlist[position] + \":8080/api/loadconfig\";\n    console.log(\"trying to find working host on : \" + path)\n\n    this.http.get(path)\n      // check if server answers during 3s\n      .pipe(timeout(3000),\n        catchError((e, c) => {return throwError(e) }))\n        .subscribe(data => {\n        // host found. -> load settings and set host.\n        AppConfig.settings = data;\n        AppConfig.settings.deployment.host = hostlist[position];\n        // Call resolve function\n        resolve();\n      }, err => {\n        // Try next host\n        this.findWorkingHost(hostlist, ++position, resolve, errorCallback);\n        console.log(' error which is ->', err);\n      });\n  }\n\n\n  /**\n  * Loads the config from the backend and stores it in the settings object \n  * @return a Promise that is resolved as soon as the config is loaded\n  */\n  public load() {\n    return new Promise((resolve, reject) => {\n      // load host.json file\n      this.http.get(this.hostspath).toPromise().then(\n        (response: any) => {\n          console.log(response)\n\n          // check hosts one for one, trying to find a working one.\n          this.findWorkingHost(response.hosts, 0, resolve,\n            // error callback\n            () => {\n              // could not find a host.-> try to use local config instead\n              console.log(\"Could not laod config fromhosts going to fallback mode. Trying to load file from: \" + this.fallbackConfPath);\n              this.http.get(this.fallbackConfPath).toPromise().then((response: IAppConfig) => {\n                // Get fallback config\n                AppConfig.settings = response;\n                resolve();\n              }).catch((response: any) => {\n                // Error could not load fallback config ->  reject\n                reject(`Could not load file '${this.fallbackConfPath}': ${JSON.stringify(response)}`);\n              });\n          });\n        }\n      ).catch((response: any) => {\n        reject(`Could not load file '${this.fallbackConfPath}': ${JSON.stringify(response)}`);\n      });\n    });\n  };\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChartComponent\n\nChartComponent\n\nAppModule -->\n\nChartComponent->AppModule\n\n\n\n\n\nChartFormComponent\n\nChartFormComponent\n\nAppModule -->\n\nChartFormComponent->AppModule\n\n\n\n\n\nConfirmDialog\n\nConfirmDialog\n\nAppModule -->\n\nConfirmDialog->AppModule\n\n\n\n\n\nControlSliderComponent\n\nControlSliderComponent\n\nAppModule -->\n\nControlSliderComponent->AppModule\n\n\n\n\n\nEditorComponent\n\nEditorComponent\n\nAppModule -->\n\nEditorComponent->AppModule\n\n\n\n\n\nGeneralSettingsComponent\n\nGeneralSettingsComponent\n\nAppModule -->\n\nGeneralSettingsComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMDashboardComponent\n\nMDashboardComponent\n\nAppModule -->\n\nMDashboardComponent->AppModule\n\n\n\n\n\nMeasurementConfigurationComponent\n\nMeasurementConfigurationComponent\n\nAppModule -->\n\nMeasurementConfigurationComponent->AppModule\n\n\n\n\n\nMenuListItemComponent\n\nMenuListItemComponent\n\nAppModule -->\n\nMenuListItemComponent->AppModule\n\n\n\n\n\nMyNavComponent\n\nMyNavComponent\n\nAppModule -->\n\nMyNavComponent->AppModule\n\n\n\n\n\nPowerOffDialog\n\nPowerOffDialog\n\nAppModule -->\n\nPowerOffDialog->AppModule\n\n\n\n\n\nSupplyVoltagesComponent\n\nSupplyVoltagesComponent\n\nAppModule -->\n\nSupplyVoltagesComponent->AppModule\n\n\n\n\n\nVideostreamComponent\n\nVideostreamComponent\n\nAppModule -->\n\nVideostreamComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAppConfig\n\nAppConfig\n\nAppModule -->\n\nAppConfig->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nAppModule -->\n\nJwtInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ChartComponent\n                        \n                        \n                            ChartFormComponent\n                        \n                        \n                            ConfirmDialog\n                        \n                        \n                            ControlSliderComponent\n                        \n                        \n                            EditorComponent\n                        \n                        \n                            GeneralSettingsComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            MDashboardComponent\n                        \n                        \n                            MeasurementConfigurationComponent\n                        \n                        \n                            MenuListItemComponent\n                        \n                        \n                            MyNavComponent\n                        \n                        \n                            PowerOffDialog\n                        \n                        \n                            SupplyVoltagesComponent\n                        \n                        \n                            VideostreamComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ConfirmDialog\n                        \n                        \n                            PowerOffDialog\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AppConfig\n                        \n                        \n                            AuthenticationService\n                        \n                        \n                            ErrorInterceptor\n                        \n                        \n                            JwtInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MyNavComponent, PowerOffDialog } from './navigation/my-nav.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule, MatListModule, MatGridListModule, MatCardModule, MatMenuModule, MatDialogModule, MatExpansionModule } from '@angular/material';\nimport { MDashboardComponent } from './m-dashboard/m-dashboard.component';\nimport { ChartComponent } from './m-dashboard/chart/chart.component';\nimport { SupplyVoltagesComponent, ConfirmDialog } from './supply-voltages/supply-voltages.component';\nimport { ReactiveFormsModule }    from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgxBootstrapSliderModule } from 'ngx-bootstrap-slider';\nimport {AuthenticationService} from './_services';\nimport { APP_INITIALIZER } from '@angular/core';\nimport { AppConfig } from './_services/app.config';\nimport { ToastrModule } from 'ngx-toastr';\nimport { CommonModule } from '@angular/common';\nimport { JwtInterceptor, ErrorInterceptor } from './_helpers';\nimport { LoginComponent } from './login';\nimport { ControlSliderComponent } from './supply-voltages/control-slider/control-slider.component';\nimport { VideostreamComponent } from './videostream/videostream.component';\nimport { ChartFormComponent } from './chart-form/chart-form.component';\nimport { FormsModule } from '@angular/forms';\nimport { MenuListItemComponent } from './navigation/menu-list-item/menu-list-item.component';\nimport { EditorComponent } from './editor/editor.component';\nimport { NgJsonEditorModule } from 'ang-jsoneditor';\nimport { GeneralSettingsComponent } from './general-settings/general-settings.component'\nimport { MeasurementConfigurationComponent } from './measurement-config/measurement-config.component';\n\n\n/**\n* loads the config from the backend.\n* Needs to be called before starting the rest of the application\n*/\nexport function initializeApp(appConfig: AppConfig) {\n  return () => appConfig.load();\n}\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MyNavComponent,\n    MDashboardComponent,\n    ChartComponent,\n    SupplyVoltagesComponent,\n    LoginComponent,\n    ControlSliderComponent,\n    VideostreamComponent,\n    ChartFormComponent,\n    MenuListItemComponent,\n    ConfirmDialog,\n    PowerOffDialog,\n    MeasurementConfigurationComponent,\n    EditorComponent,\n    GeneralSettingsComponent\n  ],\n  imports: [\n    MatExpansionModule,\n    MatDialogModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxBootstrapSliderModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    HttpClientModule,\n    NgJsonEditorModule,\n    CommonModule,\n    ToastrModule.forRoot({\n     timeOut: 1500,\n     positionClass: 'toast-bottom-right',\n     preventDuplicates: true,\n   })\n   ],\n   providers: [\n       { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n       { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n         AuthenticationService,\n         AppConfig,\n         // Call initializeApp before application boots\n       { provide: APP_INITIALIZER,  useFactory: initializeApp,  deps: [AppConfig], multi: true }\n   ],\n  entryComponents: [ConfirmDialog, PowerOffDialog],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MDashboardComponent } from './m-dashboard/m-dashboard.component';\nimport { AuthGuard } from './_guards';\nimport {LoginComponent} from './login/login.component';\nimport { SupplyVoltagesComponent } from './supply-voltages/supply-voltages.component';\nimport {VideostreamComponent} from './videostream/videostream.component';\nimport { ChartFormComponent } from './chart-form/chart-form.component';\nimport { EditorComponent } from './editor/editor.component';\nimport { GeneralSettingsComponent } from './general-settings/general-settings.component';\nimport { MeasurementConfigurationComponent } from './measurement-config/measurement-config.component';\n\n/**\n* Array containing all pathsComponents  the application knows. \n*/\nconst routes: Routes = [\n  { path: 'dashboard', component:MDashboardComponent },\n  { path: '', component:MDashboardComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'video', component: VideostreamComponent },\n  // Routes that require the user to be logged in\n  { path: 'settings', component: SupplyVoltagesComponent, canActivate: [AuthGuard] },\n  { path: 'chartsettings', component: ChartFormComponent, canActivate: [AuthGuard]},\n  { path: 'measDevices', component:MeasurementConfigurationComponent, canActivate: [AuthGuard]},\n  { path: 'general', component: GeneralSettingsComponent, canActivate: [AuthGuard]},\n  { path: 'editor', component:EditorComponent, canActivate: [AuthGuard]}\n  ];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/_guards/auth.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Checks if user has permission to navigate to a given route.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/_guards/auth.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_guards/auth.guard.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AuthenticationService } from '../_services';\n\n/**\n* Checks if user has permission to navigate to a given route.\n*/\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const currentUser = this.authenticationService.currentUserValue;\n        if (currentUser) {\n            // logged in so return true\n            return true;\n        }\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n        return false;\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_services/authentication.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentUser\n                            \n                            \n                                    Private\n                                currentUserSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCurrentUserObservable\n                            \n                            \n                                    Public\n                                isLoggedIn\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currentUserValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/_services/authentication.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCurrentUserObservable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentUserObservable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/authentication.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         BehaviorSubject\n\n                    \n                    \n                        the userSubject. Updates will be triggered whenever somebody logs in or out\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/authentication.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if user is logged in, false otherwise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/authentication.service.ts:51\n                \n            \n\n\n            \n                \n                    tries to log in using the given credentials. \nIf login is succesfully a user object with a JWT token is stored in the currentUser variable.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a username for the user. currently not used in backend\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the password\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/authentication.service.ts:67\n                \n            \n\n\n            \n                \n                    logs out a user that is currently logged in.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/authentication.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentUserSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/authentication.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentUserValue\n                    \n                \n\n                \n                    \n                        getcurrentUserValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_services/authentication.service.ts:31\n                                \n                            \n                    \n                        \n\n                                \n                                \n                                \n                                    Returns :         User\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { User } from '../_models';\nimport { AppConfig } from './app.config';\n\n\n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService {\n    private currentUserSubject: BehaviorSubject;\n    public currentUser: Observable;\n\n    constructor(private http: HttpClient) {\n        this.currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\n        this.currentUser = this.currentUserSubject.asObservable();\n    }\n\n    /**\n    * @returns the userSubject. Updates will be triggered whenever somebody logs in or out\n    */\n    public getCurrentUserObservable(): BehaviorSubject {\n      return this.currentUserSubject;\n    }\n\n    /**\n    * @returns the current user.\n    */\n    public get currentUserValue(): User {\n        return this.currentUserSubject.value;\n    }\n\n    /**\n    * @returns true if user is logged in, false otherwise\n    */\n    public isLoggedIn() {\n      if (this.currentUserValue) {\n        return true;\n      }\n      return false\n    }\n\n    /**\n    * tries to log in using the given credentials. \n    * If login is succesfully a user object with a JWT token is stored in the currentUser variable.\n    * @param {string} username a username for the user. currently not used in backend\n    * @param{string} password the password\n    */\n    public login(username: string, password: string) {\n        return this.http.post(AppConfig.apiUrl + \"/login\", { username, password })\n            .pipe(map(user => {\n                // login successful if there's a jwt token in the response\n                if (user && user.token) {\n                    // store user details and jwt token in local storage to keep user logged in between page refreshes\n                    localStorage.setItem('currentUser', JSON.stringify(user));\n                    this.currentUserSubject.next(user);\n                }\n                return user;\n            }));\n    }\n\n    /**\n    * logs out a user that is currently logged in.\n    */\n    public logout() {\n        // remove user from local storage to log user out\n        localStorage.removeItem('currentUser');\n        this.currentUserSubject.next(null);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChartAxis.html":{"url":"interfaces/ChartAxis.html","title":"interface - ChartAxis","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ChartAxis\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/chartObject.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface to define different axes on this chart.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        position\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique ID for this axis.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                    \n                                \n                                \n                                    \n                                        position:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Position of the axis \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChartDataset } from './chartDataset.model';\n\n/**\n* Interface defining a ChartObject stored in settings\n*/\nexport interface ChartObject {\n  /**\n  * Max number of values on graph.\n  */\n  maxValues: number;\n  /**\n  * Name of the chart (Title)\n  */\n  name:string,\n  /**\n  * Array containing all Datasets that belong to this Chart\n  */\n  datasets: Array,\n  /**\n  * ID, must be unique\n  */\n  chartId:string,\n  /**\n  * Custom chart options (See Chart.js documentation). These will overwrite the objects from general config\n  */\n  options?:any,\n\n  /**\n  * Different y Axis that are on this chart\n  */\n  axes?: Array\n}\n\n/**\n* Interface to define different axes on this chart.\n*/\nexport interface ChartAxis {\n  /**\n  * Position of the axis \n  */\n  position:string,\n  /**\n  * Unique ID for this axis.\n  */\n  id: string\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChartComponent.html":{"url":"components/ChartComponent.html","title":"component - ChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/m-dashboard/chart/chart.component.ts\n\n\n    \n        Description\n    \n    \n        Component that creates a chart graph with reload, pause and export button.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n                    OnDestroy\n    \n\n    \n        Example\n    \n    \n                \n                    | ----------------------------------------------------------------|\n|                                        [Play][Reload][export]   |\n|        |---------------------------------|                      |\n|        |                                 |                      |\n|        |     Chart JS (chartObject)      |                      |\n|        |                                 |                      |\n|        |                                 |                      |\n|        |---------------------------------|                      |\n|                                                                 |\n| ----------------------------------------------------------------|\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chart\n            \n\n            \n                styleUrls\n                ./chart.component.css\n            \n\n\n\n            \n                templateUrl\n                ./chart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                chartLine\n                            \n                            \n                                    Private\n                                data\n                            \n                            \n                                    Private\n                                dataSetHandlerFunctions\n                            \n                            \n                                idToYAxis\n                            \n                            \n                                    Private\n                                lastResolution\n                            \n                            \n                                    Public\n                                paused\n                            \n                            \n                                    Private\n                                precision\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addDatasetToChart\n                            \n                            \n                                    Private\n                                addDataToChart\n                            \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                exportCsv\n                            \n                            \n                                    Public\n                                exportImage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setUpAxesConfig\n                            \n                            \n                                    Private\n                                setUpSubscription\n                            \n                            \n                                    Public\n                                togglePlay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                chartObject\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(measurementUpdateService: MeasurementUpdateService, cd: ChangeDetectorRef, http: HttpClient, toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/m-dashboard/chart/chart.component.ts:120\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        measurementUpdateService\n                                                  \n                                                        \n                                                                        MeasurementUpdateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that polls every  and publishes new measurement values using observables\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular class to notify angular about frontend changes. Needed because the graph convas doesn't trigger changes on it's own when set up\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                http client to communicate with backend\n\n                                                        \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to create small notification on the screen\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        chartObject\n                    \n                \n                \n                    \n                        Type :         ChartObject\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/m-dashboard/chart/chart.component.ts:79\n                            \n                        \n                \n                    \n                        the chartobject stored in the config which contains all the information about this chart. (name, datasets etc.)\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addDatasetToChart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addDatasetToChart(dataset: ChartDataset)\n                \n            \n\n\n            \n                \n                    Defined in src/app/m-dashboard/chart/chart.component.ts:286\n                \n            \n\n\n            \n                \n                    Adds a new dataset to the chart.  Only call this function once when setting up a new dataset.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    dataset\n                                    \n                                                ChartDataset\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Dataset object we want to add to the chart.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addDataToChart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addDataToChart(data: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/app/m-dashboard/chart/chart.component.ts:196\n                \n            \n\n\n            \n                \n                    Adds data obtained from measurementUpdateService to the graph. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Record containg all measurements from backend\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/m-dashboard/chart/chart.component.ts:312\n                \n            \n\n\n            \n                \n                    Removes all points from Graph. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            exportCsv\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    exportCsv()\n                \n            \n\n\n            \n                \n                    Defined in src/app/m-dashboard/chart/chart.component.ts:366\n                \n            \n\n\n            \n                \n                    TODO\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            exportImage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    exportImage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/m-dashboard/chart/chart.component.ts:329\n                \n            \n\n\n            \n                \n                    Exports the current graph as image. Sends image as base64 string to the backend.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/m-dashboard/chart/chart.component.ts:166\n                \n            \n\n\n            \n                \n                    After view element is created.  \n  Sets up Chart.js element (chartLine)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/m-dashboard/chart/chart.component.ts:133\n                \n            \n\n\n            \n                \n                    called when component is destroyed. Unsubscribes from VoltageUpdateSubscription\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/m-dashboard/chart/chart.component.ts:158\n                \n            \n\n\n            \n                \n                    Called when component is created. Sets up a subscription from measurementUpdateService to get measurement Updates\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setUpAxesConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpAxesConfig(axes: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/m-dashboard/chart/chart.component.ts:345\n                \n            \n\n\n            \n                \n                    sets up the axis of the chart.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    axes\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setUpSubscription\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpSubscription()\n                \n            \n\n\n            \n                \n                    Defined in src/app/m-dashboard/chart/chart.component.ts:140\n                \n            \n\n\n            \n                \n                    Sets up a subscription from measurementUpdateService. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            togglePlay\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    togglePlay()\n                \n            \n\n\n            \n                \n                    Defined in src/app/m-dashboard/chart/chart.component.ts:385\n                \n            \n\n\n            \n                \n                    halts / resumes adding of values to the graph.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            chartLine\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Chart\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/m-dashboard/chart/chart.component.ts:94\n                            \n                        \n\n                \n                    \n                        Holds the real Chart.js chart objects.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    labels: [\"\"],\n    datasets: []\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/m-dashboard/chart/chart.component.ts:111\n                            \n                        \n\n                \n                    \n                        Contains all the data that will be passed to the chart objects.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dataSetHandlerFunctions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Record\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/m-dashboard/chart/chart.component.ts:74\n                            \n                        \n\n                \n                    \n                        Object that stores custom transform function for every dataset.  \nThis is used to created custom datasets. e.g. power calculation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idToYAxis\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Record\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/m-dashboard/chart/chart.component.ts:120\n                            \n                        \n\n                \n                    \n                        Contains mapping axis id to axis position in chart.js options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            lastResolution\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Record\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/m-dashboard/chart/chart.component.ts:106\n                            \n                        \n\n                \n                    \n                        Contains the last resolution for every measurement in the graph. \nUsed to find resolution changes and rescale values\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            paused\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/m-dashboard/chart/chart.component.ts:84\n                            \n                        \n\n                \n                    \n                        boolean that stores state of graph.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : Math.pow(10, 3)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/m-dashboard/chart/chart.component.ts:99\n                            \n                        \n\n                \n                    \n                        Defines how many decimal numbers we want to show.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/m-dashboard/chart/chart.component.ts:87\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Input, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { Chart } from 'chart.js';\nimport { MeasurementUpdateService } from '../../_services/MeasurementUpdateService';\nimport { AppConfig } from '../../_services/app.config';\n\nimport { ChartDataset } from '../../_models/chartDataset.model';\nimport { ChartObject } from '../../_models/chartObject.model';\nimport { HttpClient } from '@angular/common/http';\nimport { Subscription } from 'rxjs';\nimport { ToastrService } from 'ngx-toastr';\n\n\n\n\n/**\n* Interfaces that defines the ResponseObject of the VoltageUpdate Subscription\n*/\ninterface DataEntry {\n  /**\n  * Max Value that is possible to send in this resolution => used to scale the graph\n  */\n   max: number;\n   /**\n   * e.g. V, mV, mA, uA\n   */\n   unit:string;\n   /**\n   * The value for this measurement\n   */\n   value:number;\n}\n\nexport function scaleToSiUnit(data:DataEntry):number {\n      let unit = data.unit.charAt(0)\n      let multiplier = 1;\n\n      if (unit == \"m\") {\n        multiplier =  1/1000;\n      } else if(unit == \"u\") {\n        multiplier = 1/1000000\n      }\n      return data.value * multiplier;\n\n  }\n\n/**\n* Component that creates a chart graph with reload, pause and export button.\n* @example\n*\n* | ----------------------------------------------------------------|\n* |                                        [Play][Reload][export]   |\n* |        |---------------------------------|                      |\n* |        |                                 |                      |\n* |        |     Chart JS (chartObject)      |                      |\n* |        |                                 |                      |\n* |        |                                 |                      |\n* |        |---------------------------------|                      |\n* |                                                                 |\n* | ----------------------------------------------------------------|\n*\n*/\n@Component({\n  selector: 'app-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.css']\n})\n\nexport class ChartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  /**\n  * Object that stores custom transform function for every dataset.  \n  * This is used to created custom datasets. e.g. power calculation\n  */\n  private dataSetHandlerFunctions: Record number> = {}\n  /**\n  * the chartobject stored in the config which contains all the information about this chart. (name, datasets etc.)\n  */\n  @Input()\n  public chartObject: ChartObject;\n\n  /**\n  *  boolean that stores state of graph.\n  */\n  public paused: boolean = false;\n  // message: any;\n\n  private subscription: Subscription;\n\n  // public currValue: string;\n\n  /**\n  * Holds the real Chart.js chart objects.\n  */\n  public chartLine: Chart;\n\n  /**\n  * Defines how many decimal numbers we want to show.\n  */\n  private precision: number = Math.pow(10, 3);\n\n\n  /**\n  *  Contains the last resolution for every measurement in the graph. \n  *  Used to find resolution changes and rescale values\n  */\n  private lastResolution: Record = {}\n\n  /**\n  * Contains all the data that will be passed to the chart objects.\n  */\n  private data = {\n    labels: [\"\"],\n    datasets: []\n  };\n\n\n  /**\n  * Contains mapping axis id to axis position in chart.js options\n  */\n  idToYAxis:Record = {}\n\n  /**\n  * @param {MeasurementUpdateService} measurementUpdateService Service that polls every  and publishes new measurement values using observables\n  * @param {ChangeDetectorRef} cd Angular class to notify angular about frontend changes. Needed because the graph convas doesn't trigger changes on it's own when set up\n  * @param {HttpClient} http http client to communicate with backend\n  * @param {ToastrService} toastr Service used to create small notification on the screen\n  */\n  constructor(private measurementUpdateService: MeasurementUpdateService, private cd: ChangeDetectorRef, private http: HttpClient,  private toastr: ToastrService) { }\n\n  /**\n  * called when component is destroyed. Unsubscribes from VoltageUpdateSubscription\n  */\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  /**\n  * Sets up a subscription from measurementUpdateService. \n  */\n  private setUpSubscription() {\n\n    // Add all datasets to chart\n    for (let dataset of this.chartObject.datasets) {\n      this.addDatasetToChart(dataset);\n    }\n\n    // Every time a measurement update is triggered call addDataToChart function\n    this.subscription = this.measurementUpdateService.getVoltageUpdateObs(this.chartObject.chartId)\n                                                 .subscribe(data => this.addDataToChart(data));\n\n    // Notify service that we subscribed.\n    this.measurementUpdateService.notifySubscribe();\n  }\n\n  /**\n  * Called when component is created. Sets up a subscription from measurementUpdateService to get measurement Updates\n  */\n  ngOnInit() {\n    this.setUpSubscription()\n  }\n\n  /**\n  * After view element is created.  \n  *  Sets up Chart.js element (chartLine)\n  */\n  ngAfterViewInit() {\n    // load options from general config\n    let options = AppConfig.settings.general.chartOptions;\n\n    // Check if there are own options set for this particular graph.\n    if (this.chartObject.hasOwnProperty(\"options\")) {\n      options = this.chartObject.options;\n    }\n\n    this.setUpAxesConfig(options.scales.yAxes);\n\n    // Set up Chart.js chart\n    this.chartLine = new Chart(this.chartObject.chartId, {\n      type: 'line',\n      data: this.data,\n      options: options\n    });\n    // default value\n    this.paused = false;\n\n    // Notify angular that we changed stuff\n    this.cd.detectChanges();\n  }\n\n\n\n/**\n* Adds data obtained from measurementUpdateService to the graph. \n* @param { Record} data Record containg all measurements from backend\n*/\n  private addDataToChart(data: Record): void {\n\n    // Every dataset can decide which data it wants to use.\n    for (let dataset of this.chartObject.datasets) {\n\n      let datasetId = dataset.datasetId;\n      let unit = dataset.unit;\n\n      // get value from datasetHandlerFunction. Scale it to precision\n\n\n      let value = Math.round(this.dataSetHandlerFunctions[datasetId](data) * this.precision) / this.precision;\n\n      let lastUnit = this.lastResolution[dataset.datasetId];\n\n      if (!dataset.chartDataset.data) {\n        dataset.chartDataset.data = [];\n      }\n\n      // Check if units changed. If yes, rescale all old values.\n      let dataCount = dataset.chartDataset.data.length;\n      if (lastUnit  && lastUnit != \"\" && lastUnit != unit && dataCount) {\n          // We got a resolution change. Figure out if we need to down or upscale values\n          let multiplier = 1;\n          if (unit == \"mV\" || unit == \"uA\") {\n            // V -> mV\n            multiplier = 1000;\n          } else if (unit == \"V\" || unit == \"mA\") {\n            // mV -> V\n            multiplier = 1 / 1000;\n          }\n\n          // recalculate all old datas\n          for (let i = 0; i = this.chartObject.maxValues) {\n        dataset.chartDataset.data.shift();\n      }\n\n      // Create label from datasetName and unit if option is enabled\n      if (dataset.autoLabel) {\n        dataset.unit = data[dataset.sourceId].unit;\n        dataset.chartDataset.label = dataset.name + \"[\" + unit + \"]\";\n      }\n\n      // Rescale Axis\n      if (dataset.chartDataset.yAxisID && (dataset.autoRange || dataset.negRange)) {\n        // Get Axis from mapping\n        let axis = this.chartLine.options.scales.yAxes[this.idToYAxis[dataset.chartDataset.yAxisID]]\n        if (dataset.autoRange) {\n          axis.ticks.max = data[dataset.sourceId].max\n          axis.ticks.min = 0\n        }\n\n        if (dataset.negRange) {\n          axis.ticks.min = -data[dataset.sourceId].max;\n        }\n      }\n\n    }\n\n    // We need to push a label for the x-axis. in this case it is empty, so we do not write anything\n    // If nothing is pushed, graph won't show new values\n    this.data.labels.push('');\n\n    // shift labels if maxvalues reached\n    if (this.data.labels.length > this.chartObject.maxValues) {\n      this.data.labels.shift();\n    }\n\n    // notify update\n    this.chartLine.update()\n  }\n\n  /**\n  * Adds a new dataset to the chart.  Only call this function once when setting up a new dataset.\n  * @param {ChartDataset} dataset The Dataset object we want to add to the chart.\n  */\n  private addDatasetToChart(dataset: ChartDataset) {\n    // Register in lastResolution array\n    this.lastResolution[dataset.datasetId] = \"\";\n    // Register as a dataset for this graph\n    this.data.datasets.push(dataset.chartDataset);\n\n    // Set up custom handler function if this is a \"fake Dataset\".\n    if (dataset.customDataHandlerEnabled) {\n      this.dataSetHandlerFunctions[dataset.datasetId] = function(data: DataEntry) {\n\n        return eval(dataset.handler)\n        // return scaleToSiUnit(data['vm1']) * scaleToSiUnit(data['cm3']);\n      }\n    } else {\n      // just return the value.\n      this.dataSetHandlerFunctions[dataset.datasetId] = function(data: DataEntry) {\n        return data[dataset.sourceId].value;\n      }\n    }\n  }\n\n\n\n  /**\n  * Removes all points from Graph. \n  */\n  public clear() {\n    for (let dataset of this.chartObject.datasets) {\n      dataset.chartDataset.data = [];\n      this.lastResolution[dataset.datasetId] = \"\";\n    }\n\n    this.data.labels = [];\n    this.chartLine.update();\n\n    if (this.paused) {\n      this.togglePlay();\n    }\n  }\n\n  /**\n  * Exports the current graph as image. Sends image as base64 string to the backend.\n  */\n  public exportImage() {\n    this.http.post(AppConfig.apiUrl + \"/storeImage\", { \"image\": this.chartLine.ctx.canvas.toDataURL() }, { responseType: 'text' })\n      .subscribe(\n        (val) => {\n          this.toastr.success('Image exported');\n       },\n        response => {\n         this.toastr.error(response, \"Could not export Image\");\n        });\n  }\n\n\n\n  /**\n  * sets up the axis of the chart.\n  */\n  private setUpAxesConfig(axes:Array) {\n    axes.length = 0;\n\n    if(this.chartObject.axes) {\n      let i = 0;\n      for (let axis of this.chartObject.axes) {\n        var entry = {\n              id: axis.id,\n              type: \"linear\",\n              position: axis.position,\n              ticks: {}\n          }\n\n        axes.push(entry)\n        this.idToYAxis[axis.id] = i++;\n      }\n    }\n  }\n  /**\n  * TODO\n  */\n  public exportCsv() {\n    console.log(\"exp csv\")\n    let obj:Record> = {};\n    for (let dataset of this.chartObject.datasets) {\n      obj[dataset.name] = dataset.chartDataset.data\n    }\n    this.http.post(AppConfig.apiUrl + \"/storeCsv\", obj, { responseType: 'text' })\n      .subscribe(\n        (val) => {\n          this.toastr.success('CSV exported');\n       },\n        response => {\n         this.toastr.error(response, \"Could not export CSV\");\n        });\n  }\n\n  /**\n  * halts / resumes adding of values to the graph.\n  */\n  public togglePlay() {\n    //console.log(\"play called\")\n    if (!this.paused) {\n      this.paused = true;\n      this.subscription.unsubscribe();\n      this.measurementUpdateService.notifyUnsubscribe();\n    } else {\n      this.paused = false;\n      this.subscription = this.measurementUpdateService.getVoltageUpdateObs(this.chartObject.chartId)\n                                                    .subscribe(data => this.addDataToChart(data));\n      this.measurementUpdateService.notifySubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n      \n\n        \n          {{chartObject.name}}\n        \n\n\n        \n          \n\n            \n\n          \n\n          \n            \n            \n          \n\n          \n\n            \n              Toggle Dropright\n              \n              \n            \n            \n              Actions\n              Export as Image\n              Export as CSV \n            \n          \n        \n      \n    \n\n\n    \n      {{ chartLine }}\n    \n\n    \n      \n        \n           {{dataset.name}}  : {{dataset.chartDataset.currValue}} {{dataset.unit}}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./chart.component.css\n                \n                @media screen and (max-width: 850px) {\n  .card-body {\n    max-width: 85vw;\n    margin-left: 6vw;\n  }\n}\n\n.chart-container {\n  position: relative;\n  margin: none;\n  height: 70%;\n  width: 100%;\n}\n\n.dropdown-toggle::after {\n  display: none !important;\n}\n\n.dropdown-toggle {\n  margin-left: 2px;\n  background-color: white;\n  color: gray;\n  border: 0px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{chartObject.name}}                                                                                                                                Toggle Dropright                                                                  Actions              Export as Image              Export as CSV                                                   {{ chartLine }}                                 {{dataset.name}}  : {{dataset.chartDataset.currValue}} {{dataset.unit}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartFormComponent', 'selector': 'app-chart-form'},{'name': 'ConfirmDialog', 'selector': 'app-confirm-dialog'},{'name': 'ControlSliderComponent', 'selector': 'app-control-slider'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GeneralSettingsComponent', 'selector': 'app-general-settings'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MDashboardComponent', 'selector': 'app-m-dashboard'},{'name': 'MeasurementConfigurationComponent', 'selector': 'app-measurement-config'},{'name': 'MenuListItemComponent', 'selector': 'app-menu-list-item'},{'name': 'MyNavComponent', 'selector': 'app-my-nav'},{'name': 'PowerOffDialog', 'selector': 'app-power_off_dialog'},{'name': 'SupplyVoltagesComponent', 'selector': 'app-supply-voltages'},{'name': 'VideostreamComponent', 'selector': 'app-videostream'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChartDataset.html":{"url":"interfaces/ChartDataset.html","title":"interface - ChartDataset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ChartDataset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/chartDataset.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a Dataset that will be added to a graph\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autoLabel\n                                \n                                \n                                            Optional\n                                        autoRange\n                                \n                                \n                                        chartDataset\n                                \n                                \n                                        customDataHandlerEnabled\n                                \n                                \n                                        datasetId\n                                \n                                \n                                            Optional\n                                        handler\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        negRange\n                                \n                                \n                                        sourceId\n                                \n                                \n                                        unit\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoLabel\n                                    \n                                \n                                \n                                    \n                                        autoLabel:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Flag if label should be automatically generated from datasetName + unit\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        autoRange\n                                    \n                                \n                                \n                                    \n                                        autoRange:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Flag if range of axis should be automatically set to max values of current range\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        chartDataset\n                                    \n                                \n                                \n                                    \n                                        chartDataset:         ChartJsDataset\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ChartJsDataset\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Options for the Dataset that will be be submitted to the chart.js object\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customDataHandlerEnabled\n                                    \n                                \n                                \n                                    \n                                        customDataHandlerEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Flag to enable custom function on data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        datasetId\n                                    \n                                \n                                \n                                    \n                                        datasetId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID of the dataset. must be unique\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handler\n                                    \n                                \n                                \n                                    \n                                        handler:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Function to transform measurement data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Custom name for the dataset. Will be its label if option is set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        negRange\n                                    \n                                \n                                \n                                    \n                                        negRange:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Also show negative values. Only useful if autoRange is set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceId\n                                    \n                                \n                                \n                                    \n                                        sourceId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unit\n                                    \n                                \n                                \n                                    \n                                        unit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unit of the dataset\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ChartDataset {\n  /**\n  * ID of the dataset. must be unique\n  */\n  datasetId:string,\n  /*\n  * id of the sourcedevice. must correspond to a measurment ID.\n  */\n  sourceId:string,\n  /**\n  * Custom name for the dataset. Will be its label if option is set.\n  */\n  name:string,\n  /**\n  * Unit of the dataset\n  */\n  unit:string,\n  /**\n  * Function to transform measurement data\n  */\n  handler?:string,\n  /**\n  * Flag to enable custom function on data\n  */\n  customDataHandlerEnabled:boolean,\n\n  /**\n  * Options for the Dataset that will be be submitted to the chart.js object\n  */\n  chartDataset:ChartJsDataset,\n\n  /**\n  * Flag if label should be automatically generated from datasetName + unit\n  */\n  autoLabel?:boolean,\n  /**\n  * Flag if range of axis should be automatically set to max values of current range\n  */\n  autoRange?:boolean,\n\n  /**\n  * Also show negative values. Only useful if autoRange is set.\n  */\n  negRange?:boolean,\n\n}\n\nexport interface ChartJsDataset {\n  /**\n  * fill area under chart. default false\n  */\n  fill?:boolean,\n  /**\n  * Hex String. Defines color of line in chart\n  */\n  borderColor?:string,\n  /**\n  * Label of the dataset. if autoLabel is set, this will be set automatically\n  */\n  label?:string,\n  /**\n  * ID of the yAxis that belongs to this dataset\n  */\n  yAxisID?:string,\n\n  /**\n  * datapoints of the dataset. will be set programmatically\n  */\n  data? : Array,\n  /**\n  * Current value of this dataset, will be set programmatically\n  */\n  currValue? :number,\n  /**\n  * Private value for chart.js\n  */\n  _meta? : any\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChartFormComponent.html":{"url":"components/ChartFormComponent.html","title":"component - ChartFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChartFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/chart-form/chart-form.component.ts\n\n\n    \n        Description\n    \n    \n        Component to add / edit and delete charts from the dashboard\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chart-form\n            \n\n            \n                styleUrls\n                ./chart-form.component.css\n            \n\n\n\n            \n                templateUrl\n                ./chart-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                chartObjects\n                            \n                            \n                                    Public\n                                devices\n                            \n                            \n                                    Public\n                                selectedDeviceNumb\n                            \n                            \n                                    Public\n                                selectedObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addAxis\n                            \n                            \n                                    Public\n                                addChart\n                            \n                            \n                                    Public\n                                addDataset\n                            \n                            \n                                    Public\n                                deleteAxis\n                            \n                            \n                                    Public\n                                deleteChart\n                            \n                            \n                                    Public\n                                deleteDataset\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                storeSettings\n                            \n                            \n                                    Public\n                                updateSelectedDevice\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/chart-form/chart-form.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addAxis\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addAxis()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chart-form/chart-form.component.ts:79\n                \n            \n\n\n            \n                \n                    Adds a new axis to the selected chartobject\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addChart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chart-form/chart-form.component.ts:128\n                \n            \n\n\n            \n                \n                    Adds a new chartobject to the array\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addDataset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addDataset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chart-form/chart-form.component.ts:94\n                \n            \n\n\n            \n                \n                    Adds a new dataset to the selected chartobject. Datasetid is the current timestamp\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteAxis\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAxis(axis: ChartAxis)\n                \n            \n\n\n            \n                \n                    Defined in src/app/chart-form/chart-form.component.ts:67\n                \n            \n\n\n            \n                \n                    Deletes a axis that belongs to a chart object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    axis\n                                    \n                                                ChartAxis\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteChart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chart-form/chart-form.component.ts:111\n                \n            \n\n\n            \n                \n                    Deletes the currently selected chart object\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteDataset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteDataset(datasetId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/chart-form/chart-form.component.ts:156\n                \n            \n\n\n            \n                \n                    Deltes a dataset from the currently selected chart.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    datasetId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the id of the dataset which should be removed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chart-form/chart-form.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            storeSettings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    storeSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chart-form/chart-form.component.ts:47\n                \n            \n\n\n            \n                \n                    Sends changes on chart array to the backend.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateSelectedDevice\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSelectedDevice()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chart-form/chart-form.component.ts:148\n                \n            \n\n\n            \n                \n                    Change the selected chartObject. Triggered whenever dropdown selection (selectedDeviceNumb) changes\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            chartObjects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chart-form/chart-form.component.ts:21\n                            \n                        \n\n                \n                    \n                        Array containing all charts shown in dashboard\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            devices\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chart-form/chart-form.component.ts:33\n                            \n                        \n\n                \n                    \n                        Array containing all avaiable measurement device\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedDeviceNumb\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chart-form/chart-form.component.ts:29\n                            \n                        \n\n                \n                    \n                        index of the currently selected deice\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChartObject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chart-form/chart-form.component.ts:25\n                            \n                        \n\n                \n                    \n                        Object that is currently selected in the frontend\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AppConfig } from '../_services/app.config';\nimport { ChartObject, ChartAxis } from '../_models/chartObject.model';\nimport { HttpClient } from '@angular/common/http';\nimport { ToastrService } from 'ngx-toastr';\nimport { MeasurementDevice } from '../_models/app-config.model';\n\n/**\n* Component to add / edit and delete charts from the dashboard\n*/\n@Component({\n  selector: 'app-chart-form',\n  templateUrl: './chart-form.component.html',\n  styleUrls: ['./chart-form.component.css']\n})\nexport class ChartFormComponent implements OnInit {\n\n  /**\n  * Array containing all charts shown in dashboard\n  */\n  public chartObjects: Array;\n  /**\n  * Object that is currently selected in the frontend\n  */\n  public selectedObject: ChartObject;\n  /**\n  * index of the currently selected deice\n  */\n  public selectedDeviceNumb: number = 0;\n  /**\n  * Array containing all avaiable measurement device\n  */\n  public devices: Array;\n\n\n  constructor(private http: HttpClient, private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.chartObjects = AppConfig.settings.charts;\n    this.selectedObject = this.chartObjects[0];\n    this.devices = AppConfig.settings.devices;\n  }\n\n  /**\n  * Sends changes on chart array to the backend.\n  */\n  public storeSettings() {\n    // Remove pirvate values before storing config.\n    AppConfig.clear();\n    this.http.post(AppConfig.apiUrl + \"/update/chartConfig\", this.chartObjects, { responseType: 'text' })\n      .subscribe(\n        (val) => {\n          console.log(\"POST call successful value returned in body\",\n            val);\n          this.toastr.success('Changes stored successfully');\n        },\n        response => {\n          console.log(response)\n          this.toastr.error(response, \"Could not store changes\");\n        });\n\n  }\n\n  /**\n  * Deletes a axis that belongs to a chart object.\n  */\n  public deleteAxis(axis: ChartAxis) {\n    for (let i = 0; i  0) {\n      this.selectedObject = this.chartObjects[0]\n    } else {\n      this.chartObjects = undefined;\n    }\n  }\n\n  /**\n  * Adds a new chartobject to the array\n  */\n  public addChart() {\n    let chart = {\n      chartId: \"chart\" + new Date().getTime(),\n      maxValues: 20,\n      datasets: [],\n      name: \"new Chart\",\n      col: {\n        lg: 6,\n        md: 12,\n        sm: 12,\n        xs: 12\n      },\n    }\n    this.chartObjects.push(chart);\n    this.selectedObject = chart;\n  }\n\n  /**\n  * Change the selected chartObject. Triggered whenever dropdown selection (selectedDeviceNumb) changes\n  */\n  public updateSelectedDevice() {\n    this.selectedObject = this.chartObjects[this.selectedDeviceNumb];\n  }\n\n  /**\n  * Deltes a dataset from the currently selected chart.\n  * @param {string} datasetId the id of the dataset which should be removed\n  */\n  public deleteDataset(datasetId:string) {\n    for (let i = 0; i \n    \n\n    \n        \n  \n    \n\n\n       \n      \n        \n          \n\n            \n              Chart Settings\n            \n\n            \n              Chart:\n            \n            \n              {{chart.name}}\n            \n            \n              \n                \n                  add\n                 Add Chart\n              \n            \n\n          \n\n        \n        \n\n\n\n          \n            \n              Chart Name \n              \n                \n              \n              Values in Graph \n              \n                \n              \n            \n\n             Axes \n\n            \n              Axis ID \n              \n                \n              \n              Position\n              \n                \n                  Left\n                  Right\n\n                \n              \n              \n                \n                  \n                    delete\n                  \n                \n              \n              \n                \n                  \n                    add\n                  \n                \n              \n            \n\n\n\n             Datasets \n\n\n            \n              \n                \n                  \n                    {{dataset.name}}\n                  \n                  \n                    {{dataset.sourceId}} Unit: {{dataset.unit}}\n                  \n                \n\n                \n\n\n                  \n                    Name\n                    \n                      \n                    \n                  \n\n                  \n                    Unit\n                    \n                      \n                    \n                  \n\n\n                  \n                    Axis\n                    \n                      \n                        {{axis.id}}\n                      \n                    \n                  \n\n\n                  \n                    Auto Label\n                    \n                      \n                    \n                    Auto Range\n\n                    \n                      \n                    \n                    Neg. Range\n\n                    \n                      \n                    \n                  \n\n\n                  \n                    Voltage Measurement Device\n                    \n                      \n                        {{device.deviceId}}\n                      \n                    \n                  \n\n                  \n                    Color\n                    \n                      \n                    \n                  \n                  \n                    Apply function\n                    \n                      \n                       \n                    \n                  \n                  \n                     Delete dataset \n                  \n                \n              \n            \n            \n              \n                \n                  \n                    add\n                   Add Dataset\n                \n\n              \n            \n\n            \n              \n                \n                  \n                    delete\n                   Delete Chart\n                \n              \n\n            \n\n          \n        \n      \n      \n         Store changes\n      \n    \n\n  \n\n\n\n\n\n    \n\n    \n                \n                    ./chart-form.component.css\n                \n                .big-checkbox {\n  width: 20px;\n  height: 20px;\n  left: -3px\n}\n\n.chart-spacer {\n  height: 5px;\n}\n\n.chart-selection {\n  height: 35px;\n}\n\n.card-header {\n  padding-bottom: 0px;\n}\n\n.card-header label {\n  margin-top: 5px;\n}\n\n.card-header .form-group {\n  margin-bottom: 0px;\n}\n\n.nopad {\n  padding: 0px !important;\n  margin: 0px !important;\n}\n\n.btn-slim {\n  margin: 1px !important;\n}\n\n.dataset-btn {\n  margin-top: 20px;\n}\n\n.btn-label {\n  position: relative;\n  left: -12px;\n  display: inline-block;\n  padding: 6px 12px;\n  background: rgba(0, 0, 0, 0.15);\n  border-radius: 3px 0 0 3px;\n}\n\n.btn-labeled {\n  padding-top: 0;\n  padding-bottom: 0;\n}\n\n.btn {\n  margin-bottom: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                               Chart Settings                                      Chart:                                      {{chart.name}}                                                                        add                 Add Chart                                                                                        Chart Name                                                           Values in Graph                                                                      Axes                           Axis ID                                                           Position                                                Left                  Right                                                                                                  delete                                                                                                                    add                                                                         Datasets                                                                                 {{dataset.name}}                                                        {{dataset.sourceId}} Unit: {{dataset.unit}}                                                                                        Name                                                                                                                      Unit                                                                                                                      Axis                                                                  {{axis.id}}                                                                                                  Auto Label                                                                                  Auto Range                                                                                  Neg. Range                                                                                                                      Voltage Measurement Device                                                                  {{device.deviceId}}                                                                                                  Color                                                                                                                      Apply function                                                                                                                                              Delete dataset                                                                                                                                             add                   Add Dataset                                                                                                                          delete                   Delete Chart                                                                                 Store changes            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartFormComponent', 'selector': 'app-chart-form'},{'name': 'ConfirmDialog', 'selector': 'app-confirm-dialog'},{'name': 'ControlSliderComponent', 'selector': 'app-control-slider'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GeneralSettingsComponent', 'selector': 'app-general-settings'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MDashboardComponent', 'selector': 'app-m-dashboard'},{'name': 'MeasurementConfigurationComponent', 'selector': 'app-measurement-config'},{'name': 'MenuListItemComponent', 'selector': 'app-menu-list-item'},{'name': 'MyNavComponent', 'selector': 'app-my-nav'},{'name': 'PowerOffDialog', 'selector': 'app-power_off_dialog'},{'name': 'SupplyVoltagesComponent', 'selector': 'app-supply-voltages'},{'name': 'VideostreamComponent', 'selector': 'app-videostream'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChartFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChartJsDataset.html":{"url":"interfaces/ChartJsDataset.html","title":"interface - ChartJsDataset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ChartJsDataset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/chartDataset.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        _meta\n                                \n                                \n                                            Optional\n                                        borderColor\n                                \n                                \n                                            Optional\n                                        currValue\n                                \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        fill\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                            Optional\n                                        yAxisID\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _meta\n                                    \n                                \n                                \n                                    \n                                        _meta:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Private value for chart.js\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        borderColor\n                                    \n                                \n                                \n                                    \n                                        borderColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Hex String. Defines color of line in chart\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currValue\n                                    \n                                \n                                \n                                    \n                                        currValue:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Current value of this dataset, will be set programmatically\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    datapoints of the dataset. will be set programmatically\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fill\n                                    \n                                \n                                \n                                    \n                                        fill:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    fill area under chart. default false\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Label of the dataset. if autoLabel is set, this will be set automatically\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yAxisID\n                                    \n                                \n                                \n                                    \n                                        yAxisID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ID of the yAxis that belongs to this dataset\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ChartDataset {\n  /**\n  * ID of the dataset. must be unique\n  */\n  datasetId:string,\n  /*\n  * id of the sourcedevice. must correspond to a measurment ID.\n  */\n  sourceId:string,\n  /**\n  * Custom name for the dataset. Will be its label if option is set.\n  */\n  name:string,\n  /**\n  * Unit of the dataset\n  */\n  unit:string,\n  /**\n  * Function to transform measurement data\n  */\n  handler?:string,\n  /**\n  * Flag to enable custom function on data\n  */\n  customDataHandlerEnabled:boolean,\n\n  /**\n  * Options for the Dataset that will be be submitted to the chart.js object\n  */\n  chartDataset:ChartJsDataset,\n\n  /**\n  * Flag if label should be automatically generated from datasetName + unit\n  */\n  autoLabel?:boolean,\n  /**\n  * Flag if range of axis should be automatically set to max values of current range\n  */\n  autoRange?:boolean,\n\n  /**\n  * Also show negative values. Only useful if autoRange is set.\n  */\n  negRange?:boolean,\n\n}\n\nexport interface ChartJsDataset {\n  /**\n  * fill area under chart. default false\n  */\n  fill?:boolean,\n  /**\n  * Hex String. Defines color of line in chart\n  */\n  borderColor?:string,\n  /**\n  * Label of the dataset. if autoLabel is set, this will be set automatically\n  */\n  label?:string,\n  /**\n  * ID of the yAxis that belongs to this dataset\n  */\n  yAxisID?:string,\n\n  /**\n  * datapoints of the dataset. will be set programmatically\n  */\n  data? : Array,\n  /**\n  * Current value of this dataset, will be set programmatically\n  */\n  currValue? :number,\n  /**\n  * Private value for chart.js\n  */\n  _meta? : any\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChartObject.html":{"url":"interfaces/ChartObject.html","title":"interface - ChartObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ChartObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/chartObject.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface defining a ChartObject stored in settings\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        axes\n                                \n                                \n                                        chartId\n                                \n                                \n                                        datasets\n                                \n                                \n                                        maxValues\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        options\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        axes\n                                    \n                                \n                                \n                                    \n                                        axes:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Different y Axis that are on this chart\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        chartId\n                                    \n                                \n                                \n                                    \n                                        chartId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID, must be unique\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        datasets\n                                    \n                                \n                                \n                                    \n                                        datasets:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Array containing all Datasets that belong to this Chart\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxValues\n                                    \n                                \n                                \n                                    \n                                        maxValues:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Max number of values on graph.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the chart (Title)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom chart options (See Chart.js documentation). These will overwrite the objects from general config\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChartDataset } from './chartDataset.model';\n\n/**\n* Interface defining a ChartObject stored in settings\n*/\nexport interface ChartObject {\n  /**\n  * Max number of values on graph.\n  */\n  maxValues: number;\n  /**\n  * Name of the chart (Title)\n  */\n  name:string,\n  /**\n  * Array containing all Datasets that belong to this Chart\n  */\n  datasets: Array,\n  /**\n  * ID, must be unique\n  */\n  chartId:string,\n  /**\n  * Custom chart options (See Chart.js documentation). These will overwrite the objects from general config\n  */\n  options?:any,\n\n  /**\n  * Different y Axis that are on this chart\n  */\n  axes?: Array\n}\n\n/**\n* Interface to define different axes on this chart.\n*/\nexport interface ChartAxis {\n  /**\n  * Position of the axis \n  */\n  position:string,\n  /**\n  * Unique ID for this axis.\n  */\n  id: string\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmDialog.html":{"url":"components/ConfirmDialog.html","title":"component - ConfirmDialog","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/supply-voltages/supply-voltages.component.ts\n\n\n    \n        Description\n    \n    \n        General Dialog used to show and confirm changes to an object.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-dialog\n            \n\n\n\n\n            \n                templateUrl\n                ./confirm-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onNoClick\n                            \n                            \n                                    Public\n                                onYesClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, dialogRef: MatDialogRef, data: ConfirmationDialogData, toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/supply-voltages/supply-voltages.component.ts:41\n                            \n                        \n\n                \n                    \n                            Creates the dialog.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                httpclient used to send api requests to the backend\n\n                                                        \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                reference to show the dialog\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ConfirmationDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Data containing the changes the user needs to confirm.\n\n                                                        \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onNoClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/supply-voltages/supply-voltages.component.ts:59\n                \n            \n\n\n            \n                \n                    If no is clicked , close dialog and notify listeners\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onYesClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onYesClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/supply-voltages/supply-voltages.component.ts:66\n                \n            \n\n\n            \n                \n                    Calls backendPath with the submit object. Shows notification to inform if request was successful\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfirmationDialogData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/supply-voltages/supply-voltages.component.ts:52\n                            \n                        \n\n                \n                    \n                        Data containing the changes the user needs to confirm.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/supply-voltages/supply-voltages.component.ts:51\n                            \n                        \n\n                \n                    \n                        reference to show the dialog\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/supply-voltages/supply-voltages.component.ts:50\n                            \n                        \n\n                \n                    \n                        httpclient used to send api requests to the backend\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { AppConfig } from '../_services/app.config';\nimport { IAppConfig } from '../_models/app-config.model';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { VarSupply } from '../_models/varSupply.model';\nimport { HttpClient} from '@angular/common/http';\nimport { ToastrService } from 'ngx-toastr';\n\n\n/**\n* Inteface used to define the structure of the data that is shown in the confirmationdialog\n*/\ninterface ConfirmationDialogData {\n  /**\n  * Array containing name, oldValue and newValue information. These information will be shown like follows:\n  * @example\n  * [name] : [oldValue] -> [newValue]\n  */\n    values: Array,\n    /**\n    * The Object that gets send to the backend if the dialog is confirmed.\n    *  this will be the content of the post request\n    */\n    submitObject: any,\n    /**\n    *  The part of the url following the /api  which will get called if the dialog is confirmed\n    */\n    callPath: string\n}\n/**\n* General Dialog used to show and confirm changes to an object.\n*/\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n})\nexport class ConfirmDialog {\n\n  /**\n  * Creates the dialog.\n  * @param {HttpClient} http httpclient used to send api requests to the backend\n  * @param {MatDialogRef} dialogRef reference to show the dialog\n  * @param{ConfirmationDialogData} data Data containing the changes the user needs to confirm.\n  */\n  constructor(\n    public http: HttpClient,\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: ConfirmationDialogData,\n    private toastr: ToastrService\n  ) { }\n\n  /**\n  * If no is clicked , close dialog and notify listeners\n  */\n  public onNoClick(): void {\n    this.dialogRef.close(false);\n  }\n\n  /**\n  * Calls backendPath with the submit object. Shows notification to inform if request was successful\n  */\n  public onYesClick(): void {\n    this.http.post(AppConfig.apiUrl + this.data.callPath, this.data.submitObject, { responseType: 'text' })\n      .subscribe(\n        (val) => {\n          console.log(\"POST call successful value returned in body\",\n            val);\n          this.toastr.success('Values set successfully');\n          this.dialogRef.close(true);\n        },\n        response => {\n          console.log(response)\n          this.toastr.error(response, \"Could not set Values\");\n          this.dialogRef.close(false);\n        });\n  }\n}\n\n\n\n\n/**\n* Component used to configure the different supply voltages on the board. \n* Lets the user disable/enable different supplies and choose their voltages\n*/\n@Component({\n  selector: 'app-supply-voltages',\n  templateUrl: './supply-voltages.component.html',\n  styleUrls: ['./supply-voltages.component.css']\n})\nexport class SupplyVoltagesComponent implements OnInit {\n  /**\n  * Object containing the settings object.\n  */\n  public settings: IAppConfig;\n\n  constructor(public dialog: MatDialog) { }\n\n  /**\n  * Opens the confirmation dialog to make sure if the user wants to make the changes\n  */\n  public openDialog(): void {\n    // Map supplies obejct to list with old and new value which will be displayed in the dialog\n    let updates = this.settings.supplies.map(supply => {\n      if (supply.enabled) {\n        return {\n          name: supply.name,\n          oldValue: supply.currentVoltage,\n          newValue: supply.desiredVoltage\n        };\n      }\n      return {\n        name: supply.name,\n        oldValue: supply.currentVoltage,\n        newValue: \"Disabled\"\n      };\n    });\n\n    this.dialog.open(ConfirmDialog, {\n      width: '400px',\n      data: { values: updates, submitObject: this.settings.supplies, callPath: \"/updateDeviceVoltages\" }\n    });\n  }\n\n  /**\n  * Checks if the inputs are valid and can be set\n  */\n  get validInputs(): boolean {\n    for (let device of this.settings.supplies) {\n      if (device.desiredVoltage  device.maxValue) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n\n  ngOnInit() {\n    this.settings = AppConfig.settings;\n  }\n\n  /**\n  * @ignore\n  */\n  onSubmit() {\n    for (let sup of this.settings.supplies) {\n      if (sup.maxValueChecked) {\n        sup.desiredVoltage = sup.maxFix;\n      }\n    }\n    this.openDialog();\n  }\n}\n\n    \n\n    \n        Are you sure you want to submit these changes ?\n\n  \n    \n      {{item.name}}\n\n    \n    \n      {{item.oldValue}}\n      \n        trending_flat\n      \n      {{item.newValue}}\n    \n  \n\n\n\n\n  Cancel\nSet Values\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Are you sure you want to submit these changes ?            {{item.name}}              {{item.oldValue}}              trending_flat            {{item.newValue}}        CancelSet Values'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartFormComponent', 'selector': 'app-chart-form'},{'name': 'ConfirmDialog', 'selector': 'app-confirm-dialog'},{'name': 'ControlSliderComponent', 'selector': 'app-control-slider'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GeneralSettingsComponent', 'selector': 'app-general-settings'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MDashboardComponent', 'selector': 'app-m-dashboard'},{'name': 'MeasurementConfigurationComponent', 'selector': 'app-measurement-config'},{'name': 'MenuListItemComponent', 'selector': 'app-menu-list-item'},{'name': 'MyNavComponent', 'selector': 'app-my-nav'},{'name': 'PowerOffDialog', 'selector': 'app-power_off_dialog'},{'name': 'SupplyVoltagesComponent', 'selector': 'app-supply-voltages'},{'name': 'VideostreamComponent', 'selector': 'app-videostream'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfirmationDialogData.html":{"url":"interfaces/ConfirmationDialogData.html","title":"interface - ConfirmationDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConfirmationDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/supply-voltages/supply-voltages.component.ts\n        \n\n            \n                Description\n            \n            \n                Inteface used to define the structure of the data that is shown in the confirmationdialog\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        callPath\n                                \n                                \n                                        submitObject\n                                \n                                \n                                        values\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callPath\n                                    \n                                \n                                \n                                    \n                                        callPath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The part of the url following the /api  which will get called if the dialog is confirmed\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitObject\n                                    \n                                \n                                \n                                    \n                                        submitObject:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The Object that gets send to the backend if the dialog is confirmed.\n this will be the content of the post request\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                    \n                                \n                                \n                                    \n                                        values:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Array containing name, oldValue and newValue information. These information will be shown like follows:\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { AppConfig } from '../_services/app.config';\nimport { IAppConfig } from '../_models/app-config.model';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { VarSupply } from '../_models/varSupply.model';\nimport { HttpClient} from '@angular/common/http';\nimport { ToastrService } from 'ngx-toastr';\n\n\n/**\n* Inteface used to define the structure of the data that is shown in the confirmationdialog\n*/\ninterface ConfirmationDialogData {\n  /**\n  * Array containing name, oldValue and newValue information. These information will be shown like follows:\n  * @example\n  * [name] : [oldValue] -> [newValue]\n  */\n    values: Array,\n    /**\n    * The Object that gets send to the backend if the dialog is confirmed.\n    *  this will be the content of the post request\n    */\n    submitObject: any,\n    /**\n    *  The part of the url following the /api  which will get called if the dialog is confirmed\n    */\n    callPath: string\n}\n/**\n* General Dialog used to show and confirm changes to an object.\n*/\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n})\nexport class ConfirmDialog {\n\n  /**\n  * Creates the dialog.\n  * @param {HttpClient} http httpclient used to send api requests to the backend\n  * @param {MatDialogRef} dialogRef reference to show the dialog\n  * @param{ConfirmationDialogData} data Data containing the changes the user needs to confirm.\n  */\n  constructor(\n    public http: HttpClient,\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: ConfirmationDialogData,\n    private toastr: ToastrService\n  ) { }\n\n  /**\n  * If no is clicked , close dialog and notify listeners\n  */\n  public onNoClick(): void {\n    this.dialogRef.close(false);\n  }\n\n  /**\n  * Calls backendPath with the submit object. Shows notification to inform if request was successful\n  */\n  public onYesClick(): void {\n    this.http.post(AppConfig.apiUrl + this.data.callPath, this.data.submitObject, { responseType: 'text' })\n      .subscribe(\n        (val) => {\n          console.log(\"POST call successful value returned in body\",\n            val);\n          this.toastr.success('Values set successfully');\n          this.dialogRef.close(true);\n        },\n        response => {\n          console.log(response)\n          this.toastr.error(response, \"Could not set Values\");\n          this.dialogRef.close(false);\n        });\n  }\n}\n\n\n\n\n/**\n* Component used to configure the different supply voltages on the board. \n* Lets the user disable/enable different supplies and choose their voltages\n*/\n@Component({\n  selector: 'app-supply-voltages',\n  templateUrl: './supply-voltages.component.html',\n  styleUrls: ['./supply-voltages.component.css']\n})\nexport class SupplyVoltagesComponent implements OnInit {\n  /**\n  * Object containing the settings object.\n  */\n  public settings: IAppConfig;\n\n  constructor(public dialog: MatDialog) { }\n\n  /**\n  * Opens the confirmation dialog to make sure if the user wants to make the changes\n  */\n  public openDialog(): void {\n    // Map supplies obejct to list with old and new value which will be displayed in the dialog\n    let updates = this.settings.supplies.map(supply => {\n      if (supply.enabled) {\n        return {\n          name: supply.name,\n          oldValue: supply.currentVoltage,\n          newValue: supply.desiredVoltage\n        };\n      }\n      return {\n        name: supply.name,\n        oldValue: supply.currentVoltage,\n        newValue: \"Disabled\"\n      };\n    });\n\n    this.dialog.open(ConfirmDialog, {\n      width: '400px',\n      data: { values: updates, submitObject: this.settings.supplies, callPath: \"/updateDeviceVoltages\" }\n    });\n  }\n\n  /**\n  * Checks if the inputs are valid and can be set\n  */\n  get validInputs(): boolean {\n    for (let device of this.settings.supplies) {\n      if (device.desiredVoltage  device.maxValue) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n\n  ngOnInit() {\n    this.settings = AppConfig.settings;\n  }\n\n  /**\n  * @ignore\n  */\n  onSubmit() {\n    for (let sup of this.settings.supplies) {\n      if (sup.maxValueChecked) {\n        sup.desiredVoltage = sup.maxFix;\n      }\n    }\n    this.openDialog();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ControlSliderComponent.html":{"url":"components/ControlSliderComponent.html","title":"component - ControlSliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ControlSliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/supply-voltages/control-slider/control-slider.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to create a slider with arrows on the side, to select a voltage for var supplies. \n[]\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-control-slider\n            \n\n            \n                styleUrls\n                ./control-slider.component.css\n            \n\n\n\n            \n                templateUrl\n                ./control-slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                supply\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addToSlider\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                subFromSlider\n                            \n                            \n                                    Public\n                                toggleEnabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                deviceId\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    checkInput\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/supply-voltages/control-slider/control-slider.component.ts:24\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        deviceId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/supply-voltages/control-slider/control-slider.component.ts:24\n                            \n                        \n                \n                    \n                        index of the supply in config array\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addToSlider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addToSlider()\n                \n            \n\n\n            \n                \n                    Defined in src/app/supply-voltages/control-slider/control-slider.component.ts:43\n                \n            \n\n\n            \n                \n                    gets called when arrow right (add) button is pressed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/supply-voltages/control-slider/control-slider.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            subFromSlider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    subFromSlider()\n                \n            \n\n\n            \n                \n                    Defined in src/app/supply-voltages/control-slider/control-slider.component.ts:50\n                \n            \n\n\n            \n                \n                    gets called when arrow left (subtract) button is pressed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleEnabled\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleEnabled()\n                \n            \n\n\n            \n                \n                    Defined in src/app/supply-voltages/control-slider/control-slider.component.ts:36\n                \n            \n\n\n            \n                \n                    Disables / enables the supply\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            supply\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         VarSupply\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/supply-voltages/control-slider/control-slider.component.ts:18\n                            \n                        \n\n                \n                    \n                        The var supply which is controlled by this slider. gets set programatically\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        checkInput\n                    \n                \n\n                \n                    \n                        getcheckInput()\n                    \n                \n                            \n                                \n                                    Defined in src/app/supply-voltages/control-slider/control-slider.component.ts:30\n                                \n                            \n                    \n                        \n                                Checks if selected value from slider is in selecetable range\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit,Input } from '@angular/core';\nimport { AppConfig } from '../../_services/app.config'\nimport { VarSupply } from '../../_models/varSupply.model';\n\n/**\n* Component used to create a slider with arrows on the side, to select a voltage for var supplies. \n* []\n*/\n@Component({\n  selector: 'app-control-slider',\n  templateUrl: './control-slider.component.html',\n  styleUrls: ['./control-slider.component.css']\n})\nexport class ControlSliderComponent implements OnInit {\n  /**\n  * The var supply which is controlled by this slider. gets set programatically\n  */\n  public supply: VarSupply;\n\n  /**\n  * index of the supply in config array\n  */\n  @Input()\n  private deviceId: number;\n  constructor() { }\n\n  /**\n  * Checks if selected value from slider is in selecetable range\n  */\n  get checkInput() {\n    return this.supply.maxValueChecked || (this.supply.desiredVoltage >= this.supply.minValue && this.supply.desiredVoltage  this.supply.minValue)\n      this.supply.desiredVoltage = Math.round( (this.supply.desiredVoltage - this.supply.stepSize )* 1000) / 1000;\n  }\n\n  ngOnInit() {\n    if(this.deviceId) {\n      this.supply = AppConfig.settings.supplies[this.deviceId];\n      this.supply.desiredVoltage = 0 + this.supply.currentVoltage;\n      this.supply.maxValueChecked = false;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      power_settings_new\n    \n  \n\n  \n    {{supply.name}}\n    \n      {{supply.unit}}\n    \n  \n\n  \n    \n\n    \n    \n      \n        \n          chevron_left\n        \n      \n      \n      \n      \n        \n          chevron_right\n        \n      \n\n    \n\n    \n      \n        \n      \n      {{supply.maxFix}}V\n\n\n    \n  \n\n\n    \n\n    \n                \n                    ./control-slider.component.css\n                \n                .control-slider-header {\n  padding-left: 10px;\n  padding-bottom: 4px;\n}\n\n.invalid {\n  border: 1px solid red;\n}\n\n.voltage-input {\n  background-color: transparent;\n  border: 0;\n  font-size: 1em;\n  width: 50px;\n}\n\n.output-voltage {\n  background: none;\n}\n\n.big-checkbox {\n  width: 20px;\n  height: 20px;\n  left: -3px\n}\n\n.maxValueCheckbox {\n  margin-top: 7px;\n}\n\n.maxValueCheckboxText {\n  margin-top: 4px;\n  margin-left: 2px;\n}\n\n.btn-circle {\n  width: 30px;\n  height: 30px;\n  padding: 6px 0px;\n  border-radius: 15px;\n  text-align: center;\n  font-size: 12px;\n  line-height: 1.42857;\n}\n\n.voltage-slider {\n  padding-left: 10px;\n  padding-right: 10px;\n  /* padding-top:5px;\n    padding-bottom: 7px;\n    margin-top:20px;\n    border:1px solid gray;\n    background-color:#fafafa; */\n}\n\n.slider-control {\n  border: 1px solid #efefef;\n  background-color: #fafafa;\n  margin-bottom: 5px;\n}\n\n.step-btn {\n  background-color: #e1e1e1;\n  line-height: 1.42857;\n  font-size: 14px;\n  //height:30px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            power_settings_new            {{supply.name}}          {{supply.unit}}                                            chevron_left                                                  chevron_right                                                {{supply.maxFix}}V      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartFormComponent', 'selector': 'app-chart-form'},{'name': 'ConfirmDialog', 'selector': 'app-confirm-dialog'},{'name': 'ControlSliderComponent', 'selector': 'app-control-slider'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GeneralSettingsComponent', 'selector': 'app-general-settings'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MDashboardComponent', 'selector': 'app-m-dashboard'},{'name': 'MeasurementConfigurationComponent', 'selector': 'app-measurement-config'},{'name': 'MenuListItemComponent', 'selector': 'app-menu-list-item'},{'name': 'MyNavComponent', 'selector': 'app-my-nav'},{'name': 'PowerOffDialog', 'selector': 'app-power_off_dialog'},{'name': 'SupplyVoltagesComponent', 'selector': 'app-supply-voltages'},{'name': 'VideostreamComponent', 'selector': 'app-videostream'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ControlSliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataEntry.html":{"url":"interfaces/DataEntry.html","title":"interface - DataEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/m-dashboard/chart/chart.component.ts\n        \n\n            \n                Description\n            \n            \n                Interfaces that defines the ResponseObject of the VoltageUpdate Subscription\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        max\n                                \n                                \n                                        unit\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        max\n                                    \n                                \n                                \n                                    \n                                        max:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Max Value that is possible to send in this resolution => used to scale the graph\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unit\n                                    \n                                \n                                \n                                    \n                                        unit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    e.g. V, mV, mA, uA\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The value for this measurement\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, AfterViewInit, Input, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { Chart } from 'chart.js';\nimport { MeasurementUpdateService } from '../../_services/MeasurementUpdateService';\nimport { AppConfig } from '../../_services/app.config';\n\nimport { ChartDataset } from '../../_models/chartDataset.model';\nimport { ChartObject } from '../../_models/chartObject.model';\nimport { HttpClient } from '@angular/common/http';\nimport { Subscription } from 'rxjs';\nimport { ToastrService } from 'ngx-toastr';\n\n\n\n\n/**\n* Interfaces that defines the ResponseObject of the VoltageUpdate Subscription\n*/\ninterface DataEntry {\n  /**\n  * Max Value that is possible to send in this resolution => used to scale the graph\n  */\n   max: number;\n   /**\n   * e.g. V, mV, mA, uA\n   */\n   unit:string;\n   /**\n   * The value for this measurement\n   */\n   value:number;\n}\n\nexport function scaleToSiUnit(data:DataEntry):number {\n      let unit = data.unit.charAt(0)\n      let multiplier = 1;\n\n      if (unit == \"m\") {\n        multiplier =  1/1000;\n      } else if(unit == \"u\") {\n        multiplier = 1/1000000\n      }\n      return data.value * multiplier;\n\n  }\n\n/**\n* Component that creates a chart graph with reload, pause and export button.\n* @example\n*\n* | ----------------------------------------------------------------|\n* |                                        [Play][Reload][export]   |\n* |        |---------------------------------|                      |\n* |        |                                 |                      |\n* |        |     Chart JS (chartObject)      |                      |\n* |        |                                 |                      |\n* |        |                                 |                      |\n* |        |---------------------------------|                      |\n* |                                                                 |\n* | ----------------------------------------------------------------|\n*\n*/\n@Component({\n  selector: 'app-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.css']\n})\n\nexport class ChartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  /**\n  * Object that stores custom transform function for every dataset.  \n  * This is used to created custom datasets. e.g. power calculation\n  */\n  private dataSetHandlerFunctions: Record number> = {}\n  /**\n  * the chartobject stored in the config which contains all the information about this chart. (name, datasets etc.)\n  */\n  @Input()\n  public chartObject: ChartObject;\n\n  /**\n  *  boolean that stores state of graph.\n  */\n  public paused: boolean = false;\n  // message: any;\n\n  private subscription: Subscription;\n\n  // public currValue: string;\n\n  /**\n  * Holds the real Chart.js chart objects.\n  */\n  public chartLine: Chart;\n\n  /**\n  * Defines how many decimal numbers we want to show.\n  */\n  private precision: number = Math.pow(10, 3);\n\n\n  /**\n  *  Contains the last resolution for every measurement in the graph. \n  *  Used to find resolution changes and rescale values\n  */\n  private lastResolution: Record = {}\n\n  /**\n  * Contains all the data that will be passed to the chart objects.\n  */\n  private data = {\n    labels: [\"\"],\n    datasets: []\n  };\n\n\n  /**\n  * Contains mapping axis id to axis position in chart.js options\n  */\n  idToYAxis:Record = {}\n\n  /**\n  * @param {MeasurementUpdateService} measurementUpdateService Service that polls every  and publishes new measurement values using observables\n  * @param {ChangeDetectorRef} cd Angular class to notify angular about frontend changes. Needed because the graph convas doesn't trigger changes on it's own when set up\n  * @param {HttpClient} http http client to communicate with backend\n  * @param {ToastrService} toastr Service used to create small notification on the screen\n  */\n  constructor(private measurementUpdateService: MeasurementUpdateService, private cd: ChangeDetectorRef, private http: HttpClient,  private toastr: ToastrService) { }\n\n  /**\n  * called when component is destroyed. Unsubscribes from VoltageUpdateSubscription\n  */\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  /**\n  * Sets up a subscription from measurementUpdateService. \n  */\n  private setUpSubscription() {\n\n    // Add all datasets to chart\n    for (let dataset of this.chartObject.datasets) {\n      this.addDatasetToChart(dataset);\n    }\n\n    // Every time a measurement update is triggered call addDataToChart function\n    this.subscription = this.measurementUpdateService.getVoltageUpdateObs(this.chartObject.chartId)\n                                                 .subscribe(data => this.addDataToChart(data));\n\n    // Notify service that we subscribed.\n    this.measurementUpdateService.notifySubscribe();\n  }\n\n  /**\n  * Called when component is created. Sets up a subscription from measurementUpdateService to get measurement Updates\n  */\n  ngOnInit() {\n    this.setUpSubscription()\n  }\n\n  /**\n  * After view element is created.  \n  *  Sets up Chart.js element (chartLine)\n  */\n  ngAfterViewInit() {\n    // load options from general config\n    let options = AppConfig.settings.general.chartOptions;\n\n    // Check if there are own options set for this particular graph.\n    if (this.chartObject.hasOwnProperty(\"options\")) {\n      options = this.chartObject.options;\n    }\n\n    this.setUpAxesConfig(options.scales.yAxes);\n\n    // Set up Chart.js chart\n    this.chartLine = new Chart(this.chartObject.chartId, {\n      type: 'line',\n      data: this.data,\n      options: options\n    });\n    // default value\n    this.paused = false;\n\n    // Notify angular that we changed stuff\n    this.cd.detectChanges();\n  }\n\n\n\n/**\n* Adds data obtained from measurementUpdateService to the graph. \n* @param { Record} data Record containg all measurements from backend\n*/\n  private addDataToChart(data: Record): void {\n\n    // Every dataset can decide which data it wants to use.\n    for (let dataset of this.chartObject.datasets) {\n\n      let datasetId = dataset.datasetId;\n      let unit = dataset.unit;\n\n      // get value from datasetHandlerFunction. Scale it to precision\n\n\n      let value = Math.round(this.dataSetHandlerFunctions[datasetId](data) * this.precision) / this.precision;\n\n      let lastUnit = this.lastResolution[dataset.datasetId];\n\n      if (!dataset.chartDataset.data) {\n        dataset.chartDataset.data = [];\n      }\n\n      // Check if units changed. If yes, rescale all old values.\n      let dataCount = dataset.chartDataset.data.length;\n      if (lastUnit  && lastUnit != \"\" && lastUnit != unit && dataCount) {\n          // We got a resolution change. Figure out if we need to down or upscale values\n          let multiplier = 1;\n          if (unit == \"mV\" || unit == \"uA\") {\n            // V -> mV\n            multiplier = 1000;\n          } else if (unit == \"V\" || unit == \"mA\") {\n            // mV -> V\n            multiplier = 1 / 1000;\n          }\n\n          // recalculate all old datas\n          for (let i = 0; i = this.chartObject.maxValues) {\n        dataset.chartDataset.data.shift();\n      }\n\n      // Create label from datasetName and unit if option is enabled\n      if (dataset.autoLabel) {\n        dataset.unit = data[dataset.sourceId].unit;\n        dataset.chartDataset.label = dataset.name + \"[\" + unit + \"]\";\n      }\n\n      // Rescale Axis\n      if (dataset.chartDataset.yAxisID && (dataset.autoRange || dataset.negRange)) {\n        // Get Axis from mapping\n        let axis = this.chartLine.options.scales.yAxes[this.idToYAxis[dataset.chartDataset.yAxisID]]\n        if (dataset.autoRange) {\n          axis.ticks.max = data[dataset.sourceId].max\n          axis.ticks.min = 0\n        }\n\n        if (dataset.negRange) {\n          axis.ticks.min = -data[dataset.sourceId].max;\n        }\n      }\n\n    }\n\n    // We need to push a label for the x-axis. in this case it is empty, so we do not write anything\n    // If nothing is pushed, graph won't show new values\n    this.data.labels.push('');\n\n    // shift labels if maxvalues reached\n    if (this.data.labels.length > this.chartObject.maxValues) {\n      this.data.labels.shift();\n    }\n\n    // notify update\n    this.chartLine.update()\n  }\n\n  /**\n  * Adds a new dataset to the chart.  Only call this function once when setting up a new dataset.\n  * @param {ChartDataset} dataset The Dataset object we want to add to the chart.\n  */\n  private addDatasetToChart(dataset: ChartDataset) {\n    // Register in lastResolution array\n    this.lastResolution[dataset.datasetId] = \"\";\n    // Register as a dataset for this graph\n    this.data.datasets.push(dataset.chartDataset);\n\n    // Set up custom handler function if this is a \"fake Dataset\".\n    if (dataset.customDataHandlerEnabled) {\n      this.dataSetHandlerFunctions[dataset.datasetId] = function(data: DataEntry) {\n\n        return eval(dataset.handler)\n        // return scaleToSiUnit(data['vm1']) * scaleToSiUnit(data['cm3']);\n      }\n    } else {\n      // just return the value.\n      this.dataSetHandlerFunctions[dataset.datasetId] = function(data: DataEntry) {\n        return data[dataset.sourceId].value;\n      }\n    }\n  }\n\n\n\n  /**\n  * Removes all points from Graph. \n  */\n  public clear() {\n    for (let dataset of this.chartObject.datasets) {\n      dataset.chartDataset.data = [];\n      this.lastResolution[dataset.datasetId] = \"\";\n    }\n\n    this.data.labels = [];\n    this.chartLine.update();\n\n    if (this.paused) {\n      this.togglePlay();\n    }\n  }\n\n  /**\n  * Exports the current graph as image. Sends image as base64 string to the backend.\n  */\n  public exportImage() {\n    this.http.post(AppConfig.apiUrl + \"/storeImage\", { \"image\": this.chartLine.ctx.canvas.toDataURL() }, { responseType: 'text' })\n      .subscribe(\n        (val) => {\n          this.toastr.success('Image exported');\n       },\n        response => {\n         this.toastr.error(response, \"Could not export Image\");\n        });\n  }\n\n\n\n  /**\n  * sets up the axis of the chart.\n  */\n  private setUpAxesConfig(axes:Array) {\n    axes.length = 0;\n\n    if(this.chartObject.axes) {\n      let i = 0;\n      for (let axis of this.chartObject.axes) {\n        var entry = {\n              id: axis.id,\n              type: \"linear\",\n              position: axis.position,\n              ticks: {}\n          }\n\n        axes.push(entry)\n        this.idToYAxis[axis.id] = i++;\n      }\n    }\n  }\n  /**\n  * TODO\n  */\n  public exportCsv() {\n    console.log(\"exp csv\")\n    let obj:Record> = {};\n    for (let dataset of this.chartObject.datasets) {\n      obj[dataset.name] = dataset.chartDataset.data\n    }\n    this.http.post(AppConfig.apiUrl + \"/storeCsv\", obj, { responseType: 'text' })\n      .subscribe(\n        (val) => {\n          this.toastr.success('CSV exported');\n       },\n        response => {\n         this.toastr.error(response, \"Could not export CSV\");\n        });\n  }\n\n  /**\n  * halts / resumes adding of values to the graph.\n  */\n  public togglePlay() {\n    //console.log(\"play called\")\n    if (!this.paused) {\n      this.paused = true;\n      this.subscription.unsubscribe();\n      this.measurementUpdateService.notifyUnsubscribe();\n    } else {\n      this.paused = false;\n      this.subscription = this.measurementUpdateService.getVoltageUpdateObs(this.chartObject.chartId)\n                                                    .subscribe(data => this.addDataToChart(data));\n      this.measurementUpdateService.notifySubscribe();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_helpers/error.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Listens for error answers. If we get a 401 err (not authorized) the jwt token is no longer valid and the user needs to be logged out.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/_helpers/error.interceptor.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_helpers/error.interceptor.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../_services';\n/**\n* Listens for error answers. If we get a 401 err (not authorized) the jwt token is no longer valid and the user needs to be logged out.\n*/\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) { }\n\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.authenticationService.logout();\n                //location.reload(true);\n            }\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GeneralSettingsComponent.html":{"url":"components/GeneralSettingsComponent.html","title":"component - GeneralSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GeneralSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/general-settings/general-settings.component.ts\n\n\n    \n        Description\n    \n    \n        Component to set general settings like screen brightness, hotspot options etc.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-general-settings\n            \n\n            \n                styleUrls\n                ./general-settings.component.css\n            \n\n\n\n            \n                templateUrl\n                ./general-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configObject\n                            \n                            \n                                    Public\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/general-settings/general-settings.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/general-settings/general-settings.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/general-settings/general-settings.component.ts:27\n                \n            \n\n\n            \n                \n                    Sends changes to the configObject file to the backend. \nShows a notification wheter or not it was possible\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    \"brightness\": 255\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/general-settings/general-settings.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/general-settings/general-settings.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AppConfig } from '../_services/app.config';\nimport { HttpClient } from '@angular/common/http';\nimport { ToastrService } from 'ngx-toastr';\n\n\n/**\n* Component to set general settings like screen brightness, hotspot options etc.\n*/\n@Component({\n  selector: 'app-general-settings',\n  templateUrl: './general-settings.component.html',\n  styleUrls: ['./general-settings.component.css']\n})\nexport class GeneralSettingsComponent implements OnInit {\n  configObject = {\n    \"brightness\": 255\n  }\n  constructor(public http: HttpClient,private toastr: ToastrService) { }\n\n  ngOnInit() {}\n\n  /**\n  * Sends changes to the configObject file to the backend. \n  * Shows a notification wheter or not it was possible\n  */\n  public submit() {\n    this.http.post(AppConfig.apiUrl + \"/updateGeneralSettings\", this.configObject, { responseType: 'text' })\n      .subscribe(\n        (val) => {\n          console.log(\"POST call successful value returned in body\",\n            val);\n          this.toastr.success('Values set successfully');\n\n        },\n        response => {\n          console.log(response)\n          this.toastr.error(response, \"Could not set Values\");\n        });\n\n  }\n\n}\n\n    \n\n    \n        \n\n   General \n  brightness:\n\n  \n  \n\n  Submit\n\n\n\n    \n\n    \n                \n                    ./general-settings.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   General   brightness:      Submit'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartFormComponent', 'selector': 'app-chart-form'},{'name': 'ConfirmDialog', 'selector': 'app-confirm-dialog'},{'name': 'ControlSliderComponent', 'selector': 'app-control-slider'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GeneralSettingsComponent', 'selector': 'app-general-settings'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MDashboardComponent', 'selector': 'app-m-dashboard'},{'name': 'MeasurementConfigurationComponent', 'selector': 'app-measurement-config'},{'name': 'MenuListItemComponent', 'selector': 'app-menu-list-item'},{'name': 'MyNavComponent', 'selector': 'app-my-nav'},{'name': 'PowerOffDialog', 'selector': 'app-power_off_dialog'},{'name': 'SupplyVoltagesComponent', 'selector': 'app-supply-voltages'},{'name': 'VideostreamComponent', 'selector': 'app-videostream'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GeneralSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAppConfig.html":{"url":"interfaces/IAppConfig.html","title":"interface - IAppConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAppConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/app-config.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for the app config.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        charts\n                                \n                                \n                                        deployment\n                                \n                                \n                                        devices\n                                \n                                \n                                        general\n                                \n                                \n                                        supplies\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        charts\n                                    \n                                \n                                \n                                    \n                                        charts:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Contains all the charts that are displayed in th dashboard\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deployment\n                                    \n                                \n                                \n                                    \n                                        deployment:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Contains the information to get the frontend running.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        devices\n                                    \n                                \n                                \n                                    \n                                        devices:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Contains all the measurement devices (ADS885 chips)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        general\n                                    \n                                \n                                \n                                    \n                                        general:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    General information for the frontend\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        supplies\n                                    \n                                \n                                \n                                    \n                                        supplies:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Contains all supplies suported by the PCB board\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {VarSupply} from './varSupply.model';\nimport { ChartObject } from './chartObject.model';\n\n\n/**\n* Interface do define configuration of a measurement device\n*/\nexport interface MeasurementDevice {\n  /**\n  * flag to enable backend to automatically change resolution when the max value is reached\n  */\n  autoResolution: boolean,\n  /**\n  * Type of the measurement \n  */\n  type: string,\n  /**\n  * Current resolution.\n  * Normaly the following mapping is used. Can be changed in deployment part\n  * @example\n  * Current Device:\n  * 1  500uA\n  * 2  500mA\n  * Voltage Device:\n  * 1  50mV\n  * 2  500mV\n  * 3  5V\n  */\n  currentResolution: number,\n  /**\n  * Id of the measurment device. \n  * Must match with the id set in Devices.py\n  */\n  deviceId: string,\n  /**\n  * Custom name for the device\n  */\n  name: string,\n  /**\n  * only internal use\n  */\n  desiredResolution?:number,\n  /**\n  * only internal use\n  */\n  oldName?:string,\n\n}\n\n\n/**\n* Interface for the app config.\n*/\nexport interface IAppConfig {\n    /**\n    * Contains all the charts that are displayed in th dashboard\n    */\n    charts: Array,\n    /**\n    * Contains all supplies suported by the PCB board\n    */\n    supplies: Array,\n    /**\n    * Contains all the measurement devices (ADS885 chips)\n    */\n    devices:Array,\n\n    /**\n    * Contains the information to get the frontend running.\n    */\n    deployment : {\n        /**\n        * Current host for backend. is set every time the app boots\n        */\n        host:string,\n        /**\n        * The port where the backend is running. Usually 8080\n        */\n        apiPort:string,\n        /**\n        * Link to the api path. normalli just /api\n        */\n        apiLink:string,\n        /**\n        * Protcol which is used. Currently only suporting http\n        */\n        protocol:string\n    },\n    /**\n    * General information for the frontend\n    */\n    general : {\n      /**\n      * How often datavalues should be refreshed. \n      * number in ms\n      */\n      timerInterval: number,\n      /**\n      * Array mapping index to resolution range. Used to display resolution ranges\n      */\n      voltageResolutionMap : Array,\n      /**\n      * Array mapping index to resolution range. Used to display resolution ranges\n      */\n      currentResolutionMap : Array,\n      /**\n      * Custom options object used in chart. See chart.js documentation\n      */\n      chartOptions?: any\n    };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/JwtInterceptor.html":{"url":"interceptors/JwtInterceptor.html","title":"interceptor - JwtInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  JwtInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_helpers/jwt.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Adds the jwt Token to the header of every request. \nUsed to call API-Routes which need authorization\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/_helpers/jwt.interceptor.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_helpers/jwt.interceptor.ts:18\n                \n            \n\n\n            \n                \n                    Appends jwt token to every request. (If user is logged in)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { AuthenticationService } from '../_services';\n\n/**\n* Adds the jwt Token to the header of every request. \n* Used to call API-Routes which need authorization\n*/\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n    constructor(private authenticationService: AuthenticationService) { }\n    /**\n    * Appends jwt token to every request. (If user is logged in)\n    */\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        let currentUser = this.authenticationService.currentUserValue;\n        // check user and token exist.\n        if (currentUser && currentUser.token) {\n          // apend it to header\n            request = request.clone({\n                setHeaders: {\n                    Authorization: `Bearer ${currentUser.token.jwt}`\n                }\n            });\n        }\n        return next.handle(request);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Class to show a modal login window to log a user in.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                isEmpty\n                            \n                            \n                                loading\n                            \n                            \n                                loginForm\n                            \n                            \n                                returnUrl\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                goBack\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onClickMe\n                            \n                            \n                                    Public\n                                onSubmit\n                            \n                            \n                                    Public\n                                removeLastNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, route: ActivatedRoute, router: Router, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            goBack\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    goBack()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:38\n                \n            \n\n\n            \n                \n                    navigates back to the dashboard component. Used if cancel button is pressed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClickMe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClickMe(number: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:53\n                \n            \n\n\n            \n                \n                    Adds a number to the password field\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    number\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:79\n                \n            \n\n\n            \n                \n                    Submits the form to the backend\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeLastNumber\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeLastNumber()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:45\n                \n            \n\n\n            \n                \n                    Removes last number entered in the pin field\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:23\n                            \n                        \n\n                \n                    \n                        Variable to store errors and show them\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEmpty\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            returnUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:19\n                            \n                        \n\n                \n                    \n                        Url to the page where to login should redirect\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:74\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../_services';\n\n/**\n* Class to show a modal login window to log a user in.\n*/\n@Component({ templateUrl: 'login.component.html' })\nexport class LoginComponent implements OnInit {\n    loginForm: FormGroup;\n    loading = false;\n    submitted = false;\n    /**\n    * Url to the page where to login should redirect\n    */\n    returnUrl: string;\n    /**\n    * Variable to store errors and show them\n    */\n    error = '';\n    isEmpty = true;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) { }\n\n\n\n    /**\n    * navigates back to the dashboard component. Used if cancel button is pressed\n    */\n    public goBack() {\n        this.router.navigate([\"/dashboard\"]);\n    }\n\n    /**\n    * Removes last number entered in the pin field\n    */\n    public removeLastNumber() {\n        let value = this.f.password.value;\n        this.f.password.setValue(value.substring(0,value.length - 1));\n    }\n    /**\n    * Adds a number to the password field\n    * @params {string} number Number or character that should be appended to the text field\n    */\n    public onClickMe(number:string) {\n      this.f.password.setValue(this.f.password.value + number);\n    }\n\n\n    ngOnInit() {\n      // Set up login form\n        this.loginForm = this.formBuilder.group({\n            username: ['test', Validators.required],\n            password: ['', Validators.required]\n        });\n        // Update remove last number button\n        this.f.password.valueChanges.subscribe(e => this.isEmpty = (e == \"\" ) );\n        // reset login status\n        this.authenticationService.logout();\n\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/settings';\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.loginForm.controls; }\n\n    /**\n    * Submits the form to the backend\n    */\n    public onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.login(this.f.username.value, this.f.password.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.router.navigate([this.returnUrl]);\n                },\n                error => {\n                    this.error = error;\n                    this.loading = false;\n                    this.f.password.setValue(\"\");\n                });\n    }\n}\n\n    \n\n    \n        Login\n\n  /* The Modal (background) */\n  .modal {\n    display: block;\n    /* Hidden by default */\n    position: fixed;\n    /* Stay in place */\n    z-index: 1;\n    /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%;\n    /* Full width */\n    height: 100%;\n    /* Full height */\n    overflow: auto;\n    /* Enable scroll if needed */\n    background-color: rgb(0, 0, 0);\n    /* Fallback color */\n    background-color: rgba(0, 0, 0, 0.4);\n    /* Black w/ opacity */\n  }\n\n  .table>tbody>tr>td,\n  .table>tbody>tr>th,\n  .table>tfoot>tr>td,\n  .table>tfoot>tr>th,\n  .table>thead>tr>td,\n  .table>thead>tr>th {\n    padding: 4px;\n  }\n\n  /* Modal Content/Box */\n\n  .modal-content {\n    background-color: #fefefe;\n    margin: 1% auto;\n    /* 15% from the top and centered */\n    padding: 20px;\n    border: 1px solid #888;\n    width: 50%;\n    /* Could be more or less, depending on screen size */\n    max-width: 300px;\n  }\n\n  td {\n    width: 0.1% !important;\n    white-space: nowrap !important;\n  }\n\n  td button {\n    width: 70px;\n    height: 50px;\n  }\n\n\n\n\n  \n  \n    \n\n      \n        Pin Code\n\n        \n          \n\n          \n            \n\n          \n        \n        \n          Password is required\n        \n      \n      \n        \n\n          \n            \n\n               1\n               2\n               3\n            \n            \n\n               4\n               5\n               6\n            \n            \n\n               7\n               8\n               9\n            \n\n            \n\n               \n               0\n               \n            \n            \n              Zurück \n               \n              \n                \n                  Login\n                  \n                \n              \n\n            \n          \n        \n      \n\n      {{error}}\n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Login  /* The Modal (background) */  .modal {    display: block;    /* Hidden by default */    position: fixed;    /* Stay in place */    z-index: 1;    /* Sit on top */    left: 0;    top: 0;    width: 100%;    /* Full width */    height: 100%;    /* Full height */    overflow: auto;    /* Enable scroll if needed */    background-color: rgb(0, 0, 0);    /* Fallback color */    background-color: rgba(0, 0, 0, 0.4);    /* Black w/ opacity */  }  .table>tbody>tr>td,  .table>tbody>tr>th,  .table>tfoot>tr>td,  .table>tfoot>tr>th,  .table>thead>tr>td,  .table>thead>tr>th {    padding: 4px;  }  /* Modal Content/Box */  .modal-content {    background-color: #fefefe;    margin: 1% auto;    /* 15% from the top and centered */    padding: 20px;    border: 1px solid #888;    width: 50%;    /* Could be more or less, depending on screen size */    max-width: 300px;  }  td {    width: 0.1% !important;    white-space: nowrap !important;  }  td button {    width: 70px;    height: 50px;  }                      Pin Code                                                                            Password is required                                                                 1               2               3                                       4               5               6                                       7               8               9                                                      0                                                     Zurück                                                                Login                                                                                          {{error}}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartFormComponent', 'selector': 'app-chart-form'},{'name': 'ConfirmDialog', 'selector': 'app-confirm-dialog'},{'name': 'ControlSliderComponent', 'selector': 'app-control-slider'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GeneralSettingsComponent', 'selector': 'app-general-settings'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MDashboardComponent', 'selector': 'app-m-dashboard'},{'name': 'MeasurementConfigurationComponent', 'selector': 'app-measurement-config'},{'name': 'MenuListItemComponent', 'selector': 'app-menu-list-item'},{'name': 'MyNavComponent', 'selector': 'app-my-nav'},{'name': 'PowerOffDialog', 'selector': 'app-power_off_dialog'},{'name': 'SupplyVoltagesComponent', 'selector': 'app-supply-voltages'},{'name': 'VideostreamComponent', 'selector': 'app-videostream'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MDashboardComponent.html":{"url":"components/MDashboardComponent.html","title":"component - MDashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MDashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/m-dashboard/m-dashboard.component.ts\n\n\n    \n        Description\n    \n    \n        Component that creates the dashboard. \nSimple container that holds all chart components\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-m-dashboard\n            \n\n            \n                styleUrls\n                ./m-dashboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./m-dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chartObjects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(measurementUpdateService: MeasurementUpdateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/m-dashboard/m-dashboard.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        measurementUpdateService\n                                                  \n                                                        \n                                                                        MeasurementUpdateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                update service that polls for new measurement data. \nReference needed so polling can be terminated once the dashboard is not visible anymore\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/m-dashboard/m-dashboard.component.ts:31\n                \n            \n\n\n            \n                \n                    Makes sure that voltage polling serves stops, when dashboard is no longer visible\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chartObjects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/m-dashboard/m-dashboard.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy } from '@angular/core';\nimport { AppConfig } from '../_services/app.config'\nimport {MeasurementUpdateService} from '../_services/MeasurementUpdateService';\nimport { ChartObject } from '../_models/chartObject.model';\n\n\n/**\n* Component that creates the dashboard. \n* Simple container that holds all chart components\n*/\n@Component({\n  selector: 'app-m-dashboard',\n  templateUrl: './m-dashboard.component.html',\n  styleUrls: ['./m-dashboard.component.css']\n})\nexport class MDashboardComponent implements OnDestroy {\n  chartObjects: Array;\n\n  /**\n  * @param{MeasurementUpdateService} measurementUpdateService update service that polls for new measurement data. \n  * Reference needed so polling can be terminated once the dashboard is not visible anymore\n  */\n  constructor(private measurementUpdateService: MeasurementUpdateService) {\n    // load chartobject from config\n    this.chartObjects = AppConfig.settings.charts;\n  }\n\n  /**\n  * Makes sure that voltage polling serves stops, when dashboard is no longer visible\n  */\n  ngOnDestroy() {\n    this.measurementUpdateService.stop();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n     \n  \n  \n\n\n    \n\n    \n                \n                    ./m-dashboard.component.css\n                \n                 .grid-container {\n  margin: 20px;\n}\n\n.dashboard-card {\n  position: absolute;\n  top: 15px;\n  left: 15px;\n  right: 15px;\n  bottom: 15px;\n}\n\n.more-button {\n  position: absolute;\n  top: 5px;\n  right: 10px;\n}\n\n.dashboard-card-content {\n  text-align: center;\n}\n\n.no-padding {\n  padding:0px !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartFormComponent', 'selector': 'app-chart-form'},{'name': 'ConfirmDialog', 'selector': 'app-confirm-dialog'},{'name': 'ControlSliderComponent', 'selector': 'app-control-slider'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GeneralSettingsComponent', 'selector': 'app-general-settings'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MDashboardComponent', 'selector': 'app-m-dashboard'},{'name': 'MeasurementConfigurationComponent', 'selector': 'app-measurement-config'},{'name': 'MenuListItemComponent', 'selector': 'app-menu-list-item'},{'name': 'MyNavComponent', 'selector': 'app-my-nav'},{'name': 'PowerOffDialog', 'selector': 'app-power_off_dialog'},{'name': 'SupplyVoltagesComponent', 'selector': 'app-supply-voltages'},{'name': 'VideostreamComponent', 'selector': 'app-videostream'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MDashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MeasurementConfigurationComponent.html":{"url":"components/MeasurementConfigurationComponent.html","title":"component - MeasurementConfigurationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MeasurementConfigurationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/measurement-config/measurement-config.component.ts\n\n\n    \n        Description\n    \n    \n        Component to edit all measurementdevices that are supported.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-measurement-config\n            \n\n            \n                styleUrls\n                ./measurement-config.component.css\n            \n\n\n\n            \n                templateUrl\n                ./measurement-config.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentDevices\n                            \n                            \n                                currentResolutionMap\n                            \n                            \n                                devices\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                http\n                            \n                            \n                                voltageDevices\n                            \n                            \n                                voltageResolutionMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onSubmit\n                            \n                            \n                                    Public\n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    validInputs\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/measurement-config/measurement-config.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/measurement-config/measurement-config.component.ts:107\n                \n            \n\n\n            \n                \n                    On init. load devices from config and setts desiredResolution to current resolution and oldName to current name. \nNeeded to be able to show what changes in confirmation dialog\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/measurement-config/measurement-config.component.ts:99\n                \n            \n\n\n            \n                \n                    Function that gets called once the submit button is pressed. \nopens confirmation dialog\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/measurement-config/measurement-config.component.ts:45\n                \n            \n\n\n            \n                \n                    Opens a dialog to show changes and make sure if user wnats to confirm the changes\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentDevices\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/measurement-config/measurement-config.component.ts:30\n                            \n                        \n\n                \n                    \n                        Only the devices that deal with currents. set up in constructor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentResolutionMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AppConfig.settings.general.currentResolutionMap\n                        \n                    \n                        \n                            \n                                    Defined in src/app/measurement-config/measurement-config.component.ts:38\n                            \n                        \n\n                \n                    \n                        Map that maps a resolution number to a human readable string\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            devices\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AppConfig.settings.devices\n                        \n                    \n                        \n                            \n                                    Defined in src/app/measurement-config/measurement-config.component.ts:22\n                            \n                        \n\n                \n                    \n                        all devices that are configured\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/measurement-config/measurement-config.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/measurement-config/measurement-config.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            voltageDevices\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/measurement-config/measurement-config.component.ts:26\n                            \n                        \n\n                \n                    \n                        Only the devices that deal with voltages. set up in constructor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            voltageResolutionMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AppConfig.settings.general.voltageResolutionMap\n                        \n                    \n                        \n                            \n                                    Defined in src/app/measurement-config/measurement-config.component.ts:34\n                            \n                        \n\n                \n                    \n                        Map that maps a resolution number to a human readable string\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        validInputs\n                    \n                \n\n                \n                    \n                        getvalidInputs()\n                    \n                \n                            \n                                \n                                    Defined in src/app/measurement-config/measurement-config.component.ts:86\n                                \n                            \n                    \n                        \n                                returns if inputs are valid and data can be set.\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AppConfig } from '../_services/app.config';\nimport { ConfirmDialog } from '../supply-voltages/supply-voltages.component';\nimport { MatDialog } from '@angular/material';\nimport { HttpClient } from '@angular/common/http';\nimport { MeasurementDevice } from '../_models/app-config.model';\n\n\n/**\n* Component to edit all measurementdevices that are supported.\n*/\n@Component({\n  selector: 'app-measurement-config',\n  templateUrl: './measurement-config.component.html',\n  styleUrls: ['./measurement-config.component.css']\n})\nexport class MeasurementConfigurationComponent implements OnInit {\n\n  /**\n  * all devices that are configured\n  */\n  devices = AppConfig.settings.devices;\n  /**\n  * Only the devices that deal with voltages. set up in constructor\n  */\n  voltageDevices: Array = [];\n  /**\n  * Only the devices that deal with currents. set up in constructor\n  */\n  currentDevices: Array = [];\n  /**\n  * Map that maps a resolution number to a human readable string\n  */\n  voltageResolutionMap = AppConfig.settings.general.voltageResolutionMap;\n  /**\n  * Map that maps a resolution number to a human readable string\n  */\n  currentResolutionMap = AppConfig.settings.general.currentResolutionMap;\n\n  constructor(public dialog: MatDialog, public http: HttpClient) { }\n\n  /**\n  * Opens a dialog to show changes and make sure if user wnats to confirm the changes\n  */\n  public openDialog(): void {\n    // Add all devices to one array\n    let updates = this.voltageDevices.map(device => {\n      return {\n        name: device.deviceId,\n        oldValue: device.oldName + \" : \" + this.voltageResolutionMap[device.currentResolution - 1],\n        newValue: device.name + \" : \" + this.voltageResolutionMap[device.desiredResolution - 1]\n      };\n    });\n\n    let values = updates.concat(this.currentDevices.map(device => {\n      return {\n        name: device.deviceId,\n        oldValue: device.oldName + \" : \" + this.currentResolutionMap[device.currentResolution - 1],\n        newValue: device.name + \" : \" + this.currentResolutionMap[device.desiredResolution - 1]\n      };\n    })\n    );\n    // contains all devices that will be updated\n    let submitObj = [].concat(this.voltageDevices).concat(this.currentDevices)\n\n    const dialogRef = this.dialog.open(ConfirmDialog, {\n      width: '400px',\n      data: { values: values, submitObject: submitObj, callPath: \"/update/measurementDevices\" }\n    });\n\n    dialogRef.afterClosed().subscribe(succesfull => {\n      if (succesfull) {\n        for (let device of this.devices) {\n          device.currentResolution = device.desiredResolution;\n          device.name = device.oldName + \"\";\n        }\n      }\n    });\n  }\n\n\n  /**\n  * returns if inputs are valid and data can be set.\n  * @TODO implement\n  */\n  get validInputs(): boolean {\n    // for(let device of this.settings.supplies) {\n    //   if (device.desiredVoltage  device.maxValue) {\n    //     return false;\n    //   }\n    // }\n    return true;\n  }\n\n  /**\n  * Function that gets called once the submit button is pressed. \n  * opens confirmation dialog\n  */\n  public onSubmit() {\n    this.openDialog();\n  }\n\n /**\n * On init. load devices from config and setts desiredResolution to current resolution and oldName to current name. \n * Needed to be able to show what changes in confirmation dialog\n */\n  ngOnInit() {\n    for (let device of this.devices) {\n      device.desiredResolution = device.currentResolution + 0;\n      device.oldName = device.name + \"\";\n\n      if (device.type == \"voltage\") {\n        this.voltageDevices.push(device);\n      } else if (device.type == \"current\") {\n        this.currentDevices.push(device);\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      Measurement Devices\n    \n    \n      \n        \n\n          \n             Voltage Measurement\n            \n              battery_20\n            \n            \n              battery_20\n            \n          \n\n          \n            \n              \n                {{device.deviceId}}\n              \n              \n                \n              \n              Resolution:\n\n              \n                \n                Auto\n              \n\n              \n                \n                  {{resolution}}\n\n                \n              \n            \n          \n          \n             Current Measurement\n          \n\n          \n            \n              \n                {{curr_device.deviceId}}\n              \n              \n                \n              \n              Resolution:\n              \n                \n                Auto\n              \n              \n                \n                  {{resolution}}\n                \n              \n            \n          \n\n          \n            Submit\n          \n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./measurement-config.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Measurement Devices                                             Voltage Measurement                          battery_20                                      battery_20                                                                          {{device.deviceId}}                                                                        Resolution:                                              Auto                                                              {{resolution}}                                                                           Current Measurement                                                              {{curr_device.deviceId}}                                                                        Resolution:                                              Auto                                                              {{resolution}}                                                                          Submit                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartFormComponent', 'selector': 'app-chart-form'},{'name': 'ConfirmDialog', 'selector': 'app-confirm-dialog'},{'name': 'ControlSliderComponent', 'selector': 'app-control-slider'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GeneralSettingsComponent', 'selector': 'app-general-settings'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MDashboardComponent', 'selector': 'app-m-dashboard'},{'name': 'MeasurementConfigurationComponent', 'selector': 'app-measurement-config'},{'name': 'MenuListItemComponent', 'selector': 'app-menu-list-item'},{'name': 'MyNavComponent', 'selector': 'app-my-nav'},{'name': 'PowerOffDialog', 'selector': 'app-power_off_dialog'},{'name': 'SupplyVoltagesComponent', 'selector': 'app-supply-voltages'},{'name': 'VideostreamComponent', 'selector': 'app-videostream'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MeasurementConfigurationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MeasurementDevice.html":{"url":"interfaces/MeasurementDevice.html","title":"interface - MeasurementDevice","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MeasurementDevice\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/app-config.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface do define configuration of a measurement device\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        autoResolution\n                                \n                                \n                                        currentResolution\n                                \n                                \n                                            Optional\n                                        desiredResolution\n                                \n                                \n                                        deviceId\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        oldName\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoResolution\n                                    \n                                \n                                \n                                    \n                                        autoResolution:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    flag to enable backend to automatically change resolution when the max value is reached\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currentResolution\n                                    \n                                \n                                \n                                    \n                                        currentResolution:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current resolution.\nNormaly the following mapping is used. Can be changed in deployment part\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desiredResolution\n                                    \n                                \n                                \n                                    \n                                        desiredResolution:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    only internal use\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deviceId\n                                    \n                                \n                                \n                                    \n                                        deviceId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Id of the measurment device. \nMust match with the id set in Devices.py\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Custom name for the device\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        oldName\n                                    \n                                \n                                \n                                    \n                                        oldName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    only internal use\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Type of the measurement \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {VarSupply} from './varSupply.model';\nimport { ChartObject } from './chartObject.model';\n\n\n/**\n* Interface do define configuration of a measurement device\n*/\nexport interface MeasurementDevice {\n  /**\n  * flag to enable backend to automatically change resolution when the max value is reached\n  */\n  autoResolution: boolean,\n  /**\n  * Type of the measurement \n  */\n  type: string,\n  /**\n  * Current resolution.\n  * Normaly the following mapping is used. Can be changed in deployment part\n  * @example\n  * Current Device:\n  * 1  500uA\n  * 2  500mA\n  * Voltage Device:\n  * 1  50mV\n  * 2  500mV\n  * 3  5V\n  */\n  currentResolution: number,\n  /**\n  * Id of the measurment device. \n  * Must match with the id set in Devices.py\n  */\n  deviceId: string,\n  /**\n  * Custom name for the device\n  */\n  name: string,\n  /**\n  * only internal use\n  */\n  desiredResolution?:number,\n  /**\n  * only internal use\n  */\n  oldName?:string,\n\n}\n\n\n/**\n* Interface for the app config.\n*/\nexport interface IAppConfig {\n    /**\n    * Contains all the charts that are displayed in th dashboard\n    */\n    charts: Array,\n    /**\n    * Contains all supplies suported by the PCB board\n    */\n    supplies: Array,\n    /**\n    * Contains all the measurement devices (ADS885 chips)\n    */\n    devices:Array,\n\n    /**\n    * Contains the information to get the frontend running.\n    */\n    deployment : {\n        /**\n        * Current host for backend. is set every time the app boots\n        */\n        host:string,\n        /**\n        * The port where the backend is running. Usually 8080\n        */\n        apiPort:string,\n        /**\n        * Link to the api path. normalli just /api\n        */\n        apiLink:string,\n        /**\n        * Protcol which is used. Currently only suporting http\n        */\n        protocol:string\n    },\n    /**\n    * General information for the frontend\n    */\n    general : {\n      /**\n      * How often datavalues should be refreshed. \n      * number in ms\n      */\n      timerInterval: number,\n      /**\n      * Array mapping index to resolution range. Used to display resolution ranges\n      */\n      voltageResolutionMap : Array,\n      /**\n      * Array mapping index to resolution range. Used to display resolution ranges\n      */\n      currentResolutionMap : Array,\n      /**\n      * Custom options object used in chart. See chart.js documentation\n      */\n      chartOptions?: any\n    };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MeasurementUpdateService.html":{"url":"injectables/MeasurementUpdateService.html","title":"injectable - MeasurementUpdateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MeasurementUpdateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_services/MeasurementUpdateService.ts\n        \n\n            \n                Description\n            \n            \n                Class that polls regulary for new measurementvalues and provides them using an Observable\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                pollUrl\n                            \n                            \n                                    Private\n                                running\n                            \n                            \n                                    Private\n                                subjects\n                            \n                            \n                                    Private\n                                subscriberCounter\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _getSubjectObeservable\n                            \n                            \n                                    Private\n                                clearMessage\n                            \n                            \n                                    Public\n                                getVoltageUpdateObs\n                            \n                            \n                                    Private\n                                handlePolledData\n                            \n                            \n                                    Public\n                                notifySubscribe\n                            \n                            \n                                    Public\n                                notifyUnsubscribe\n                            \n                            \n                                    Public\n                                sendMeasurmentUpdate\n                            \n                            \n                                    Private\n                                start\n                            \n                            \n                                    Public\n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/_services/MeasurementUpdateService.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _getSubjectObeservable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _getSubjectObeservable(chartId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/MeasurementUpdateService.ts:41\n                \n            \n\n\n            \n                \n                    returns subject from cache or creates a new one.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            clearMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearMessage(chartId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/MeasurementUpdateService.ts:117\n                \n            \n\n\n            \n                \n                    Removes a measurement\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getVoltageUpdateObs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getVoltageUpdateObs(chartId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/MeasurementUpdateService.ts:125\n                \n            \n\n\n            \n                \n                    Returns a observable for a given id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    chartId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        unique Id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handlePolledData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handlePolledData(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/MeasurementUpdateService.ts:108\n                \n            \n\n\n            \n                \n                    function that gets executed whenever data got polled from backend\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            notifySubscribe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    notifySubscribe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/MeasurementUpdateService.ts:59\n                \n            \n\n\n            \n                \n                    Notifies that an observer subscribed for data updates. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            notifyUnsubscribe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    notifyUnsubscribe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/MeasurementUpdateService.ts:51\n                \n            \n\n\n            \n                \n                    Notifies that an observer unsubscribed from  data updates. \nif nobody is subscribed anymore the service will stop polling\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            sendMeasurmentUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMeasurmentUpdate(chartId: string, voltageValue: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/MeasurementUpdateService.ts:68\n                \n            \n\n\n            \n                \n                    Sends a measurement update to all observers\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    voltageValue\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            start\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    start()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/MeasurementUpdateService.ts:84\n                \n            \n\n\n            \n                \n                    starts polling for measurementupdate. Uses polling time interval specified by the config\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/MeasurementUpdateService.ts:76\n                \n            \n\n\n            \n                \n                    stops polling\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pollUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AppConfig.apiUrl + \"/voltageUpdate/ALL\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/MeasurementUpdateService.ts:22\n                            \n                        \n\n                \n                    \n                        URL to pull for measurement updates\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            running\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/MeasurementUpdateService.ts:34\n                            \n                        \n\n                \n                    \n                        Flag to control if service is running\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subjects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Record>\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/MeasurementUpdateService.ts:18\n                            \n                        \n\n                \n                    \n                        Stores List with mapping chartId  Subject\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriberCounter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/MeasurementUpdateService.ts:26\n                            \n                        \n\n                \n                    \n                        keeps track of how many subscriber we have. gets incresed from notifySubscribe and decrease from notifyUnsubscribe\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/MeasurementUpdateService.ts:30\n                            \n                        \n\n                \n                    \n                        internal subscription to the RXJS timer.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {timer, from, Observable, Subject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { switchMap } from 'rxjs/operators'\nimport { AppConfig } from '../_services/app.config';\nimport { ToastrService } from 'ngx-toastr';\n\n\n/**\n* Class that polls regulary for new measurementvalues and provides them using an Observable\n*/\n@Injectable({ providedIn: 'root' })\nexport class MeasurementUpdateService {\n\n    /**\n    * Stores List with mapping chartId  Subject\n    */\n    private subjects:Record> = {};\n    /**\n    * URL to pull for measurement updates\n    */\n    private pollUrl = AppConfig.apiUrl + \"/voltageUpdate/ALL\";\n    /**\n    * keeps track of how many subscriber we have. gets incresed from notifySubscribe and decrease from notifyUnsubscribe\n    */\n    private subscriberCounter = 0;\n    /**\n    * internal subscription to the RXJS timer.\n    */\n    private subscription: any;\n    /**\n    * Flag to control if service is running\n    */\n    private running: boolean = false;\n\n    constructor(private http: HttpClient,  private toastr: ToastrService) {}\n\n    /**\n    * returns subject from cache or creates a new one.\n    */\n    private _getSubjectObeservable(chartId:string) {\n      if(!this.subjects.hasOwnProperty(chartId)) {\n        this.subjects[chartId] = new Subject();\n      }\n      return this.subjects[chartId];\n    }\n    /**\n    * Notifies that an observer unsubscribed from  data updates. \n    * if nobody is subscribed anymore the service will stop polling\n    */\n    public notifyUnsubscribe() {\n        this.subscriberCounter-= 1;\n        if(this.subscriberCounter == 0 && this.running)\n          this.stop()\n    }\n    /**\n    * Notifies that an observer subscribed for data updates. \n    */\n    public notifySubscribe() {\n      this.subscriberCounter+= 1;\n      if(this.subscriberCounter > 0 && !this.running)\n        this.start()\n    }\n\n    /**\n    * Sends a measurement update to all observers\n    */\n    public sendMeasurmentUpdate(chartId:string, voltageValue:number) {\n      //console.log(\"sending volt updt to  \" + chartId + \" value:\" + voltageValue)\n      this._getSubjectObeservable(chartId).next(voltageValue)\n    }\n\n    /**\n    * stops polling\n    */\n    public stop() {\n      this.subscription.unsubscribe();\n      this.running = false;\n    }\n\n    /**\n    * starts polling for measurementupdate. Uses polling time interval specified by the config\n    */\n    private start() {\n      // Set up timer with interval  AppConfig.settings.general.timerInterval\n      this.running = true;\n\n      this.subscription =\n            timer(0, AppConfig.settings.general.timerInterval)\n              // if timer is triggered, get data from this.pollUrl\n              .pipe(switchMap( () => from(this.http.get(this.pollUrl))))\n              .subscribe(\n                // we got data\n                (data) => {\n                  this.handlePolledData(data)\n                },\n                //Error occured\n                response => {\n                  console.log(\"Error while retreaving data\", response);\n                  this.toastr.error(response, \"Error while retreaving data\");\n                }\n              );\n    }\n\n    /**\n    * function that gets executed whenever data got polled from backend\n    */\n    private handlePolledData(data: any) {\n      // notify all subjects\n      for (let chartId in this.subjects) {\n        this.subjects[chartId].next(data);\n      }\n    }\n    /**\n    * Removes a measurement\n    */\n    private clearMessage(chartId:string) {\n        this._getSubjectObeservable(chartId).next();\n    }\n\n    /**\n    * Returns a observable for a given id\n    * @param {string} chartId unique Id\n    */\n    public getVoltageUpdateObs(chartId:string): Observable {\n          return this._getSubjectObeservable(chartId).asObservable();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuListItemComponent.html":{"url":"components/MenuListItemComponent.html","title":"component - MenuListItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuListItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navigation/menu-list-item/menu-list-item.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-menu-list-item\n            \n\n            \n                styleUrls\n                ./menu-list-item.component.css\n            \n\n\n\n            \n                templateUrl\n                ./menu-list-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expanded\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onItemSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                depth\n                            \n                            \n                                drawer\n                            \n                            \n                                isToggleEnabled\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                attr.aria-expanded\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/navigation/menu-list-item/menu-list-item.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        depth\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/navigation/menu-list-item/menu-list-item.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        drawer\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/navigation/menu-list-item/menu-list-item.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isToggleEnabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/navigation/menu-list-item/menu-list-item.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :         NavItem\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/navigation/menu-list-item/menu-list-item.component.ts:26\n                            \n                        \n            \n        \n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            attr.aria-expanded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.expanded\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/menu-list-item/menu-list-item.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navigation/menu-list-item/menu-list-item.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onItemSelected\n                        \n                        \n                    \n                \n            \n            \n                \nonItemSelected(item: NavItem, drawer: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/navigation/menu-list-item/menu-list-item.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                NavItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    drawer\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expanded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/menu-list-item/menu-list-item.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/menu-list-item/menu-list-item.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, HostBinding, Input, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport { NavItem } from './nav-item';\nimport { AuthenticationService } from '../../_services';\n\n@Component({\n  selector: 'app-menu-list-item',\n  templateUrl: './menu-list-item.component.html',\n  styleUrls: ['./menu-list-item.component.css'],\n  animations: [\n    trigger('indicatorRotate', [\n      state('collapsed', style({transform: 'rotate(0deg)'})),\n      state('expanded', style({transform: 'rotate(180deg)'})),\n      transition('expanded  collapsed',\n        animate('225ms cubic-bezier(0.4,0.0,0.2,1)')\n      ),\n    ])\n  ]\n})\nexport class MenuListItemComponent implements OnInit {\n  @Input()\n  isToggleEnabled:boolean;\n  expanded: boolean;\n  @HostBinding('attr.aria-expanded') ariaExpanded = this.expanded;\n  @Input() item: NavItem;\n  @Input() drawer:any;\n  @Input() depth: number;\n  constructor(public router: Router, private authenticationService: AuthenticationService) {\n    if (this.depth === undefined) {\n      this.depth = 0;\n    }\n  }\n\n  ngOnInit() {\n    // this.navService.currentUrl.subscribe((url: string) => {\n    //   if (this.item.route && url) {\n    //     // console.log(`Checking '/${this.item.route}' against '${url}'`);\n    //     this.expanded = url.indexOf(`/${this.item.route}`) === 0;\n    //     this.ariaExpanded = this.expanded;\n    //     // console.log(`${this.item.route} is expanded: ${this.expanded}`);\n    //   }\n    // });\n  }\n\n  onItemSelected(item: NavItem, drawer:any) {\n\n\n    if(item.loginRequired && !this.authenticationService.isLoggedIn()) {\n      this.router.navigate(['/login']);\n      return;\n    }\n\n    if (!item.children || !item.children.length) {\n      if(this.isToggleEnabled)\n         drawer.toggle();\n      this.router.navigate([item.route]);\n      // this.navService.closeNav();\n    }\n    if (item.children && item.children.length) {\n      this.expanded = !this.expanded;\n    }\n  }\n}\n\n    \n\n    \n        \n  {{item.iconName}}\n  {{item.displayName}}\n  \n    \n    \n      expand_more\n    \n  \n\n\n  \n  \n\n\n    \n\n    \n                \n                    ./menu-list-item.component.css\n                \n                .mat-list-item.active {\n  color:#673ab7;\n  background-color: #f2f2f2;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{item.iconName}}  {{item.displayName}}                expand_more          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartFormComponent', 'selector': 'app-chart-form'},{'name': 'ConfirmDialog', 'selector': 'app-confirm-dialog'},{'name': 'ControlSliderComponent', 'selector': 'app-control-slider'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GeneralSettingsComponent', 'selector': 'app-general-settings'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MDashboardComponent', 'selector': 'app-m-dashboard'},{'name': 'MeasurementConfigurationComponent', 'selector': 'app-measurement-config'},{'name': 'MenuListItemComponent', 'selector': 'app-menu-list-item'},{'name': 'MyNavComponent', 'selector': 'app-my-nav'},{'name': 'PowerOffDialog', 'selector': 'app-power_off_dialog'},{'name': 'SupplyVoltagesComponent', 'selector': 'app-supply-voltages'},{'name': 'VideostreamComponent', 'selector': 'app-videostream'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenuListItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MyNavComponent.html":{"url":"components/MyNavComponent.html","title":"component - MyNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MyNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navigation/my-nav.component.ts\n\n\n    \n        Description\n    \n    \n        The navigation component. \nCreates a sidebar with different components and a toolbar showing battery percentage, log out button and temperature\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-my-nav\n            \n\n            \n                styleUrls\n                ./my-nav.component.css\n            \n\n\n\n            \n                templateUrl\n                ./my-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                batteryIcon\n                            \n                            \n                                    Public\n                                batteryLevel\n                            \n                            \n                                    Public\n                                heat\n                            \n                            \n                                    Public\n                                isHandset$\n                            \n                            \n                                    Public\n                                isToggleEnabled\n                            \n                            \n                                    Public\n                                loggedIn\n                            \n                            \n                                    Public\n                                navItems\n                            \n                            \n                                    Public\n                                routes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                shutdownDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, dialog: MatDialog, authenticationService: AuthenticationService, http: HttpClient, toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/navigation/my-nav.component.ts:142\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navigation/my-nav.component.ts:140\n                \n            \n\n\n            \n                \n                    Logs out the user that is currently logged in\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navigation/my-nav.component.ts:159\n                \n            \n\n\n            \n                \n                    On init creates a timer that polls every 10s for new information about Batterylevel, CPU tmp etc. \nShows an error notification if it fails.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shutdownDialog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shutdownDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navigation/my-nav.component.ts:149\n                \n            \n\n\n            \n                \n                    Shows a dialog to make sure if the user really wants to shut the device down\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            batteryIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"battery_unknown\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/my-nav.component.ts:122\n                            \n                        \n\n                \n                    \n                        the battery icon. can be critical, loading, normal or just unknown\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            batteryLevel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/my-nav.component.ts:118\n                            \n                        \n\n                \n                    \n                        the current battery level.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            heat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/my-nav.component.ts:126\n                            \n                        \n\n                \n                    \n                        Current heat of the RPI CPU\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isHandset$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/my-nav.component.ts:132\n                            \n                        \n\n                \n                    \n                        Observable that gets triggered if screen size changes.  \nTrue if device is handset and toggle button is shown.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isToggleEnabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/my-nav.component.ts:114\n                            \n                        \n\n                \n                    \n                        flag to store information about the sidebar.  \nif false, sidebar is always visible, if ture, sidebar can be hidden by pressing the toggle button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/my-nav.component.ts:109\n                            \n                        \n\n                \n                    \n                        flag to show if user is logged or not. \nUsed to show/hide the logout button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NavItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      displayName: 'Dashboard',\n      iconName: 'dashboard',\n      route: '/dashboard',\n      loginRequired: false,\n    }, {\n      displayName: 'Video',\n      iconName: 'videocam',\n      route: '/video',\n      loginRequired: false,\n    }, {\n      displayName: 'Settings',\n      iconName: 'settings',\n      route: '/settings',\n      loginRequired: true,\n      children: [{\n        displayName: 'Charts',\n        iconName: 'show_chart',\n        route: '/chartsettings',\n        loginRequired: true,\n      },\n      {\n        displayName: 'Supply Voltages',\n        iconName: 'power',\n        route: '/settings',\n        loginRequired: true,\n      },\n      {\n        displayName: 'Measurement',\n        iconName: 'flash_on',\n        route: '/measDevices',\n        loginRequired: true,\n      }, {\n        displayName: \"General\",\n        iconName: 'settings_input_antenna',\n        route: 'general',\n        loginRequired: true\n      },\n      {\n        displayName: 'Editor',\n        iconName: 'edit',\n        route: '/editor',\n        loginRequired: true,\n      }]\n    }\n\n\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/my-nav.component.ts:32\n                            \n                        \n\n                \n                    \n                        List containing all items shown in the sidebar\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            routes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ROUTE[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      icon: 'dashboard',\n      route: '/dashboard',\n      title: 'Dashboard',\n    },\n    {\n      icon: 'videocam',\n      route: '/video',\n      title: 'Video',\n    },\n    {\n      icon: 'settings',\n      route: '/settings',\n      title: 'Settings',\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/my-nav.component.ts:85\n                            \n                        \n\n                \n                    \n                        List containing all \"big\" dropdown navigation objects.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable, timer, from } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { AuthenticationService } from '../_services';\nimport { NavItem } from './menu-list-item/nav-item';\nimport { AppConfig } from '../_services/app.config';\nimport { ToastrService } from 'ngx-toastr';\nimport { HttpClient } from '@angular/common/http';\nimport { MatDialogRef, MatDialog } from '@angular/material';\n\n\ninterface ROUTE {\n  icon?: string;\n  route?: string;\n  title?: string;\n}\n\n/**\n* The navigation component. \n* Creates a sidebar with different components and a toolbar showing battery percentage, log out button and temperature\n*/\n@Component({\n  selector: 'app-my-nav',\n  templateUrl: './my-nav.component.html',\n  styleUrls: ['./my-nav.component.css']\n})\nexport class MyNavComponent {\n  /**\n  * List containing all items shown in the sidebar\n  */\n  public navItems: NavItem[] = [\n    {\n      displayName: 'Dashboard',\n      iconName: 'dashboard',\n      route: '/dashboard',\n      loginRequired: false,\n    }, {\n      displayName: 'Video',\n      iconName: 'videocam',\n      route: '/video',\n      loginRequired: false,\n    }, {\n      displayName: 'Settings',\n      iconName: 'settings',\n      route: '/settings',\n      loginRequired: true,\n      children: [{\n        displayName: 'Charts',\n        iconName: 'show_chart',\n        route: '/chartsettings',\n        loginRequired: true,\n      },\n      {\n        displayName: 'Supply Voltages',\n        iconName: 'power',\n        route: '/settings',\n        loginRequired: true,\n      },\n      {\n        displayName: 'Measurement',\n        iconName: 'flash_on',\n        route: '/measDevices',\n        loginRequired: true,\n      }, {\n        displayName: \"General\",\n        iconName: 'settings_input_antenna',\n        route: 'general',\n        loginRequired: true\n      },\n      {\n        displayName: 'Editor',\n        iconName: 'edit',\n        route: '/editor',\n        loginRequired: true,\n      }]\n    }\n\n\n  ];\n\n  /**\n  * List containing all \"big\" dropdown navigation objects.\n  */\n  public routes: ROUTE[] = [\n    {\n      icon: 'dashboard',\n      route: '/dashboard',\n      title: 'Dashboard',\n    },\n    {\n      icon: 'videocam',\n      route: '/video',\n      title: 'Video',\n    },\n    {\n      icon: 'settings',\n      route: '/settings',\n      title: 'Settings',\n    }\n  ];\n\n\n\n  /**\n  * flag to show if user is logged or not. \n  * Used to show/hide the logout button\n  */\n  public loggedIn: boolean;\n  /**\n  * flag to store information about the sidebar.  \n  * if false, sidebar is always visible, if ture, sidebar can be hidden by pressing the toggle button\n  */\n  public isToggleEnabled = false;\n  /**\n  * the current battery level.\n  */\n  public batteryLevel: any = 0;\n  /**\n  * the battery icon. can be critical, loading, normal or just unknown\n  */\n  public batteryIcon: string = \"battery_unknown\";\n  /**\n  * Current heat of the RPI CPU\n  */\n  public heat: string = \"\"\n\n  /**\n  * Observable that gets triggered if screen size changes.  \n  * True if device is handset and toggle button is shown.\n  */\n  public isHandset$: Observable = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  /**\n  * Logs out the user that is currently logged in\n  */\n  public logout() {\n    this.authenticationService.logout();\n  }\n\n  constructor(private breakpointObserver: BreakpointObserver, private dialog: MatDialog, private authenticationService: AuthenticationService, private http: HttpClient, private toastr: ToastrService) {  }\n\n  /**\n  * Shows a dialog to make sure if the user really wants to shut the device down\n  */\n  public shutdownDialog(): void {\n    this.dialog.open(PowerOffDialog, {\n      width: '400px'\n    });\n  }\n\n  /**\n  * On init creates a timer that polls every 10s for new information about Batterylevel, CPU tmp etc. \n  * Shows an error notification if it fails.\n  */\n  ngOnInit() {\n    timer(0, 10000)\n      .pipe(\n        switchMap(() => from(this.http.get(AppConfig.apiUrl + \"/getSystemInfos\"))),\n        )\n      .subscribe((data: any) => {\n\n        this.heat = data.temp\n        this.batteryLevel = data.battery.value;\n\n        let val = parseInt(data.battery.value)\n        this.batteryIcon = \"battery\"\n        if (data.charging) {\n          this.batteryIcon += \"_charging\"\n        }\n        if (val  {\n        console.log(\"Error while retreaving data\", response);\n        this.toastr.error(response, \"Error while getting battery data\");\n\n      }\n    );\n    this.loggedIn = this.authenticationService.isLoggedIn();\n\n    // Set up Listener to remove log out icon\n    this.authenticationService.getCurrentUserObservable().subscribe(val =>\n      this.loggedIn = this.authenticationService.isLoggedIn()\n    );\n\n    this.isHandset$.subscribe(handset => this.isToggleEnabled = handset);\n  }\n}\n\n\n\n\n\n\n\n\n/**\n* Confirmation dialog to make sure if the user really wants to shut down device.\n*/\n@Component({\n  selector: 'app-power_off_dialog',\n  templateUrl: './power_off_dialog.component.html',\n})\nexport class PowerOffDialog {\n\n  constructor(\n    public http: HttpClient,\n    public dialogRef: MatDialogRef,\n    private toastr: ToastrService\n  ) { }\n\n  onNoClick(): void {\n    this.dialogRef.close(false);\n  }\n  /**\n  * Sends shutdown request to backend,\n  */\n  onYesClick(): void {\n    this.http.get(AppConfig.apiUrl + \"/shutdown\", { responseType: 'text' })\n      .subscribe(\n        (val) => {\n          this.toastr.success('Powering Off');\n          this.dialogRef.close(true);\n        },\n        response => {\n          this.toastr.error(response, \"Error\");\n          this.dialogRef.close(false);\n        });\n  }\n}\n\n    \n\n    \n        \n  \n    Menu\n    \n      \n\n      \n\n    \n  \n  \n    \n\n      \n        menu\n      \n      Pulp Demonstrator\n      \n       \n\n      \n        {{heat}}\n      \n      \n        \n          {{batteryIcon}}\n        \n        \n          {{batteryLevel}}%\n        \n      \n      \n        \n          \n            power_settings_new\n          \n        \n      \n       -->\n\n    \n\n    \n\n  \n\n\n    \n\n    \n                \n                    ./my-nav.component.css\n                \n                .sidenav-container {\n  height: 100%;\n}\n\n.sidenav {\n  width: 200px;\n}\n\n.sidenav .mat-toolbar {\n  background: inherit;\n}\n\n.mat-toolbar.mat-primary {\n  position: sticky;\n  top: 0;\n  z-index: 1;\n}\n\n.spacer {\n  flex: 1 1 auto;\n}\n\n.nav-icon {\n  padding-right: 5px;\n}\n\n.mat-sidenav-container {\n  height: 100%;\n}\n\n.list-item-active {\n  color: #673ab7;\n  background-color: #f2f2f2;\n}\n\n.btn-circle {\n  width: 30px;\n  height: 30px;\n  padding: 6px 0px;\n  border-radius: 15px;\n  text-align: center;\n  font-size: 12px;\n  line-height: 1.42857;\n  color: white;\n  background-color: DarkRed;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Menu                                          menu            Pulp Demonstrator                           {{heat}}                              {{batteryIcon}}                          {{batteryLevel}}%                                                  power_settings_new                               -->          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartFormComponent', 'selector': 'app-chart-form'},{'name': 'ConfirmDialog', 'selector': 'app-confirm-dialog'},{'name': 'ControlSliderComponent', 'selector': 'app-control-slider'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GeneralSettingsComponent', 'selector': 'app-general-settings'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MDashboardComponent', 'selector': 'app-m-dashboard'},{'name': 'MeasurementConfigurationComponent', 'selector': 'app-measurement-config'},{'name': 'MenuListItemComponent', 'selector': 'app-menu-list-item'},{'name': 'MyNavComponent', 'selector': 'app-my-nav'},{'name': 'PowerOffDialog', 'selector': 'app-power_off_dialog'},{'name': 'SupplyVoltagesComponent', 'selector': 'app-supply-voltages'},{'name': 'VideostreamComponent', 'selector': 'app-videostream'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MyNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NavItem.html":{"url":"interfaces/NavItem.html","title":"interface - NavItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NavItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/navigation/menu-list-item/nav-item.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        children\n                                \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                        displayName\n                                \n                                \n                                        iconName\n                                \n                                \n                                        loginRequired\n                                \n                                \n                                            Optional\n                                        route\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:         NavItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NavItem[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconName\n                                    \n                                \n                                \n                                    \n                                        iconName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loginRequired\n                                    \n                                \n                                \n                                    \n                                        loginRequired:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface NavItem {\n  displayName: string;\n  disabled?: boolean;\n  iconName: string;\n  route?: string;\n  children?: NavItem[];\n  loginRequired:boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PowerOffDialog.html":{"url":"components/PowerOffDialog.html","title":"component - PowerOffDialog","body":"\n                   \n\n\n\n\n\n  Components\n  PowerOffDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navigation/my-nav.component.ts\n\n\n    \n        Description\n    \n    \n        Confirmation dialog to make sure if the user really wants to shut down device.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-power_off_dialog\n            \n\n\n\n\n            \n                templateUrl\n                ./power_off_dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                            \n                                onYesClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, dialogRef: MatDialogRef, toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/navigation/my-nav.component.ts:212\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navigation/my-nav.component.ts:220\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onYesClick\n                        \n                        \n                    \n                \n            \n            \n                \nonYesClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navigation/my-nav.component.ts:226\n                \n            \n\n\n            \n                \n                    Sends shutdown request to backend,\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/my-nav.component.ts:216\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/my-nav.component.ts:215\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable, timer, from } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { AuthenticationService } from '../_services';\nimport { NavItem } from './menu-list-item/nav-item';\nimport { AppConfig } from '../_services/app.config';\nimport { ToastrService } from 'ngx-toastr';\nimport { HttpClient } from '@angular/common/http';\nimport { MatDialogRef, MatDialog } from '@angular/material';\n\n\ninterface ROUTE {\n  icon?: string;\n  route?: string;\n  title?: string;\n}\n\n/**\n* The navigation component. \n* Creates a sidebar with different components and a toolbar showing battery percentage, log out button and temperature\n*/\n@Component({\n  selector: 'app-my-nav',\n  templateUrl: './my-nav.component.html',\n  styleUrls: ['./my-nav.component.css']\n})\nexport class MyNavComponent {\n  /**\n  * List containing all items shown in the sidebar\n  */\n  public navItems: NavItem[] = [\n    {\n      displayName: 'Dashboard',\n      iconName: 'dashboard',\n      route: '/dashboard',\n      loginRequired: false,\n    }, {\n      displayName: 'Video',\n      iconName: 'videocam',\n      route: '/video',\n      loginRequired: false,\n    }, {\n      displayName: 'Settings',\n      iconName: 'settings',\n      route: '/settings',\n      loginRequired: true,\n      children: [{\n        displayName: 'Charts',\n        iconName: 'show_chart',\n        route: '/chartsettings',\n        loginRequired: true,\n      },\n      {\n        displayName: 'Supply Voltages',\n        iconName: 'power',\n        route: '/settings',\n        loginRequired: true,\n      },\n      {\n        displayName: 'Measurement',\n        iconName: 'flash_on',\n        route: '/measDevices',\n        loginRequired: true,\n      }, {\n        displayName: \"General\",\n        iconName: 'settings_input_antenna',\n        route: 'general',\n        loginRequired: true\n      },\n      {\n        displayName: 'Editor',\n        iconName: 'edit',\n        route: '/editor',\n        loginRequired: true,\n      }]\n    }\n\n\n  ];\n\n  /**\n  * List containing all \"big\" dropdown navigation objects.\n  */\n  public routes: ROUTE[] = [\n    {\n      icon: 'dashboard',\n      route: '/dashboard',\n      title: 'Dashboard',\n    },\n    {\n      icon: 'videocam',\n      route: '/video',\n      title: 'Video',\n    },\n    {\n      icon: 'settings',\n      route: '/settings',\n      title: 'Settings',\n    }\n  ];\n\n\n\n  /**\n  * flag to show if user is logged or not. \n  * Used to show/hide the logout button\n  */\n  public loggedIn: boolean;\n  /**\n  * flag to store information about the sidebar.  \n  * if false, sidebar is always visible, if ture, sidebar can be hidden by pressing the toggle button\n  */\n  public isToggleEnabled = false;\n  /**\n  * the current battery level.\n  */\n  public batteryLevel: any = 0;\n  /**\n  * the battery icon. can be critical, loading, normal or just unknown\n  */\n  public batteryIcon: string = \"battery_unknown\";\n  /**\n  * Current heat of the RPI CPU\n  */\n  public heat: string = \"\"\n\n  /**\n  * Observable that gets triggered if screen size changes.  \n  * True if device is handset and toggle button is shown.\n  */\n  public isHandset$: Observable = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  /**\n  * Logs out the user that is currently logged in\n  */\n  public logout() {\n    this.authenticationService.logout();\n  }\n\n  constructor(private breakpointObserver: BreakpointObserver, private dialog: MatDialog, private authenticationService: AuthenticationService, private http: HttpClient, private toastr: ToastrService) {  }\n\n  /**\n  * Shows a dialog to make sure if the user really wants to shut the device down\n  */\n  public shutdownDialog(): void {\n    this.dialog.open(PowerOffDialog, {\n      width: '400px'\n    });\n  }\n\n  /**\n  * On init creates a timer that polls every 10s for new information about Batterylevel, CPU tmp etc. \n  * Shows an error notification if it fails.\n  */\n  ngOnInit() {\n    timer(0, 10000)\n      .pipe(\n        switchMap(() => from(this.http.get(AppConfig.apiUrl + \"/getSystemInfos\"))),\n        )\n      .subscribe((data: any) => {\n\n        this.heat = data.temp\n        this.batteryLevel = data.battery.value;\n\n        let val = parseInt(data.battery.value)\n        this.batteryIcon = \"battery\"\n        if (data.charging) {\n          this.batteryIcon += \"_charging\"\n        }\n        if (val  {\n        console.log(\"Error while retreaving data\", response);\n        this.toastr.error(response, \"Error while getting battery data\");\n\n      }\n    );\n    this.loggedIn = this.authenticationService.isLoggedIn();\n\n    // Set up Listener to remove log out icon\n    this.authenticationService.getCurrentUserObservable().subscribe(val =>\n      this.loggedIn = this.authenticationService.isLoggedIn()\n    );\n\n    this.isHandset$.subscribe(handset => this.isToggleEnabled = handset);\n  }\n}\n\n\n\n\n\n\n\n\n/**\n* Confirmation dialog to make sure if the user really wants to shut down device.\n*/\n@Component({\n  selector: 'app-power_off_dialog',\n  templateUrl: './power_off_dialog.component.html',\n})\nexport class PowerOffDialog {\n\n  constructor(\n    public http: HttpClient,\n    public dialogRef: MatDialogRef,\n    private toastr: ToastrService\n  ) { }\n\n  onNoClick(): void {\n    this.dialogRef.close(false);\n  }\n  /**\n  * Sends shutdown request to backend,\n  */\n  onYesClick(): void {\n    this.http.get(AppConfig.apiUrl + \"/shutdown\", { responseType: 'text' })\n      .subscribe(\n        (val) => {\n          this.toastr.success('Powering Off');\n          this.dialogRef.close(true);\n        },\n        response => {\n          this.toastr.error(response, \"Error\");\n          this.dialogRef.close(false);\n        });\n  }\n}\n\n    \n\n    \n        Power Off\n\n\n  Are you sure you want to Power off the device ?\n\n\n  Cancel\n  Power Off\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Power Off  Are you sure you want to Power off the device ?  Cancel  Power Off'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartFormComponent', 'selector': 'app-chart-form'},{'name': 'ConfirmDialog', 'selector': 'app-confirm-dialog'},{'name': 'ControlSliderComponent', 'selector': 'app-control-slider'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GeneralSettingsComponent', 'selector': 'app-general-settings'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MDashboardComponent', 'selector': 'app-m-dashboard'},{'name': 'MeasurementConfigurationComponent', 'selector': 'app-measurement-config'},{'name': 'MenuListItemComponent', 'selector': 'app-menu-list-item'},{'name': 'MyNavComponent', 'selector': 'app-my-nav'},{'name': 'PowerOffDialog', 'selector': 'app-power_off_dialog'},{'name': 'SupplyVoltagesComponent', 'selector': 'app-supply-voltages'},{'name': 'VideostreamComponent', 'selector': 'app-videostream'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PowerOffDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ROUTE.html":{"url":"interfaces/ROUTE.html","title":"interface - ROUTE","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ROUTE\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/navigation/my-nav.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        route\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable, timer, from } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { AuthenticationService } from '../_services';\nimport { NavItem } from './menu-list-item/nav-item';\nimport { AppConfig } from '../_services/app.config';\nimport { ToastrService } from 'ngx-toastr';\nimport { HttpClient } from '@angular/common/http';\nimport { MatDialogRef, MatDialog } from '@angular/material';\n\n\ninterface ROUTE {\n  icon?: string;\n  route?: string;\n  title?: string;\n}\n\n/**\n* The navigation component. \n* Creates a sidebar with different components and a toolbar showing battery percentage, log out button and temperature\n*/\n@Component({\n  selector: 'app-my-nav',\n  templateUrl: './my-nav.component.html',\n  styleUrls: ['./my-nav.component.css']\n})\nexport class MyNavComponent {\n  /**\n  * List containing all items shown in the sidebar\n  */\n  public navItems: NavItem[] = [\n    {\n      displayName: 'Dashboard',\n      iconName: 'dashboard',\n      route: '/dashboard',\n      loginRequired: false,\n    }, {\n      displayName: 'Video',\n      iconName: 'videocam',\n      route: '/video',\n      loginRequired: false,\n    }, {\n      displayName: 'Settings',\n      iconName: 'settings',\n      route: '/settings',\n      loginRequired: true,\n      children: [{\n        displayName: 'Charts',\n        iconName: 'show_chart',\n        route: '/chartsettings',\n        loginRequired: true,\n      },\n      {\n        displayName: 'Supply Voltages',\n        iconName: 'power',\n        route: '/settings',\n        loginRequired: true,\n      },\n      {\n        displayName: 'Measurement',\n        iconName: 'flash_on',\n        route: '/measDevices',\n        loginRequired: true,\n      }, {\n        displayName: \"General\",\n        iconName: 'settings_input_antenna',\n        route: 'general',\n        loginRequired: true\n      },\n      {\n        displayName: 'Editor',\n        iconName: 'edit',\n        route: '/editor',\n        loginRequired: true,\n      }]\n    }\n\n\n  ];\n\n  /**\n  * List containing all \"big\" dropdown navigation objects.\n  */\n  public routes: ROUTE[] = [\n    {\n      icon: 'dashboard',\n      route: '/dashboard',\n      title: 'Dashboard',\n    },\n    {\n      icon: 'videocam',\n      route: '/video',\n      title: 'Video',\n    },\n    {\n      icon: 'settings',\n      route: '/settings',\n      title: 'Settings',\n    }\n  ];\n\n\n\n  /**\n  * flag to show if user is logged or not. \n  * Used to show/hide the logout button\n  */\n  public loggedIn: boolean;\n  /**\n  * flag to store information about the sidebar.  \n  * if false, sidebar is always visible, if ture, sidebar can be hidden by pressing the toggle button\n  */\n  public isToggleEnabled = false;\n  /**\n  * the current battery level.\n  */\n  public batteryLevel: any = 0;\n  /**\n  * the battery icon. can be critical, loading, normal or just unknown\n  */\n  public batteryIcon: string = \"battery_unknown\";\n  /**\n  * Current heat of the RPI CPU\n  */\n  public heat: string = \"\"\n\n  /**\n  * Observable that gets triggered if screen size changes.  \n  * True if device is handset and toggle button is shown.\n  */\n  public isHandset$: Observable = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  /**\n  * Logs out the user that is currently logged in\n  */\n  public logout() {\n    this.authenticationService.logout();\n  }\n\n  constructor(private breakpointObserver: BreakpointObserver, private dialog: MatDialog, private authenticationService: AuthenticationService, private http: HttpClient, private toastr: ToastrService) {  }\n\n  /**\n  * Shows a dialog to make sure if the user really wants to shut the device down\n  */\n  public shutdownDialog(): void {\n    this.dialog.open(PowerOffDialog, {\n      width: '400px'\n    });\n  }\n\n  /**\n  * On init creates a timer that polls every 10s for new information about Batterylevel, CPU tmp etc. \n  * Shows an error notification if it fails.\n  */\n  ngOnInit() {\n    timer(0, 10000)\n      .pipe(\n        switchMap(() => from(this.http.get(AppConfig.apiUrl + \"/getSystemInfos\"))),\n        )\n      .subscribe((data: any) => {\n\n        this.heat = data.temp\n        this.batteryLevel = data.battery.value;\n\n        let val = parseInt(data.battery.value)\n        this.batteryIcon = \"battery\"\n        if (data.charging) {\n          this.batteryIcon += \"_charging\"\n        }\n        if (val  {\n        console.log(\"Error while retreaving data\", response);\n        this.toastr.error(response, \"Error while getting battery data\");\n\n      }\n    );\n    this.loggedIn = this.authenticationService.isLoggedIn();\n\n    // Set up Listener to remove log out icon\n    this.authenticationService.getCurrentUserObservable().subscribe(val =>\n      this.loggedIn = this.authenticationService.isLoggedIn()\n    );\n\n    this.isHandset$.subscribe(handset => this.isToggleEnabled = handset);\n  }\n}\n\n\n\n\n\n\n\n\n/**\n* Confirmation dialog to make sure if the user really wants to shut down device.\n*/\n@Component({\n  selector: 'app-power_off_dialog',\n  templateUrl: './power_off_dialog.component.html',\n})\nexport class PowerOffDialog {\n\n  constructor(\n    public http: HttpClient,\n    public dialogRef: MatDialogRef,\n    private toastr: ToastrService\n  ) { }\n\n  onNoClick(): void {\n    this.dialogRef.close(false);\n  }\n  /**\n  * Sends shutdown request to backend,\n  */\n  onYesClick(): void {\n    this.http.get(AppConfig.apiUrl + \"/shutdown\", { responseType: 'text' })\n      .subscribe(\n        (val) => {\n          this.toastr.success('Powering Off');\n          this.dialogRef.close(true);\n        },\n        response => {\n          this.toastr.error(response, \"Error\");\n          this.dialogRef.close(false);\n        });\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SupplyVoltagesComponent.html":{"url":"components/SupplyVoltagesComponent.html","title":"component - SupplyVoltagesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SupplyVoltagesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/supply-voltages/supply-voltages.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to configure the different supply voltages on the board. \nLets the user disable/enable different supplies and choose their voltages\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-supply-voltages\n            \n\n            \n                styleUrls\n                ./supply-voltages.component.css\n            \n\n\n\n            \n                templateUrl\n                ./supply-voltages.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    validInputs\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/supply-voltages/supply-voltages.component.ts:99\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/supply-voltages/supply-voltages.component.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/supply-voltages/supply-voltages.component.ts:106\n                \n            \n\n\n            \n                \n                    Opens the confirmation dialog to make sure if the user wants to make the changes\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/supply-voltages/supply-voltages.component.ts:101\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IAppConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/supply-voltages/supply-voltages.component.ts:99\n                            \n                        \n\n                \n                    \n                        Object containing the settings object.\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        validInputs\n                    \n                \n\n                \n                    \n                        getvalidInputs()\n                    \n                \n                            \n                                \n                                    Defined in src/app/supply-voltages/supply-voltages.component.ts:132\n                                \n                            \n                    \n                        \n                                Checks if the inputs are valid and can be set\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { AppConfig } from '../_services/app.config';\nimport { IAppConfig } from '../_models/app-config.model';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { VarSupply } from '../_models/varSupply.model';\nimport { HttpClient} from '@angular/common/http';\nimport { ToastrService } from 'ngx-toastr';\n\n\n/**\n* Inteface used to define the structure of the data that is shown in the confirmationdialog\n*/\ninterface ConfirmationDialogData {\n  /**\n  * Array containing name, oldValue and newValue information. These information will be shown like follows:\n  * @example\n  * [name] : [oldValue] -> [newValue]\n  */\n    values: Array,\n    /**\n    * The Object that gets send to the backend if the dialog is confirmed.\n    *  this will be the content of the post request\n    */\n    submitObject: any,\n    /**\n    *  The part of the url following the /api  which will get called if the dialog is confirmed\n    */\n    callPath: string\n}\n/**\n* General Dialog used to show and confirm changes to an object.\n*/\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n})\nexport class ConfirmDialog {\n\n  /**\n  * Creates the dialog.\n  * @param {HttpClient} http httpclient used to send api requests to the backend\n  * @param {MatDialogRef} dialogRef reference to show the dialog\n  * @param{ConfirmationDialogData} data Data containing the changes the user needs to confirm.\n  */\n  constructor(\n    public http: HttpClient,\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: ConfirmationDialogData,\n    private toastr: ToastrService\n  ) { }\n\n  /**\n  * If no is clicked , close dialog and notify listeners\n  */\n  public onNoClick(): void {\n    this.dialogRef.close(false);\n  }\n\n  /**\n  * Calls backendPath with the submit object. Shows notification to inform if request was successful\n  */\n  public onYesClick(): void {\n    this.http.post(AppConfig.apiUrl + this.data.callPath, this.data.submitObject, { responseType: 'text' })\n      .subscribe(\n        (val) => {\n          console.log(\"POST call successful value returned in body\",\n            val);\n          this.toastr.success('Values set successfully');\n          this.dialogRef.close(true);\n        },\n        response => {\n          console.log(response)\n          this.toastr.error(response, \"Could not set Values\");\n          this.dialogRef.close(false);\n        });\n  }\n}\n\n\n\n\n/**\n* Component used to configure the different supply voltages on the board. \n* Lets the user disable/enable different supplies and choose their voltages\n*/\n@Component({\n  selector: 'app-supply-voltages',\n  templateUrl: './supply-voltages.component.html',\n  styleUrls: ['./supply-voltages.component.css']\n})\nexport class SupplyVoltagesComponent implements OnInit {\n  /**\n  * Object containing the settings object.\n  */\n  public settings: IAppConfig;\n\n  constructor(public dialog: MatDialog) { }\n\n  /**\n  * Opens the confirmation dialog to make sure if the user wants to make the changes\n  */\n  public openDialog(): void {\n    // Map supplies obejct to list with old and new value which will be displayed in the dialog\n    let updates = this.settings.supplies.map(supply => {\n      if (supply.enabled) {\n        return {\n          name: supply.name,\n          oldValue: supply.currentVoltage,\n          newValue: supply.desiredVoltage\n        };\n      }\n      return {\n        name: supply.name,\n        oldValue: supply.currentVoltage,\n        newValue: \"Disabled\"\n      };\n    });\n\n    this.dialog.open(ConfirmDialog, {\n      width: '400px',\n      data: { values: updates, submitObject: this.settings.supplies, callPath: \"/updateDeviceVoltages\" }\n    });\n  }\n\n  /**\n  * Checks if the inputs are valid and can be set\n  */\n  get validInputs(): boolean {\n    for (let device of this.settings.supplies) {\n      if (device.desiredVoltage  device.maxValue) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n\n  ngOnInit() {\n    this.settings = AppConfig.settings;\n  }\n\n  /**\n  * @ignore\n  */\n  onSubmit() {\n    for (let sup of this.settings.supplies) {\n      if (sup.maxValueChecked) {\n        sup.desiredVoltage = sup.maxFix;\n      }\n    }\n    this.openDialog();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Supply Voltages\n    \n    \n      \n        \n          \n             \n          \n\n          \n            Submit\n          \n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./supply-voltages.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Supply Voltages                                                                             Submit                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartFormComponent', 'selector': 'app-chart-form'},{'name': 'ConfirmDialog', 'selector': 'app-confirm-dialog'},{'name': 'ControlSliderComponent', 'selector': 'app-control-slider'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GeneralSettingsComponent', 'selector': 'app-general-settings'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MDashboardComponent', 'selector': 'app-m-dashboard'},{'name': 'MeasurementConfigurationComponent', 'selector': 'app-measurement-config'},{'name': 'MenuListItemComponent', 'selector': 'app-menu-list-item'},{'name': 'MyNavComponent', 'selector': 'app-my-nav'},{'name': 'PowerOffDialog', 'selector': 'app-power_off_dialog'},{'name': 'SupplyVoltagesComponent', 'selector': 'app-supply-voltages'},{'name': 'VideostreamComponent', 'selector': 'app-videostream'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SupplyVoltagesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/user.ts\n        \n\n            \n                Description\n            \n            \n                Custom user object to store information about the user that is currently logged in\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                token\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/user.ts:20\n                            \n                        \n\n                \n                    \n                        currently not used\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/user.ts:8\n                            \n                        \n\n                \n                    \n                        currently not used\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/user.ts:24\n                            \n                        \n\n                \n                    \n                        currently not used\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/user.ts:16\n                            \n                        \n\n                \n                    \n                        currently not used\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/user.ts:28\n                            \n                        \n\n                \n                    \n                        JWT token. Gets returned from backend to verify that user is logged in\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/user.ts:12\n                            \n                        \n\n                \n                    \n                        currently not used\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    /**\n    * currently not used\n    */\n    id: number;\n    /**\n    * currently not used\n    */\n    username: string;\n    /**\n    * currently not used\n    */\n    password: string;\n    /**\n    * currently not used\n    */\n    firstName: string;\n    /**\n    * currently not used\n    */\n    lastName: string;\n    /**\n    * JWT token. Gets returned from backend to verify that user is logged in\n    */\n    token?: {\n        /**\n        * The jwt token\n        */\n        jwt : string,\n        /**\n        * expiry date\n        */\n        JWT_EXPIRES : string\n      };\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VarSupply.html":{"url":"interfaces/VarSupply.html","title":"interface - VarSupply","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  VarSupply\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/varSupply.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for the config entry concerning VarSupplies\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currentVoltage\n                                \n                                \n                                            Optional\n                                        desiredVoltage\n                                \n                                \n                                        enabled\n                                \n                                \n                                            Optional\n                                        maxFix\n                                \n                                \n                                        maxValue\n                                \n                                \n                                            Optional\n                                        maxValueChecked\n                                \n                                \n                                        minValue\n                                \n                                \n                                        name\n                                \n                                \n                                        stepSize\n                                \n                                \n                                        unit\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentVoltage\n                                    \n                                \n                                \n                                    \n                                        currentVoltage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current voltage value\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desiredVoltage\n                                    \n                                \n                                \n                                    \n                                        desiredVoltage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Voltage we want to set on the varsuplly\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                    \n                                \n                                \n                                    \n                                        enabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Boolean if supply is enabled\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxFix\n                                    \n                                \n                                \n                                    \n                                        maxFix:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Max value that can be achieved by clicking the checkbox\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxValue\n                                    \n                                \n                                \n                                    \n                                        maxValue:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    highest value for the voltage that can be set using the slider\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxValueChecked\n                                    \n                                \n                                \n                                    \n                                        maxValueChecked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If maxvalue is checked. Since there is a bug that in full scale mode we output 3.5V instead of 3.3 we had to create this flag\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minValue\n                                    \n                                \n                                \n                                    \n                                        minValue:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Lowest value for the voltage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the VarSupply. Must be unique and corelate with the name given in the backend\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stepSize\n                                    \n                                \n                                \n                                    \n                                        stepSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Min stepsize that the voltage can be increased\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unit\n                                    \n                                \n                                \n                                    \n                                        unit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unit of the var supply. currently only [V] only supported\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface VarSupply {\n  /**\n  * Name of the VarSupply. Must be unique and corelate with the name given in the backend\n  */\n  name:string,\n  /**\n  * Min stepsize that the voltage can be increased\n  */\n  stepSize: number,\n  /**\n  * Current voltage value\n  */\n  currentVoltage:number,\n  /**\n  * Lowest value for the voltage\n  */\n  minValue:number,\n  /**\n  * highest value for the voltage that can be set using the slider\n  */\n  maxValue:number,\n  /**\n  * Unit of the var supply. currently only [V] only supported\n  */\n  unit:string,\n  /**\n  * Boolean if supply is enabled\n  */\n  enabled:boolean,\n  /**\n  * Voltage we want to set on the varsuplly\n  */\n  desiredVoltage?:number,\n  /**\n  * If maxvalue is checked. Since there is a bug that in full scale mode we output 3.5V instead of 3.3 we had to create this flag\n  */\n  maxValueChecked?:boolean,\n  /**\n  * Max value that can be achieved by clicking the checkbox\n  */\n  maxFix?:number\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VideostreamComponent.html":{"url":"components/VideostreamComponent.html","title":"component - VideostreamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  VideostreamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/videostream/videostream.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to show a simple picture - video feed from the backend.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-videostream\n            \n\n            \n                styleUrls\n                ./videostream.component.css\n            \n\n\n\n            \n                templateUrl\n                ./videostream.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"live-video-demo\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/videostream/videostream.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {  Component,} from '@angular/core';\n\n/**\n* Component used to show a simple picture - video feed from the backend.\n*/\n@Component({\n  selector: 'app-videostream',\n  templateUrl: './videostream.component.html',\n  styleUrls: ['./videostream.component.css']\n})\nexport class VideostreamComponent {\n  title = \"live-video-demo\";\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./videostream.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartFormComponent', 'selector': 'app-chart-form'},{'name': 'ConfirmDialog', 'selector': 'app-confirm-dialog'},{'name': 'ControlSliderComponent', 'selector': 'app-control-slider'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'GeneralSettingsComponent', 'selector': 'app-general-settings'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MDashboardComponent', 'selector': 'app-m-dashboard'},{'name': 'MeasurementConfigurationComponent', 'selector': 'app-measurement-config'},{'name': 'MenuListItemComponent', 'selector': 'app-menu-list-item'},{'name': 'MyNavComponent', 'selector': 'app-my-nav'},{'name': 'PowerOffDialog', 'selector': 'app-power_off_dialog'},{'name': 'SupplyVoltagesComponent', 'selector': 'app-supply-voltages'},{'name': 'VideostreamComponent', 'selector': 'app-videostream'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VideostreamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/_guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/_helpers/error.interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/_helpers/jwt.interceptor.ts\n            \n            interceptor\n            JwtInterceptor\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/_models/app-config.model.ts\n            \n            interface\n            IAppConfig\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/_models/app-config.model.ts\n            \n            interface\n            MeasurementDevice\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/_models/chartDataset.model.ts\n            \n            interface\n            ChartDataset\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/app/_models/chartDataset.model.ts\n            \n            interface\n            ChartJsDataset\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/_models/chartObject.model.ts\n            \n            interface\n            ChartAxis\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/_models/chartObject.model.ts\n            \n            interface\n            ChartObject\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/_models/user.ts\n            \n            class\n            User\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/_models/varSupply.model.ts\n            \n            interface\n            VarSupply\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/_services/MeasurementUpdateService.ts\n            \n            injectable\n            MeasurementUpdateService\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                src/app/_services/app.config.ts\n            \n            injectable\n            AppConfig\n            \n                81 %\n                (9/11)\n            \n        \n        \n            \n                \n                src/app/_services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            initializeApp\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/chart-form/chart-form.component.ts\n            \n            component\n            ChartFormComponent\n            \n                86 %\n                (13/15)\n            \n        \n        \n            \n                \n                src/app/editor/editor.component.ts\n            \n            component\n            EditorComponent\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/app/general-settings/general-settings.component.ts\n            \n            component\n            GeneralSettingsComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                53 %\n                (7/13)\n            \n        \n        \n            \n                \n                src/app/m-dashboard/chart/chart.component.ts\n            \n            component\n            ChartComponent\n            \n                90 %\n                (20/22)\n            \n        \n        \n            \n                \n                src/app/m-dashboard/chart/chart.component.ts\n            \n            interface\n            DataEntry\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/m-dashboard/chart/chart.component.ts\n            \n            function\n            scaleToSiUnit\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/m-dashboard/m-dashboard.component.ts\n            \n            component\n            MDashboardComponent\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/measurement-config/measurement-config.component.ts\n            \n            component\n            MeasurementConfigurationComponent\n            \n                75 %\n                (9/12)\n            \n        \n        \n            \n                \n                src/app/navigation/menu-list-item/menu-list-item.component.ts\n            \n            component\n            MenuListItemComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/navigation/menu-list-item/nav-item.ts\n            \n            interface\n            NavItem\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/navigation/my-nav.component.ts\n            \n            component\n            MyNavComponent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                src/app/navigation/my-nav.component.ts\n            \n            component\n            PowerOffDialog\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/navigation/my-nav.component.ts\n            \n            interface\n            ROUTE\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/supply-voltages/control-slider/control-slider.component.ts\n            \n            component\n            ControlSliderComponent\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/supply-voltages/supply-voltages.component.ts\n            \n            component\n            ConfirmDialog\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/supply-voltages/supply-voltages.component.ts\n            \n            component\n            SupplyVoltagesComponent\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/supply-voltages/supply-voltages.component.ts\n            \n            interface\n            ConfirmationDialogData\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/videostream/videostream.component.ts\n            \n            component\n            VideostreamComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animation : \n        \n            @angular/animations : ~7.2.0\n        \n            @angular/cdk : ^7.3.3\n        \n            @angular/common : ~7.2.0\n        \n            @angular/compiler : ~7.2.0\n        \n            @angular/core : ~7.2.0\n        \n            @angular/forms : ^7.2.14\n        \n            @angular/material : ^7.3.3\n        \n            @angular/platform-browser : ~7.2.0\n        \n            @angular/platform-browser-dynamic : ~7.2.0\n        \n            @angular/router : ~7.2.0\n        \n            @auth0/angular-jwt : ^2.1.0\n        \n            @types/socket.io-client : ^1.4.32\n        \n            ang-jsoneditor : ^1.7.4\n        \n            angular-cli : ^1.0.0-beta.28.3\n        \n            bootstrap : ^4.3.1\n        \n            bootstrap-slider : ^10.6.1\n        \n            chart : ^0.1.2\n        \n            chart.js : ^2.7.3\n        \n            core-js : ^2.5.4\n        \n            fontawesome : ^5.6.3\n        \n            hammerjs : ^2.0.8\n        \n            jquery : ^3.3.1\n        \n            jsoneditor : ^5.32.4\n        \n            material-design-icons : ^3.0.1\n        \n            ng : 0.0.0\n        \n            ngx-bootstrap-slider : ^1.7.0\n        \n            ngx-socket-io : ^2.1.1\n        \n            ngx-toastr : ^10.0.2\n        \n            popper.js : ^1.14.7\n        \n            rxjs : ~6.3.3\n        \n            socket.io-client : ^2.2.0\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            initializeApp   (src/.../app.module.ts)\n                        \n                        \n                            scaleToSiUnit   (src/.../chart.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            initializeApp\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeApp(appConfig)\n                \n            \n\n\n\n\n            \n                \n                    loads the config from the backend.\nNeeds to be called before starting the rest of the application\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    appConfig\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/m-dashboard/chart/chart.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            scaleToSiUnit\n                        \n                        \n                    \n                \n            \n            \n                \nscaleToSiUnit(data)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTestApp\nThis project was generated with Angular CLI version 7.3.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChartComponent\n\nChartComponent\n\nAppModule -->\n\nChartComponent->AppModule\n\n\n\n\n\nChartFormComponent\n\nChartFormComponent\n\nAppModule -->\n\nChartFormComponent->AppModule\n\n\n\n\n\nConfirmDialog\n\nConfirmDialog\n\nAppModule -->\n\nConfirmDialog->AppModule\n\n\n\n\n\nControlSliderComponent\n\nControlSliderComponent\n\nAppModule -->\n\nControlSliderComponent->AppModule\n\n\n\n\n\nEditorComponent\n\nEditorComponent\n\nAppModule -->\n\nEditorComponent->AppModule\n\n\n\n\n\nGeneralSettingsComponent\n\nGeneralSettingsComponent\n\nAppModule -->\n\nGeneralSettingsComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMDashboardComponent\n\nMDashboardComponent\n\nAppModule -->\n\nMDashboardComponent->AppModule\n\n\n\n\n\nMeasurementConfigurationComponent\n\nMeasurementConfigurationComponent\n\nAppModule -->\n\nMeasurementConfigurationComponent->AppModule\n\n\n\n\n\nMenuListItemComponent\n\nMenuListItemComponent\n\nAppModule -->\n\nMenuListItemComponent->AppModule\n\n\n\n\n\nMyNavComponent\n\nMyNavComponent\n\nAppModule -->\n\nMyNavComponent->AppModule\n\n\n\n\n\nPowerOffDialog\n\nPowerOffDialog\n\nAppModule -->\n\nPowerOffDialog->AppModule\n\n\n\n\n\nSupplyVoltagesComponent\n\nSupplyVoltagesComponent\n\nAppModule -->\n\nSupplyVoltagesComponent->AppModule\n\n\n\n\n\nVideostreamComponent\n\nVideostreamComponent\n\nAppModule -->\n\nVideostreamComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAppConfig\n\nAppConfig\n\nAppModule -->\n\nAppConfig->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nAppModule -->\n\nJwtInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        9 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
